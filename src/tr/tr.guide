@database "tr.guide"
@node main
                        _______ ______  
                       (_______|_____ \ 
                           _    _____) )
                          | |  |  __  / 
                          | |  | |  \ \ 
                          |_|  |_|   |_|
 ________         ______                  __     __        ______          __
/_  __/ /  ___   /_  __/______ ____  ___ / /__ _/ /____   /_  __/__  ___  / /
 / / / _ \/ -_)   / / / __/ _ `/ _ \(_-</ / _ `/ __/ -_)   / / / _ \/ _ \/ / 
/_/ /_//_/\__/   /_/ /_/  \_,_/_//_/___/_/\_,_/\__/\__/   /_/  \___/\___/_/  
                                                                             
                           @{" Usage " link usage}
                           @{" Requirements " link req}
                           @{" Distribution " link dist}
                           @{" Authors " link both}
                  ___           __         __  __       
                 / _ \___  ____/ /____ ___/ / / /  __ __
                / ___/ _ \/ __/ __/ -_) _  / / _ \/ // /
               /_/   \___/_/  \__/\__/\_,_/ /_.__/\_, / 
      ___  ___ _____ _  _   ___       __ _       /___/                     
     | _ )/ _ \_   _| || | / __| ___ / _| |___ __ ____ _ _ _ ___ 
     | _ \ (_) || | | __ | \__ \/ _ \  _|  _\ V  V / _` | '_/ -_)
     |___/\___/ |_| |_||_| |___/\___/_|  \__|\_/\_/\__,_|_| \___|
                                                            
@endnode



@node usage
@{fg highlight}
     Tr  (Translate)
@{fg text}
 Tr is a UNIX tool that examines a file and changes characters within
 it. The version of TR included here is an Amiga port of the FreeBSD
 source. The Man page for Tr is included, but is very cryptic. 

 No external libraries are required.

 Tr can be used from the shell or from within a script. Redirection 
 is supported.

 The following document is the man page from the original GNU source. 
 @{" tr.man " system "run >nil: sys:utilities/amigaguide tr.man"}

@{fg highlight}
General usage from within a DOS Script
@{fg text}

 Tr performs three basic functions on text files:

 -d * Deletes unwanted characters

 -t * Changes characters (Translate from one to another) (default)

 -s * Removes repeated characters (Squeeze repeated characters)
@{fg highlight}
Format
@{fg text}
 Tr can be used in backticks or have it's output redirected. Here are 
 two examples:

 SETENV OUTFILE `tr "A-Z" "a-z" <infile`
 
 tr >outfile "A-Z" "a-z" <infile  

 Both forms will take input from <infile> and convert all upper case 
 letters to lower case. The result is written to <outfile>.

 The examples perform a TRANSLATE operation. The first string "A-Z" 
 is what Tr is looking for in the infile. The second "a-z" is what 
 will be substituted in the outfile.
@{fg highlight}
Examples of TRANSLATING characters
@{fg text}
 The -t switch is not needed for translation. In the following example
 we will change all occurances of "K" to "C".  

 SETENV OUTFILE `tr "K" "C" <infile`

Special characters and punctuation may be specified by preceeding 
them with a backspace. Non printing characters may be specified. Here 
is a list of these characters:

       \a     Control-G
       \b     Control-H
       \f     Control-L
       \n     Control-J
       \r     Control-M
       \t     Control-I
       \v     Control-K
       \ooo   The character with the value given by ooo, which is
              1 to 3 octal digits.
       \\     A backslash.


 To change newlines to carriage returns, use this form:

 SETENV OUTFILE `tr "/n" "/r" <infile`
@{fg highlight}
DELETING CHARACTERS
@{fg text}
 The -d switch makes Tr remove selected characters from a file. The 
 following example will remove all occurances of the letter "X" from a 
 file:

 SETENV OUTFILE `tr -d "X" <infile`
@{fg highlight}
SQUEEZING OUT REPEATED CHARACTERS
@{fg text}
 The -s switch causes Tr to delete repeated characters, leaving only one 
 of the characters in it's place. To demonstrate this, assume the 
 infile is this:

 "Thaaaaats All Folks!"

 To remove the extra a's use this form:

  SETENV OUTFILE `tr -s "a" <infile`
  ECHO $OUTFILE
  Thats All Folks!
 
 This is fine if you know there are extra a's in the file. If 
 you want do a broad based squeeze, try this:

  SETENV OUTFILE `tr -s ":alpha:" <infile`

 This will squeeze out all repeated alpha characters. The :alpha:
 notation is a "character class". These classes are common groupings 
 of character types. They save you a lot of typing. See the man page 
 above for a listing of character classes.
@{fg highlight}
DELETING AND SQUEEZING CHARACTERS
@{fg text}
 The -d and -s switches may be used together. Tr first deletes and 
 then squeezes the result.
@{fg highlight}
COMPLEMENT (the NOT function)
@{fg text}
The -c switch replaces the characters specified with their compliment.
An example:

If you specify "A-Z" with the -c switch, everything BUT A-Z are 
specified. In Amiga terms, this is a NOT function.

 The following example uses the Compliment and Squeeze switches in
 combination. The line will clean up a typical UNIX man page, removing
 all tabs, non printing characters, escape codes, etc., leaving the file 
 clean so it may be viewed properly.

 It does a Squeeze on all characters not specified. An easy way to look
 at this operation is to put all the characters you want unchanged 
 inside the string, and then do a compliment on it.

 CLEANUP A MAN PAGE:

  SETENV OUTFILE `tr -c -s "a-z A-Z 0-9 /n /r /space /punct" <man.page`

 Once you have mastered the basics of Tr, refer to the man page above 
 for more details.
@ENDNODE

@NODE dist

Tr was ported from the original FreeBSD source. Both Software assumes 
no liability for any damage the program may cause. 

Tr may be freely copied and distributed.

Source files are included.
@endnode
@node req

Tr can be used on any Amiga running OS 2.xx and up.
The ixemul.lib is not required.
@endnode




@NODE BOTH
@TITLE "Those guys? Again?"

 If you find any bugs or have any comments, please contact the Authors.
 Email messages will be answered immediately. Snail Mail letters will 
 take longer since we never learned to read.

@{fg highlight}
      C & UNIX Code                  Program Design, GUIs, Docs@{fg text}
      --------------------------     --------------------------
      Will Bow                       Colin Thompson
      1531 Corinth Unit 1            9606 Carroll Cyn. Rd. H9
      West Los Angeles, CA 90025     San Diego, CA 92126
      (310) 478-4913                 (619) 695-2181
      InterNet:wbow@crl.com          InterNet: colin@cts.com

 ------------------------------------------------------------------
@endnode

