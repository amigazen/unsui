DATE(1)                     General Commands Manual                    DATE(1)

NAME
     date – display or set date and time

SYNOPSIS
     date [-d date_string] [-r filename] [-s date_string] [-u] [-h | -V] [+format]
     date [FORMAT/K] [SET/S] [UTC/S] [REFERENCE/K] [DEBUG/S] [POSIX/K/F]
     date ?

DESCRIPTION
     The date utility displays the current date and time, or sets the system
     date and time.  This Amiga implementation provides hybrid POSIX/Amiga
     argument parsing with native Amiga clock integration and full POSIX
     compliance.

     The utility automatically detects whether the user is using POSIX-style
     arguments (starting with -) or Amiga-style arguments, and dispatches
     to the appropriate parser accordingly.

     When invoked without arguments, the date utility displays the current
     date and time in a default format.  Otherwise, depending on the options
     specified, date will set the date and time or print it in a user-defined
     way.

     The date utility displays the date and time read from the Amiga system
     clock.  When used to set the date and time, the system clock is updated
     using native Amiga clock functions.

OPTIONS
     The following options are available:

     -d date_string
             Display the time described by date_string, not 'now'.  The
             date_string can be in various formats:
                   YYYY-MM-DD HH:MM:SS
                   MM/DD/YYYY HH:MM:SS
                   YYYY-MM-DD
                   MM/DD/YYYY
                   HH:MM:SS (uses current date)

     -r filename
             Display the last modification time of filename.  Uses native
             Amiga FileInfoBlock to get file timestamps.

     -s date_string
             Set the time described by date_string.  Supports the same
             formats as -d.

     -u      Display or set the date in UTC (Coordinated Universal Time).
             By default date displays the time in local time.

     -h, -V  Display help and version information.

     --help-format
             Show format specifier help (integrated from datehelp utility).
             Displays a comprehensive list of all available format specifiers
             with their descriptions.

     --dst   Adjust for Daylight Saving Time (integrated from dst2 utility).
             Automatically calculates and applies DST adjustment based on the
             current system clock.  Always keep your BATTERY CLOCK set to
             STANDARD time in your area.

AMIGA SPECIFIC FEATURES
     This implementation includes several Amiga-specific enhancements:

     • Native Amiga clock integration using getclk() and chgclk() APIs
     • Amiga FileInfoBlock integration for file timestamp access
     • Amiga-specific format extensions and color codes
     • Memory-safe resource management with proper cleanup
     • Hybrid argument parsing supporting both POSIX and Amiga styles
     • Daylight Saving Time (DST) automatic adjustment
     • Interactive date/time setting with Amiga-style prompts

     Amiga-style usage:
           date ?
                   Interactive template help
           date FORMAT="%Y-%m-%d %H:%M:%S"
                   Use custom format string
           date SET
                   Interactive date/time setting
           date UTC
                   Use UTC time
           date REFERENCE=filename
                   Show file modification time
           date DEBUG
                   Enable DST adjustment
           date POSIX -d "2024-01-01" +"%Y-%m-%d"
                   Force POSIX parsing with options

FORMAT STRING
     An operand with a leading plus ('+') sign signals a user-defined format
     string which specifies the format in which to display the date and time.
     The format string may contain any of the conversion specifications
     described below, as well as any arbitrary text.

CONVERSION SPECIFICATIONS
     The following conversion specifications are supported:

     %a      Abbreviated weekday name (e.g., Sun, Mon, Tue)
     %A      Full weekday name (e.g., Sunday, Monday, Tuesday)
     %b      Abbreviated month name (e.g., Jan, Feb, Mar)
     %B      Full month name (e.g., January, February, March)
     %c      Date and time representation (e.g., Thu Mar 3 23:05:25 2005)
     %d      Day of month (01..31)
     %D      Date as mm/dd/yy
     %e      Day of month, space padded ( 1..31)
     %F      Full date; same as %Y-%m-%d
     %g      Last two digits of year of ISO week number
     %G      Year of ISO week number
     %h      Same as %b
     %H      Hour (00..23)
     %I      Hour (01..12)
     %j      Day of year (001..366)
     %k      Hour, space padded ( 0..23)
     %l      Hour, space padded ( 1..12)
     %m      Month (01..12)
     %M      Minute (00..59)
     %n      Newline character
     %N      Nanoseconds (000000000..999999999) - shows 000000000 on Amiga
     %p      AM/PM indicator
     %P      Like %p, but lower case
     %r      12-hour time (e.g., 11:11:04 PM)
     %R      24-hour hour and minute; same as %H:%M
     %s      Seconds since 1970-01-01 00:00:00 UTC
     %S      Second (00..60)
     %t      Tab character
     %T      Time; same as %H:%M:%S
     %u      Day of week (1..7); 1 is Monday
     %U      Week number of year, with Sunday as first day of week (00..53)
     %V      ISO week number, with Monday as first day of week (01..53)
     %w      Day of week (0..6); 0 is Sunday
     %W      Week number of year, with Monday as first day of week (00..53)
     %x      Date representation (e.g., 12/31/99)
     %X      Time representation (e.g., 23:13:48)
     %y      Last two digits of year (00..99)
     %Y      Year (e.g., 2024)
     %z      Timezone offset (+hhmm) - shows +0000 on Amiga
     %:z     Timezone offset (+hh:mm) - shows +00:00 on Amiga
     %::z    Timezone offset (+hh:mm:ss) - shows +00:00:00 on Amiga
     %:::z   Timezone offset with : to necessary precision - shows +00:00:00 on Amiga
     %Z      Timezone name - shows timezone from TIMEZONE environment variable

AMIGA EXTENSIONS
     The following Amiga-specific format extensions are available:

     %Q      Greeting and full date/time (e.g., "Good Morning! Today is Monday, January 1st, 2024 at 9:30 AM")
     %K      Full date/time string (e.g., "Today is Monday, January 1st, 2024 at 9:30 AM")
     %x      Date extension (st, nd, rd, th)
     %q      Quote character (")

AMIGA COLOR CODES
     The following color codes are available for enhanced display:

     %0      Blue pen color
     %1      White pen color
     %2      Black pen color
     %3      Orange pen color
     %4      Default colors
     %5      Boldface
     %6      Underline
     %7      Italics
     %)      Color 0 background
     %!      Color 1 background
     %@      Color 2 background
     %#      Color 3 background

ENVIRONMENT
     The following environment variables affect the execution of date:

     TIMEZONE
             Timezone name for display (used with %Z format specifier).

     DEFAULT
             Default format string when no format is specified.

EXIT STATUS
     The date utility exits 0 on success, and >0 if an error occurs.

EXAMPLES
     Display current date and time:
           $ date
           Mon Dec  9 14:30:25 2024

     Display date in custom format:
           $ date "+%Y-%m-%d %H:%M:%S"
           2024-12-09 14:30:25

     Display time described by string:
           $ date -d "2024-01-01 12:00:00"
           Mon Jan  1 12:00:00 2024

     Display file modification time:
           $ date -r myfile.txt
           Mon Dec  9 10:15:30 2024

     Set system date and time:
           $ date -s "2024-12-09 14:30:00"
           [System clock updated]

     Use Amiga-style format with color:
           $ date FORMAT="%3Today is %5%B %d%x, %Y at %H:%M %4"
           Today is December 9th, 2024 at 14:30

     Use Amiga-style interactive help:
           $ date ?
           FORMAT/K,SET/S,UTC/S,REFERENCE/K,DEBUG/S,POSIX/K/F: -h
           Usage (POSIX): date [OPTION]... [+FORMAT] or date [-u] [MMDDhhmm[[CC]YY][.ss]]
           Usage (Amiga): date [FORMAT/K] [SET/S] [UTC/S] [REFERENCE/K] [DEBUG/S] [POSIX/K/F]

     Force POSIX parsing with Amiga-style syntax:
           $ date POSIX -d "2024-01-01" +"%Y-%m-%d"
           2024-01-01

     DST adjustment examples:
           $ date --dst
           Daylight Saving Time adjustment applied.

           $ date --dst
           No Daylight Saving Time adjustment needed.

     DST startup-sequence setup:
           ; Add after readclock command
           date --dst

INSTALLATION
     Copy the integrated date program to the sys:c directory:

           1> copy date c:

     This single binary includes all functionality from the original separate
     datehelp and dst2 utilities, providing a comprehensive date and time
     management solution.

DAYLIGHT SAVINGS TIME
     The date utility provides comprehensive Daylight Saving Time (DST) functionality
     through the --dst option, automatically adjusting the Amiga system clock for
     DST transitions.

     DST Functionality:
     • Automatically calculates DST start and end dates for the current year
     • Checks if daylight saving time is currently in effect
     • Increments the system clock by 1 hour when DST begins
     • Only affects the system clock, not the battery backup clock
     • Remains valid across reboots since battery clock is unchanged

     Usage:
     • Manual DST adjustment: date --dst
     • Automatic startup adjustment: Add to startup-sequence

     Startup Sequence Setup:
     Add this line to your startup-sequence after any commands necessary to
     read your battery backup clock:

           1> date --dst

     Always keep your battery backup clock set for STANDARD time in your area.
     If a command is necessary in the startup-sequence to read the battery clock,
     the 'date --dst' line must follow the readclock command.

     The 'date --dst' command should only be executed once per login session.
     If setup properly, you will NEVER have to do the twice yearly ritual of
     resetting your computer clock for daylight savings time.

     DST Calculation:
     The utility automatically calculates DST start and end dates based on the
     standard US DST rules (second Sunday in March to first Sunday in November).
     The calculation takes into account leap years and properly handles the
     transition periods.

     Integration Notes:
     This DST functionality was originally provided by the separate dst2 utility
     but is now fully integrated into the main date command for convenience and
     consistency.

TIMEZONE SETUP
     Add the following line to your s:startup-sequence file: (if desired)

           setenv TIMEZONE=tzn[:dst]

     where 'tzn' = the current standard timezone for your area.
     (EST, CST, MST, PST, etc)  All three characters must be used.

     where 'dst' = the optional timezone for your area when daylight savings
     time is in-effect.  (EDT, CDT, MDT, PDT, etc)  If your area does not
     observe daylight savings time, then only enter 'tzn' as described above.
     If 'dst' is used, you must use all three characters and use an ':' as
     a field separator.

     Examples:

           1> setenv TIMEZONE=EST:EDT
           1> setenv TIMEZONE=MST:MDT
           1> setenv TIMEZONE=PST

     The TIMEZONE variable must be set exactly as shown or 'date' will
     completely ignore it.  Setting the TIMEZONE is optional, but the current
     timezone will not be displayed if it isn't set.

DEFAULT FORMAT
     Normally the default date display for 'date' is:

           dddddd dd-mmm-yy hh:ss tzn

     If desired, this can be changed to anything you want by setting an
     environmental variable named 'DEFAULT'.  Set DEFAULT to any valid
     formatted date string using the AmigaDOS setenv command.  Example:

           setenv DEFAULT="%Q  %S"

     Then whenever 'date' is executed with no arguments, the default will be
     '%Q  %S' instead of the default as shown above.

SEE ALSO
     time(1), strftime(3), getclk(3), chgclk(3), dos.library(3)

     Related utilities:
     • The --dst option provides the same functionality as the original dst2 utility
     • The --help-format option provides the same functionality as the original datehelp utility
     • Both utilities are now fully integrated into the main date command

STANDARDS
     The date utility conforms to IEEE Std 1003.1-2001 ("POSIX.1") with
     Amiga-specific extensions for enhanced functionality and native
     integration.

HISTORY
     Amiga date command released in unsui POSIX runtime by amigazen project.

     Key improvements in version 2.0:
     • Full POSIX compliance with all standard format specifiers
     • Hybrid POSIX/Amiga argument parsing
     • Native Amiga clock integration
     • Amiga-specific format extensions and color codes
     • Enhanced file timestamp support
     • Interactive date/time setting
     • Daylight Saving Time support (integrated from dst2 utility)
     • Format help system (integrated from datehelp utility)
     • Memory-safe resource management

     Integration History:
     • The DST functionality was originally provided by the separate dst2 utility
       written by George Kerber in 1990
     • The format help functionality was originally provided by the separate
       datehelp utility written by George Kerber in 1989
     • Both utilities have been fully integrated into the main date command
       for version 2.0, providing a single comprehensive solution

BUGS
     The timezone support is limited on Amiga systems.  The %z, %:z, %::z,
     and %:::z format specifiers will display +0000/+00:00/+00:00:00
     respectively, as Amiga systems typically don't have full timezone
     database support.

     The %N (nanoseconds) format specifier displays 000000000 as Amiga
     systems don't provide nanosecond precision.

     Some advanced POSIX features like complex timezone handling and
     leap second support are not available due to Amiga system limitations.

     DST Adjustment:
     The --dst option should only be executed once per login session.
     Multiple executions may result in incorrect clock adjustments.

     The DST utility does not provide visual feedback when adjusting the clock.
     Check the system time after execution to verify the adjustment.

     The DST calculation is based on US standard rules and may not be
     appropriate for other regions with different DST schedules.

AUTHOR
     Part of unsui from amigazen project.
     Based on the original udate implementation by George Kerber (1989-1990).
     Refactored for POSIX compliance and Amiga integration by amigazen project.

Amiga                         December 9, 2025                    DATE(1)