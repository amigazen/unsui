				   MakeMake
			      Makefile compiler
				Version 1.02

Makemake put simply is a makefile generator. Given a list of files to compile,
makemake generates a GNU make compatible makefile. To invoke makemake, type
makemake followed by a set of files to compile. Eg. makemake *.c will invoke
makemake with all the .c files in the current directory.

After invoking makemake you are asked to answer a couple of questions. First is
the compiler name. Type in the name of the compiler which will use your files
followed by ENTER. It is assumed the same  compiler will be used for linking.
Gcc is an example of a compiler which will invoke the compiler and linker for
you.

Next is the compiler options. Type in the switches the compiler uses followed
by ENTER.

Following the compilers options is the linking options. Type in the linking
parameters followed by ENTER.

Lastly is the output filename. Type in the name of the executable that will
be produced followed by ENTER.

After entering the required data, makemake will search files specified on the
command line for any dependencies. For C/C++, dependencies are found when
you have something similar in your program:

#include "foo.h"

usually #including files encloses in '<' and '>' means that those files are
in the standard include directories and are usually not modified.

If you type makemake without any options, the following will appear. The only
argument(s) that has to appear are the list of files. All other switches are
optional.

makemake: a Makefile compiler. Version 1.02
(C)1994 by Jeff Shepherd
COMMAND LINE:
makemake [-f makefilename] [-s] [-I directory] [-C|-C++] files.[c|cc] ...
-f output results to makefilename. 'Makefile' is the default name
-s shortcut. Don't compile .o files. Used when you have only one file.
   Default FALSE
   If you use this option, put the compiler options in the linker options
-I specifies other directories to search for dependency files
   the default directory is the current directory.
-[C|-C++] specifies compiling of C++ or C files. Default -C.files.c,cc] a
list of .c or .cc files.

eg. makemake *.cc will supply all the C++ files in this directory.


About the source
----------------
Makemake was produced on a 4000/030 with 6M of RAM using gcc 2.6.3. It has been
successfully compiled and tested on a SunSparc running SunOS 4.1.3 and a machine
running Ultrix so makemake is quite portable.

Please feel free to contact myself concerning makemake or my other program Show
which is on Aminet. Currently I am working on a C++ intuition class. (A little
preview. I have found a way to produce relatively sized Gadtools Gadgets!!).
My email address is jsshephe@undergrad.math.uwaterloo.ca . I read my mail often
so any mail will be promptly read and replied to if necessary.

Look for my upcoming program to aminet in the coming months!!


