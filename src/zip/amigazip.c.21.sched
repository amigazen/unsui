
;; Function ex2in

;;   ======================================================
;;   -- basic block 4 from 52 to 54 -- before reload
;;   ======================================================

;;	  0--> 52   r137=zxn([++r122])                 :lsu_6xx
;;	  2--> 53   r138=cmp(r137,0x2f)                :iu1_6xx|iu2_6xx
;;	  7--> 54   pc={(r138==0x0)?L43:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 52
;;   new tail = 54

;;   ======================================================
;;   -- basic block 3 from 45 to 45 -- before reload
;;   ======================================================

;;	  0--> 45   r121=r122                          :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 45
;;   new tail = 45

;;   ======================================================
;;   -- basic block 0 from 8 to 27 -- before reload
;;   ======================================================

;;	  0--> 21   %r4=0x3a                           :iu1_6xx|iu2_6xx
;;	  1--> 10   r130=%r5                           :iu1_6xx|iu2_6xx
;;	  2--> 8    r128=%r3                           :iu1_6xx|iu2_6xx
;;	  3--> 22   %r3=call [`strrchr']               :bpu_6xx
;;	  4--> 26   {r135=cmp(%r3,0x0);r133=%r3;}      :iu1_6xx|iu2_6xx
;;	  5--> 16   r163=high(`dosify')                :iu1_6xx|iu2_6xx
;;	  6--> 30   r121=r128                          :iu1_6xx|iu2_6xx
;;	  7--> 18   r123=[r163+low(`dosify')]          :lsu_6xx
;;	  9--> 27   pc={(r135==0x0)?L37:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 11
;;   new tail = 27

;;   ======================================================
;;   -- basic block 1 from 36 to 36 -- before reload
;;   ======================================================

;;	  0--> 36   r121=r133+0x1                      :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 36
;;   new tail = 36

;;   ======================================================
;;   -- basic block 2 from 39 to 189 -- before reload
;;   ======================================================

;;	  0--> 39   r122=r121                          :iu1_6xx|iu2_6xx
;;	  1--> 189  pc=L55                             :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 39
;;   new tail = 189

;;   ======================================================
;;   -- basic block 5 from 58 to 65 -- before reload
;;   ======================================================

;;	  0--> 58   %r3=r122                           :iu1_6xx|iu2_6xx
;;	  1--> 59   %r4=0x2f                           :iu1_6xx|iu2_6xx
;;	  2--> 60   %r3=call [`strchr']                :bpu_6xx
;;	  3--> 64   {r141=cmp(%r3,0x0);r122=%r3;}      :iu1_6xx|iu2_6xx
;;	  8--> 65   pc={(r141!=0x0)?L191:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 61
;;   new tail = 65

;;   ======================================================
;;   -- basic block 6 from 196 to 196 -- before reload
;;   ======================================================

;;	  0--> 196  pc=L195                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 196
;;   new tail = 196

;;   ======================================================
;;   -- basic block 7 from 75 to 77 -- before reload
;;   ======================================================

;;	  0--> 75   r143=zxn([++r121])                 :lsu_6xx
;;	  2--> 76   r144=cmp(r143,0x2f)                :iu1_6xx|iu2_6xx
;;	  7--> 77   pc={(r144==0x0)?L182:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 75
;;   new tail = 77

;;   ======================================================
;;   -- basic block 8 from 81 to 85 -- before reload
;;   ======================================================

;;	  0--> 81   r146=high(`pathput')               :iu1_6xx|iu2_6xx
;;	  1--> 83   r147=[r146+low(`pathput')]         :lsu_6xx
;;	  3--> 84   r148=cmp(r147,0x0)                 :iu1_6xx|iu2_6xx
;;	  8--> 85   pc={(r148!=0x0)?L93:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 81
;;   new tail = 85

;;   ======================================================
;;   -- basic block 9 from 89 to 92 -- before reload
;;   ======================================================

;;	  0--> 89   %r3=r121                           :iu1_6xx|iu2_6xx
;;	  1--> 90   %r4=0x2f                           :iu1_6xx|iu2_6xx
;;	  2--> 91   %r3=call [`last']                  :bpu_6xx
;;	  3--> 92   r121=%r3                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 89
;;   new tail = 92

;;   ======================================================
;;   -- basic block 10 from 96 to 107 -- before reload
;;   ======================================================

;;	  0--> 96   %r3=r121                           :iu1_6xx|iu2_6xx
;;	  1--> 97   %r3=call [`strlen']                :bpu_6xx
;;	  2--> 101  %r3=%r3+0x1                        :iu1_6xx|iu2_6xx
;;	  3--> 102  %r3=call [`malloc']                :bpu_6xx
;;	  4--> 106  {r153=cmp(%r3,0x0);r152=%r3;}      :iu1_6xx|iu2_6xx
;;	  9--> 107  pc={(r153==0x0)?L139:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 98
;;   new tail = 107

;;   ======================================================
;;   -- basic block 11 from 117 to 124 -- before reload
;;   ======================================================

;;	  0--> 117  %r4=r121                           :iu1_6xx|iu2_6xx
;;	  1--> 118  %r3=call [`strcpy']                :bpu_6xx
;;	  2--> 122  r156=[r163+low(`dosify')]          :lsu_6xx
;;	  4--> 123  r157=cmp(r156,0x0)                 :iu1_6xx|iu2_6xx
;;	  9--> 124  pc={(r157==0x0)?L130:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 117
;;   new tail = 124

;;   ======================================================
;;   -- basic block 12 from 128 to 129 -- before reload
;;   ======================================================

;;	  0--> 128  %r3=r152                           :iu1_6xx|iu2_6xx
;;	  1--> 129  %r3=call [`msname']                :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 128
;;   new tail = 129

;;   ======================================================
;;   -- basic block 13 from 133 to 134 -- before reload
;;   ======================================================

;;	  0--> 133  r158=cmp(r130,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 134  pc={(r158==0x0)?L139:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 133
;;   new tail = 134

;;   ======================================================
;;   -- basic block 14 from 138 to 200 -- before reload
;;   ======================================================

;;	  0--> 138  [r130]=r123                        :lsu_6xx
;;	  1--> 200  pc=L139                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 138
;;   new tail = 200

;;   ======================================================
;;   -- basic block 15 from 148 to 150 -- before reload
;;   ======================================================

;;	  0--> 148  r161=zxn([r121])                   :lsu_6xx
;;	  2--> 149  r162=cmp(r161,0x2f)                :iu1_6xx|iu2_6xx
;;	  7--> 150  pc={(r162!=0x0)?L78:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 148
;;   new tail = 150

;;   ======================================================
;;   -- basic block 16 from 203 to 203 -- before reload
;;   ======================================================

;;	  0--> 203  pc=L182                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 203
;;   new tail = 203

;;   ======================================================
;;   -- basic block 17 from 157 to 163 -- before reload
;;   ======================================================

;;	  0--> 157  %r3=r152                           :iu1_6xx|iu2_6xx
;;	  1--> 163  use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 157
;;   new tail = 163


;; Procedure interblock/speculative motions == 0/0 


(note:HI 2 0 13 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 5 [%r5] 31 [%r31] 67 [ap]
(note:HI 13 2 11 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 11 13 23 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 23 11 21 0 NOTE_INSN_DELETED)

(insn:HI 21 23 10 0 (set (reg:SI 4 %r4)
        (const_int 58 [0x3a])) 268 {*movsi_internal1} (nil)
    (insn_list:REG_LIBCALL 22 (nil)))

(insn:HI 10 21 8 0 (set (reg/v/f:SI 130 [ pdosflag ])
        (reg:SI 5 %r5 [ pdosflag ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 5 %r5 [ pdosflag ])
        (nil)))

(insn:HI 8 10 22 0 (set (reg/v/f:SI 128 [ x ])
        (reg:SI 3 %r3 [ x ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 22 8 26 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strrchr") [flags 0x41] <function_decl 0x401f1b54 strrchr>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 8 (insn_list:REG_DEP_TRUE 21 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 21 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ x ]))
                (nil)))))

(insn:HI 26 22 16 0 (parallel [
            (set (reg:CC 135)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 133)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 16 26 30 0 (set (reg/f:SI 163)
        (high:SI (symbol_ref:SI ("dosify") [flags 0x44] <var_decl 0x4027e984 dosify>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 30 16 18 0 (set (reg/v/f:SI 121 [ t.30 ])
        (reg/v/f:SI 128 [ x ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 8 (nil))
    (expr_list:REG_DEAD (reg/v/f:SI 128 [ x ])
        (nil)))

(insn:HI 18 30 27 0 (set (reg/v:SI 123 [ dosflag ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 163)
                (symbol_ref:SI ("dosify") [flags 0x44] <var_decl 0x4027e984 dosify>)) [3 dosify+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 16 (nil))
    (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("dosify") [flags 0x44] <var_decl 0x4027e984 dosify>) [3 dosify+0 S4 A32])
        (nil)))

(jump_insn:HI 27 18 34 0 (set (pc)
        (if_then_else (eq (reg:CC 135)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 8 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 16 (insn_list:REG_DEP_ANTI 18 (insn_list:REG_DEP_ANTI 21 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_ANTI 22 (nil)))))))))
    (expr_list:REG_DEAD (reg:CC 135)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 133 163

;; Start of basic block 1, registers live: 1 [%r1] 31 [%r31] 67 [ap] 123 130 133 163
(note:HI 34 27 36 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 36 34 37 1 (set (reg/v/f:SI 121 [ t.30 ])
        (plus:SI (reg/f:SI 133)
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

;; Start of basic block 2, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(code_label:HI 37 36 38 2 4 "" [1 uses])

(note:HI 38 37 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 39 38 189 2 (set (reg/v/f:SI 122 [ tt ])
        (reg/v/f:SI 121 [ t.30 ])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 189 39 190 2 (set (pc)
        (label_ref 55)) 460 {jump} (insn_list:REG_DEP_TRUE 39 (nil))
    (nil))
;; End of basic block 2, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 122 123 130 163

(barrier:HI 190 189 169)

(note:HI 169 190 43 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 1 [%r1] 31 [%r31] 67 [ap] 122 123 130 163
(code_label:HI 43 169 44 3 6 "" [1 uses])

(note:HI 44 43 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 45 44 191 3 (set (reg/v/f:SI 121 [ t.30 ])
        (reg/v/f:SI 122 [ tt ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 52 (nil))
    (nil))
;; End of basic block 3, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 122 123 130 163

;; Start of basic block 4, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 122 123 130 163
(code_label:HI 191 45 183 4 22 "" [1 uses])

(note:HI 183 191 51 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note:HI 51 183 52 4 NOTE_INSN_DELETED)

(insn:HI 52 51 53 4 (set (reg:SI 137)
        (zero_extend:SI (mem:QI (pre_inc:SI (reg/v/f:SI 122 [ tt ])) [0 S1 A8]))) 18 {*rs6000.md:513} (nil)
    (expr_list:REG_INC (reg/v/f:SI 122 [ tt ])
        (nil)))

(insn:HI 53 52 54 4 (set (reg:CC 138)
        (compare:CC (reg:SI 137)
            (const_int 47 [0x2f]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 52 (nil))
    (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(jump_insn:HI 54 53 170 4 (set (pc)
        (if_then_else (eq (reg:CC 138)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 52 (insn_list:REG_DEP_TRUE 53 (nil)))
    (expr_list:REG_DEAD (reg:CC 138)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 4, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 122 123 130 163

(note:HI 170 54 55 NOTE_INSN_LOOP_END)

;; Start of basic block 5, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 122 123 130 163
(code_label:HI 55 170 56 5 5 "" [1 uses])

(note:HI 56 55 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 61 56 58 5 NOTE_INSN_DELETED)

(insn:HI 58 61 59 5 (set (reg:SI 3 %r3 [ tt ])
        (reg/v/f:SI 122 [ tt ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 122 [ tt ])
        (insn_list:REG_LIBCALL 60 (nil))))

(insn:HI 59 58 60 5 (set (reg:SI 4 %r4)
        (const_int 47 [0x2f])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 60 59 64 5 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x401f02b8 strchr>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_TRUE 58 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 58 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ tt ]))
                (nil)))))

(insn:HI 64 60 65 5 (parallel [
            (set (reg:CC 141)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 122 [ tt ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_ANTI 58 (insn_list:REG_DEP_TRUE 60 (nil)))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 65 64 171 5 (set (pc)
        (if_then_else (ne (reg:CC 141)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 58 (insn_list:REG_DEP_ANTI 59 (insn_list:REG_DEP_TRUE 64 (insn_list:REG_DEP_ANTI 60 (nil)))))
    (expr_list:REG_DEAD (reg:CC 141)
        (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
            (nil))))
;; End of basic block 5, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 122 123 130 163

(note:HI 171 65 194 NOTE_INSN_LOOP_BEG)

;; Start of basic block 6, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(note:HI 194 171 196 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 196 194 197 6 (set (pc)
        (label_ref 195)) 460 {jump} (nil)
    (nil))
;; End of basic block 6, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

(barrier:HI 197 196 182)

;; Start of basic block 7, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(code_label:HI 182 197 181 7 20 "" [2 uses])

(note:HI 181 182 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 74 181 75 7 NOTE_INSN_DELETED)

(insn:HI 75 74 76 7 (set (reg:SI 143)
        (zero_extend:SI (mem:QI (pre_inc:SI (reg/v/f:SI 121 [ t.30 ])) [0 S1 A8]))) 18 {*rs6000.md:513} (nil)
    (expr_list:REG_INC (reg/v/f:SI 121 [ t.30 ])
        (nil)))

(insn:HI 76 75 77 7 (set (reg:CC 144)
        (compare:CC (reg:SI 143)
            (const_int 47 [0x2f]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 75 (nil))
    (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn:HI 77 76 172 7 (set (pc)
        (if_then_else (eq (reg:CC 144)
                (const_int 0 [0x0]))
            (label_ref 182)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 75 (insn_list:REG_DEP_TRUE 76 (nil)))
    (expr_list:REG_DEAD (reg:CC 144)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 7, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

(note:HI 172 77 78 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(code_label:HI 78 172 79 8 10 "" [1 uses])

(note:HI 79 78 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 81 79 83 8 (set (reg/f:SI 146)
        (high:SI (symbol_ref:SI ("pathput") [flags 0x44] <var_decl 0x4027e89c pathput>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 83 81 84 8 (set (reg:SI 147 [ pathput ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 146)
                (symbol_ref:SI ("pathput") [flags 0x44] <var_decl 0x4027e89c pathput>)) [3 pathput+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("pathput") [flags 0x44] <var_decl 0x4027e89c pathput>) [3 pathput+0 S4 A32])
            (nil))))

(insn:HI 84 83 85 8 (set (reg:CC 148)
        (compare:CC (reg:SI 147 [ pathput ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 83 (nil))
    (expr_list:REG_DEAD (reg:SI 147 [ pathput ])
        (nil)))

(jump_insn:HI 85 84 87 8 (set (pc)
        (if_then_else (ne (reg:CC 148)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 81 (insn_list:REG_DEP_ANTI 83 (insn_list:REG_DEP_TRUE 84 (nil))))
    (expr_list:REG_DEAD (reg:CC 148)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 8, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

;; Start of basic block 9, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(note:HI 87 85 89 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 89 87 90 9 (set (reg:SI 3 %r3 [ t.30 ])
        (reg/v/f:SI 121 [ t.30 ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 121 [ t.30 ])
        (nil)))

(insn:HI 90 89 91 9 (set (reg:SI 4 %r4)
        (const_int 47 [0x2f])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 91 90 92 9 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("last") [flags 0x41] <function_decl 0x402853a0 last>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 89 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ t.30 ]))
            (nil))))

(insn:HI 92 91 93 9 (set (reg/v/f:SI 121 [ t.30 ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 91 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))
;; End of basic block 9, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

;; Start of basic block 10, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(code_label:HI 93 92 94 10 11 "" [1 uses])

(note:HI 94 93 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 98 94 100 10 NOTE_INSN_DELETED)

(note:HI 100 98 103 10 NOTE_INSN_DELETED)

(note:HI 103 100 96 10 NOTE_INSN_DELETED)

(insn:HI 96 103 97 10 (set (reg:SI 3 %r3 [ t.30 ])
        (reg/v/f:SI 121 [ t.30 ])) 268 {*movsi_internal1} (nil)
    (insn_list:REG_LIBCALL 97 (nil)))

(call_insn/u:HI 97 96 101 10 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 96 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 96 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ t.30 ]))
            (nil))))

(insn:HI 101 97 102 10 (set (reg:SI 3 %r3)
        (plus:SI (reg:SI 3 %r3)
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 97 (nil))
    (nil))

(call_insn:HI 102 101 106 10 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 101 (insn_list:REG_DEP_ANTI 97 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 106 102 107 10 (parallel [
            (set (reg:CC 153)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 152)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 102 (nil))
    (nil))

(jump_insn:HI 107 106 114 10 (set (pc)
        (if_then_else (eq (reg:CC 153)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 96 (insn_list:REG_DEP_ANTI 97 (insn_list:REG_DEP_ANTI 101 (insn_list:REG_DEP_TRUE 106 (insn_list:REG_DEP_ANTI 102 (nil))))))
    (expr_list:REG_DEAD (reg:CC 153)
        (expr_list:REG_BR_PROB (const_int 2124 [0x84c])
            (nil))))
;; End of basic block 10, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 121 123 130 152 163

;; Start of basic block 11, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 121 123 130 152 163
(note:HI 114 107 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 117 114 118 11 (set (reg:SI 4 %r4 [ t.30 ])
        (reg/v/f:SI 121 [ t.30 ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 121 [ t.30 ])
        (nil)))

(call_insn:HI 118 117 122 11 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 117 (nil))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ t.30 ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ t.30 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
            (nil))))

(insn:HI 122 118 123 11 (set (reg:SI 156 [ dosify ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 163)
                (symbol_ref:SI ("dosify") [flags 0x44] <var_decl 0x4027e984 dosify>)) [3 dosify+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 118 (nil))
    (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("dosify") [flags 0x44] <var_decl 0x4027e984 dosify>) [3 dosify+0 S4 A32])
            (nil))))

(insn:HI 123 122 124 11 (set (reg:CC 157)
        (compare:CC (reg:SI 156 [ dosify ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 122 (insn_list:REG_DEP_ANTI 118 (nil)))
    (expr_list:REG_DEAD (reg:SI 156 [ dosify ])
        (nil)))

(jump_insn:HI 124 123 126 11 (set (pc)
        (if_then_else (eq (reg:CC 157)
                (const_int 0 [0x0]))
            (label_ref 130)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 117 (insn_list:REG_DEP_ANTI 122 (insn_list:REG_DEP_TRUE 123 (insn_list:REG_DEP_ANTI 118 (nil)))))
    (expr_list:REG_DEAD (reg:CC 157)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 11, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 123 130 152

;; Start of basic block 12, registers live: 1 [%r1] 31 [%r31] 67 [ap] 123 130 152
(note:HI 126 124 128 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:HI 128 126 129 12 (set (reg:SI 3 %r3 [ n ])
        (reg/f:SI 152)) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 129 128 130 12 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("msname") [flags 0x41] <function_decl 0x402854fc msname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 128 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_UNUSED (reg:SI 3 %r3)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
        (nil)))
;; End of basic block 12, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 123 130 152

;; Start of basic block 13, registers live: 1 [%r1] 31 [%r31] 67 [ap] 123 130 152
(code_label:HI 130 129 131 13 16 "" [1 uses])

(note:HI 131 130 133 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 133 131 134 13 (set (reg:CC 158)
        (compare:CC (reg/v/f:SI 130 [ pdosflag ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 134 133 136 13 (set (pc)
        (if_then_else (eq (reg:CC 158)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 133 (nil))
    (expr_list:REG_DEAD (reg:CC 158)
        (expr_list:REG_BR_PROB (const_int 1036 [0x40c])
            (nil))))
;; End of basic block 13, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 123 130 152

;; Start of basic block 14, registers live: 1 [%r1] 31 [%r31] 67 [ap] 123 130 152
(note:HI 136 134 138 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 138 136 200 14 (set (mem:SI (reg/v/f:SI 130 [ pdosflag ]) [3 S4 A32])
        (reg/v:SI 123 [ dosflag ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 123 [ dosflag ])
        (expr_list:REG_DEAD (reg/v/f:SI 130 [ pdosflag ])
            (nil))))

(jump_insn:HI 200 138 201 14 (set (pc)
        (label_ref 139)) 460 {jump} (insn_list:REG_DEP_ANTI 138 (nil))
    (nil))
;; End of basic block 14, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 152

(barrier:HI 201 200 195)

;; Start of basic block 15, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(code_label:HI 195 201 145 15 23 "" [1 uses])

(note:HI 145 195 147 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 147 145 148 15 NOTE_INSN_DELETED)

(insn:HI 148 147 149 15 (set (reg:SI 161)
        (zero_extend:SI (mem:QI (reg/v/f:SI 121 [ t.30 ]) [0 S1 A8]))) 18 {*rs6000.md:513} (nil)
    (nil))

(insn:HI 149 148 150 15 (set (reg:CC 162)
        (compare:CC (reg:SI 161)
            (const_int 47 [0x2f]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 148 (nil))
    (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn:HI 150 149 202 15 (set (pc)
        (if_then_else (ne (reg:CC 162)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 148 (insn_list:REG_DEP_TRUE 149 (nil)))
    (expr_list:REG_DEAD (reg:CC 162)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

;; Start of basic block 16, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163
(note:HI 202 150 203 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 203 202 204 16 (set (pc)
        (label_ref 182)) 460 {jump} (nil)
    (nil))
;; End of basic block 16, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 123 130 163

(barrier:HI 204 203 154)

(note:HI 154 204 139 NOTE_INSN_FUNCTION_END)

;; Start of basic block 17, registers live: 1 [%r1] 31 [%r31] 67 [ap] 152
(code_label:HI 139 154 140 17 15 "" [3 uses])

(note:HI 140 139 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 157 140 163 17 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg/f:SI 152)) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 152)
        (nil)))

(insn:HI 163 157 208 17 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 157 (nil))
    (nil))
;; End of basic block 17, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 208 163 0 17 NOTE_INSN_DELETED)


;; Function procname

;;   ======================================================
;;   -- basic block 5 from 64 to 70 -- before reload
;;   ======================================================

;;	  0--> 65   %r4=[r123+0x48]                    :lsu_6xx
;;	  1--> 66   %r5=r140                           :iu1_6xx|iu2_6xx
;;	  2--> 64   %r3=r119                           :iu1_6xx|iu2_6xx
;;	  3--> 67   %r3=call [`shmatch']               :bpu_6xx
;;	  4--> 69   r151=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  5--> 81   r135=0x1                           :iu1_6xx|iu2_6xx
;;	  9--> 70   pc={(r151==0x0)?L134:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 68
;;   new tail = 70

;;   ======================================================
;;   -- basic block 6 from 76 to 78 -- before reload
;;   ======================================================

;;	  0--> 76   r154=[r153+low(`pcount')]          :lsu_6xx
;;	  1--> 88   %r4=r140                           :iu1_6xx|iu2_6xx
;;	  2--> 77   r155=cmp(r154,0x0)                 :iu1_6xx|iu2_6xx
;;	  3--> 102  r120=0x0                           :iu1_6xx|iu2_6xx
;;	  7--> 78   pc={(r155==0x0)?L91:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 76
;;   new tail = 78

;;   ======================================================
;;   -- basic block 7 from 87 to 90 -- before reload
;;   ======================================================

;;	  0--> 87   %r3=[r123+0x4c]                    :lsu_6xx
;;	  9--> 89   %r3=call [`filter']                :bpu_6xx
;;	 10--> 90   r135=%r3                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 10
;;   new head = 87
;;   new tail = 90

;;   ======================================================
;;   -- basic block 8 from 93 to 99 -- before reload
;;   ======================================================

;;	  0--> 97   r159=[r158+low(`verbose')]         :lsu_6xx
;;	  1--> 111  r163=cmp(r135,0x0)                 :iu1_6xx|iu2_6xx
;;	  2--> 98   r160=cmp(r159,0x0)                 :iu1_6xx|iu2_6xx
;;	  3--> 93   [r123+0x50]=r135                   :lsu_6xx
;;	  7--> 99   pc={(r160==0x0)?L134:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 97
;;   new tail = 99

;;   ======================================================
;;   -- basic block 9 from 110 to 112 -- before reload
;;   ======================================================

;;	  0--> 116  r133=r164+low(`*.LC1')             :iu1_6xx|iu2_6xx
;;	  1--> 110  r134=[r162+low(`mesg')]            :lsu_6xx
;;	  2--> 112  pc={(r163==0x0)?L119:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):    122/b6
;;   total time = 2
;;   new head = 116
;;   new tail = 112

;;   ======================================================
;;   -- basic block 10 from 417 to 417 -- before reload
;;   ======================================================

;;	  0--> 417  pc=L123                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 417
;;   new tail = 417

;;   ======================================================
;;   -- basic block 11 from 122 to 122 -- before reload
;;   ======================================================

;;	  0--> 122  r133=r165+low(`*.LC2')             :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 122
;;   new tail = 122

;;   ======================================================
;;   -- basic block 12 from 128 to 133 -- before reload
;;   ======================================================

;;	  0--> 131  %r6=[r123+0x38]                    :lsu_6xx
;;	  1--> 128  %r3=r134                           :iu1_6xx|iu2_6xx
;;	  2--> 130  %r5=r133                           :iu1_6xx|iu2_6xx
;;	  3--> 129  %r4=r167+low(`*.LC3')              :iu1_6xx|iu2_6xx
;;	  4--> 133  r120=0x0                           :iu1_6xx|iu2_6xx
;;	  9--> 132  %r3=call [`fprintf']               :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 131
;;   new tail = 132

;;   ======================================================
;;   -- basic block 13 from 137 to 139 -- before reload
;;   ======================================================

;;	  0--> 137  r123=[r123+0x5c]                   :lsu_6xx
;;	  9--> 138  r169=cmp(r123,0x0)                 :iu1_6xx|iu2_6xx
;;	 14--> 139  pc={(r169!=0x0)?L60:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 14
;;   new head = 137
;;   new tail = 139

;;   ======================================================
;;   -- basic block 36 from 349 to 354 -- before reload
;;   ======================================================

;;	  0--> 349  %r3=r127                           :iu1_6xx|iu2_6xx
;;	  1--> 350  %r3=call [`readdir']               :bpu_6xx
;;	  2--> 353  {r214=cmp(%r3,0x0);r122=%r3;}      :iu1_6xx|iu2_6xx
;;	  3--> 272  %r3=r179                           :iu1_6xx|iu2_6xx
;;	  5--> 359  {r215=cmp(r122+0x14,0x0);r126=r122+:iu1_6xx|iu2_6xx
;;	  7--> 354  pc={(r214==0x0)?L361:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 351
;;   new tail = 354

;;   ======================================================
;;   -- basic block 37 from 360 to 360 -- before reload
;;   ======================================================

;;	  0--> 360  pc={(r215!=0x0)?L269:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 360
;;   new tail = 360

;;   ======================================================
;;   -- basic block 30 from 273 to 288 -- before reload
;;   ======================================================

;;	  0--> 273  %r3=call [`strlen']                :bpu_6xx
;;	  1--> 274  r200=%r3                           :iu1_6xx|iu2_6xx
;;	  2--> 276  %r3=r126                           :iu1_6xx|iu2_6xx
;;	  3--> 277  %r3=call [`strlen']                :bpu_6xx
;;	  4--> 280  r204=r200+%r3                      :iu1_6xx|iu2_6xx
;;	  5--> 282  %r3=r204+0x1                       :iu1_6xx|iu2_6xx
;;	  6--> 283  %r3=call [`malloc']                :bpu_6xx
;;	  7--> 305  %r4=r179                           :iu1_6xx|iu2_6xx
;;	  8--> 287  {r207=cmp(%r3,0x0);r206=%r3;}      :iu1_6xx|iu2_6xx
;;	 13--> 288  pc={(r207==0x0)?L399:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 13
;;   new head = 278
;;   new tail = 288

;;   ======================================================
;;   -- basic block 31 from 306 to 318 -- before reload
;;   ======================================================

;;	  0--> 306  %r3=call [`strcpy']                :bpu_6xx
;;	  1--> 310  %r4=r126                           :iu1_6xx|iu2_6xx
;;	  2--> 311  %r3=call [`strcat']                :bpu_6xx
;;	  3--> 313  %r3=r206                           :iu1_6xx|iu2_6xx
;;	  4--> 314  %r4=r140                           :iu1_6xx|iu2_6xx
;;	  5--> 315  %r3=call [`procname']              :bpu_6xx
;;	  6--> 317  {r209=cmp(%r3,0x0);r121=%r3;}      :iu1_6xx|iu2_6xx
;;	  9--> 323  r211=cmp(r121,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	 11--> 318  pc={(r209==0x0)?L341:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 11
;;   new head = 316
;;   new tail = 318

;;   ======================================================
;;   -- basic block 32 from 324 to 324 -- before reload
;;   ======================================================

;;	  0--> 328  r213=high(`*.LC4')                 :iu1_6xx|iu2_6xx
;;	  1--> 331  %r4=r206                           :iu1_6xx|iu2_6xx
;;	  2--> 324  pc={(r211!=0x0)?L335:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 328
;;   new tail = 324

;;   ======================================================
;;   -- basic block 33 from 330 to 433 -- before reload
;;   ======================================================

;;	  0--> 330  %r3=r213+low(`*.LC4')              :iu1_6xx|iu2_6xx
;;	  1--> 332  call [`zipwarn']                   :bpu_6xx
;;	  2--> 433  pc=L341                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 330
;;   new tail = 433

;;   ======================================================
;;   -- basic block 34 from 339 to 340 -- before reload
;;   ======================================================

;;	  0--> 339  %r4=r206                           :iu1_6xx|iu2_6xx
;;	  2--> 340  call [`ziperr']                    :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 339
;;   new tail = 340

;;   ======================================================
;;   -- basic block 35 from 344 to 345 -- before reload
;;   ======================================================

;;	  0--> 344  %r3=r206                           :iu1_6xx|iu2_6xx
;;	  4--> 345  call [`free']                      :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 4
;;   new head = 344
;;   new tail = 345

;;   ======================================================
;;   -- basic block 0 from 3 to 18 -- before reload
;;   ======================================================

;;	  0--> 10   r142=high(`*.LC0')                 :iu1_6xx|iu2_6xx
;;	  1--> 4    r140=%r4                           :iu1_6xx|iu2_6xx
;;	  2--> 13   %r4=r142+low(`*.LC0')              :iu1_6xx|iu2_6xx
;;	  3--> 3    r139=%r3                           :iu1_6xx|iu2_6xx
;;	  4--> 14   %r3=call [`strcmp']                :bpu_6xx
;;	  5--> 17   r145=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	 10--> 18   pc={(r145!=0x0)?L29:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 10
;;   new head = 5
;;   new tail = 18

;;   ======================================================
;;   -- basic block 1 from 22 to 409 -- before reload
;;   ======================================================

;;	  0--> 22   %r3=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 24   %r5=r140                           :iu1_6xx|iu2_6xx
;;	  2--> 23   %r4=0x0                            :iu1_6xx|iu2_6xx
;;	  3--> 25   %r3=call [`newname']               :bpu_6xx
;;	  4--> 26   r125=%r3                           :iu1_6xx|iu2_6xx
;;	  5--> 409  pc=L377                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 22
;;   new tail = 409

;;   ======================================================
;;   -- basic block 2 from 32 to 37 -- before reload
;;   ======================================================

;;	  0--> 32   %r3=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 33   %r4=%r31+0x8                       :iu1_6xx|iu2_6xx
;;	  2--> 34   %r3=call [`stat']                  :bpu_6xx
;;	  3--> 36   r146=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  8--> 37   pc={(r146==0x0)?L153:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 35
;;   new tail = 37

;;   ======================================================
;;   -- basic block 3 from 41 to 51 -- before reload
;;   ======================================================

;;	  0--> 41   %r3=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 42   %r4=0x0                            :iu1_6xx|iu2_6xx
;;	  2--> 43   %r5=0x0                            :iu1_6xx|iu2_6xx
;;	  3--> 44   %r3=call [`ex2in']                 :bpu_6xx
;;	  4--> 45   r119=%r3                           :iu1_6xx|iu2_6xx
;;	  5--> 47   r148=high(`zfiles')                :iu1_6xx|iu2_6xx
;;	  6--> 49   r123=[r148+low(`zfiles')]          :lsu_6xx
;;	  7--> 54   r120=0x1                           :iu1_6xx|iu2_6xx
;;	  8--> 50   r149=cmp(r123,0x0)                 :iu1_6xx|iu2_6xx
;;	 13--> 51   pc={(r149==0x0)?L140:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 13
;;   new head = 41
;;   new tail = 51

;;   ======================================================
;;   -- basic block 4 from 59 to 405 -- before reload
;;   ======================================================

;;	  0--> 59   r120=0x1                           :iu1_6xx|iu2_6xx
;;	  1--> 400  r153=high(`pcount')                :iu1_6xx|iu2_6xx
;;	  2--> 401  r158=high(`verbose')               :iu1_6xx|iu2_6xx
;;	  3--> 402  r162=high(`mesg')                  :iu1_6xx|iu2_6xx
;;	  4--> 403  r164=high(`*.LC1')                 :iu1_6xx|iu2_6xx
;;	  5--> 404  r165=high(`*.LC2')                 :iu1_6xx|iu2_6xx
;;	  6--> 405  r167=high(`*.LC3')                 :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 6
;;   new head = 59
;;   new tail = 405

;;   ======================================================
;;   -- basic block 14 from 143 to 147 -- before reload
;;   ======================================================

;;	  0--> 143  %r3=r119                           :iu1_6xx|iu2_6xx
;;	  1--> 144  call [`free']                      :bpu_6xx
;;	  2--> 146  r170=cmp(r120,0x0)                 :iu1_6xx|iu2_6xx
;;	  3--> 150  r125=0xffffffffffffffff            :iu1_6xx|iu2_6xx
;;	  7--> 147  pc={(r170!=0x0)?L377:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 143
;;   new tail = 147

;;   ======================================================
;;   -- basic block 15 from 443 to 443 -- before reload
;;   ======================================================

;;	  0--> 443  pc=L374                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 443
;;   new tail = 443

;;   ======================================================
;;   -- basic block 16 from 157 to 160 -- before reload
;;   ======================================================

;;	  0--> 157  r171=zxn([%r31+0x8])               :lsu_6xx
;;	  2--> 159  {r174=cmp(zxt(r171,0x1,0x14),0x0);c:iu1_6xx|iu2_6xx
;;	  7--> 160  pc={(r174!=0x0)?L174:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 158
;;   new tail = 160

;;   ======================================================
;;   -- basic block 17 from 164 to 170 -- before reload
;;   ======================================================

;;	  0--> 164  %r3=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 166  %r5=r140                           :iu1_6xx|iu2_6xx
;;	  2--> 165  %r4=0x0                            :iu1_6xx|iu2_6xx
;;	  3--> 167  %r3=call [`newname']               :bpu_6xx
;;	  4--> 169  {r175=cmp(%r3,0x0);r125=%r3;}      :iu1_6xx|iu2_6xx
;;	  9--> 170  pc={(r175!=0x0)?L377:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 168
;;   new tail = 170

;;   ======================================================
;;   -- basic block 18 from 424 to 424 -- before reload
;;   ======================================================

;;	  0--> 424  pc=L374                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 424
;;   new tail = 424

;;   ======================================================
;;   -- basic block 19 from 177 to 188 -- before reload
;;   ======================================================

;;	  0--> 177  %r3=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 178  %r3=call [`strlen']                :bpu_6xx
;;	  2--> 182  %r3=%r3+0x2                        :iu1_6xx|iu2_6xx
;;	  3--> 183  %r3=call [`malloc']                :bpu_6xx
;;	  4--> 187  {r180=cmp(%r3,0x0);r179=%r3;}      :iu1_6xx|iu2_6xx
;;	  5--> 191  r125=0x4                           :iu1_6xx|iu2_6xx
;;	  9--> 188  pc={(r180==0x0)?L377:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 179
;;   new tail = 188

;;   ======================================================
;;   -- basic block 20 from 198 to 210 -- before reload
;;   ======================================================

;;	  0--> 198  %r4=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 199  %r3=call [`strcpy']                :bpu_6xx
;;	  2--> 201  %r3=r179                           :iu1_6xx|iu2_6xx
;;	  3--> 202  %r3=call [`strlen']                :bpu_6xx
;;	  4--> 203  r181=%r3                           :iu1_6xx|iu2_6xx
;;	  5--> 208  r184=zxn([r179])                   :lsu_6xx
;;	  6--> 205  r128=r179+r181                     :iu1_6xx|iu2_6xx
;;	  7--> 209  r185=cmp(r184,0x0)                 :iu1_6xx|iu2_6xx
;;	 12--> 210  pc={(r185==0x0)?L226:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 12
;;   new head = 207
;;   new tail = 210

;;   ======================================================
;;   -- basic block 21 from 214 to 216 -- before reload
;;   ======================================================

;;	  0--> 214  r131=zxn([r128-0x1])               :lsu_6xx
;;	  2--> 215  r187=cmp(r131,0x2f)                :iu1_6xx|iu2_6xx
;;	  7--> 216  pc={(r187==0x0)?L226:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 214
;;   new tail = 216

;;   ======================================================
;;   -- basic block 22 from 219 to 220 -- before reload
;;   ======================================================

;;	  0--> 219  r188=cmp(r131,0x3a)                :iu1_6xx|iu2_6xx
;;	  5--> 220  pc={(r188==0x0)?L226:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 219
;;   new tail = 220

;;   ======================================================
;;   -- basic block 23 from 224 to 225 -- before reload
;;   ======================================================

;;	  0--> 224  r189=0x2f00                        :iu1_6xx|iu2_6xx
;;	  1--> 225  [r179+r181]=r189                   :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 224
;;   new tail = 225

;;   ======================================================
;;   -- basic block 24 from 229 to 233 -- before reload
;;   ======================================================

;;	  0--> 229  r191=high(`dirnames')              :iu1_6xx|iu2_6xx
;;	  1--> 231  r192=[r191+low(`dirnames')]        :lsu_6xx
;;	  3--> 232  r193=cmp(r192,0x0)                 :iu1_6xx|iu2_6xx
;;	  8--> 233  pc={(r193==0x0)?L251:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 229
;;   new tail = 233

;;   ======================================================
;;   -- basic block 25 from 236 to 242 -- before reload
;;   ======================================================

;;	  0--> 236  %r3=r179                           :iu1_6xx|iu2_6xx
;;	  1--> 237  %r4=0x1                            :iu1_6xx|iu2_6xx
;;	  2--> 238  %r5=r140                           :iu1_6xx|iu2_6xx
;;	  3--> 239  %r3=call [`newname']               :bpu_6xx
;;	  4--> 241  {r194=cmp(%r3,0x0);r125=%r3;}      :iu1_6xx|iu2_6xx
;;	  9--> 242  pc={(r194==0x0)?L251:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 240
;;   new tail = 242

;;   ======================================================
;;   -- basic block 26 from 246 to 428 -- before reload
;;   ======================================================

;;	  0--> 246  %r3=r179                           :iu1_6xx|iu2_6xx
;;	  1--> 247  call [`free']                      :bpu_6xx
;;	  2--> 428  pc=L377                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 246
;;   new tail = 428

;;   ======================================================
;;   -- basic block 27 from 254 to 258 -- before reload
;;   ======================================================

;;	  0--> 254  r196=high(`recurse')               :iu1_6xx|iu2_6xx
;;	  1--> 256  r197=[r196+low(`recurse')]         :lsu_6xx
;;	  3--> 257  r198=cmp(r197,0x0)                 :iu1_6xx|iu2_6xx
;;	  8--> 258  pc={(r198==0x0)?L366:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 254
;;   new tail = 258

;;   ======================================================
;;   -- basic block 28 from 261 to 265 -- before reload
;;   ======================================================

;;	  0--> 261  %r3=r139                           :iu1_6xx|iu2_6xx
;;	  1--> 262  %r3=call [`opendir']               :bpu_6xx
;;	  2--> 264  {r199=cmp(%r3,0x0);r127=%r3;}      :iu1_6xx|iu2_6xx
;;	  7--> 265  pc={(r199!=0x0)?L435:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 263
;;   new tail = 265

;;   ======================================================
;;   -- basic block 29 from 431 to 431 -- before reload
;;   ======================================================

;;	  0--> 431  pc=L366                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 431
;;   new tail = 431

;;   ======================================================
;;   -- basic block 38 from 364 to 365 -- before reload
;;   ======================================================

;;	  0--> 364  %r3=r127                           :iu1_6xx|iu2_6xx
;;	  1--> 365  call [`closedir']                  :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 364
;;   new tail = 365

;;   ======================================================
;;   -- basic block 39 from 369 to 438 -- before reload
;;   ======================================================

;;	  0--> 369  %r3=r179                           :iu1_6xx|iu2_6xx
;;	  1--> 370  call [`free']                      :bpu_6xx
;;	  2--> 371  r125=0x0                           :iu1_6xx|iu2_6xx
;;	  3--> 438  pc=L377                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 369
;;   new tail = 438

;;   ======================================================
;;   -- basic block 40 from 292 to 440 -- before reload
;;   ======================================================

;;	  0--> 292  %r3=r127                           :iu1_6xx|iu2_6xx
;;	  1--> 293  call [`closedir']                  :bpu_6xx
;;	  2--> 295  %r3=r179                           :iu1_6xx|iu2_6xx
;;	  3--> 296  call [`free']                      :bpu_6xx
;;	  4--> 297  r125=0x4                           :iu1_6xx|iu2_6xx
;;	  5--> 440  pc=L377                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 292
;;   new tail = 440

;;   ======================================================
;;   -- basic block 41 from 376 to 376 -- before reload
;;   ======================================================

;;	  0--> 376  r125=0x0                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 376
;;   new tail = 376

;;   ======================================================
;;   -- basic block 42 from 385 to 391 -- before reload
;;   ======================================================

;;	  0--> 385  %r3=r125                           :iu1_6xx|iu2_6xx
;;	  1--> 391  use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 385
;;   new tail = 391


;; Procedure interblock/speculative motions == 11/10 


(note:HI 2 0 7 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap]
(note:HI 7 2 5 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 5 7 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 5 15 0 NOTE_INSN_DELETED)

(note:HI 15 11 10 0 NOTE_INSN_DELETED)

(insn:HI 10 15 4 0 (set (reg/f:SI 142)
        (high:SI (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 4 10 13 0 (set (reg/v:SI 140 [ caseflag ])
        (reg:SI 4 %r4 [ caseflag ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ caseflag ])
        (nil)))

(insn:HI 13 4 3 0 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 142)
            (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 4 (insn_list:REG_DEP_TRUE 10 (nil)))
    (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>)
            (insn_list:REG_LIBCALL 14 (nil)))))

(insn:HI 3 13 14 0 (set (reg/v/f:SI 139 [ n ])
        (reg:SI 3 %r3 [ n ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 14 3 17 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x401f04fc strcmp>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_TRUE 13 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 13 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
                (nil)))))

(insn:HI 17 14 18 0 (set (reg:CC 145)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 18 17 20 0 (set (pc)
        (if_then_else (ne (reg:CC 145)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 4 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_TRUE 17 (insn_list:REG_DEP_ANTI 14 (nil)))))))
    (expr_list:REG_DEAD (reg:CC 145)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140

;; Start of basic block 1, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140
(note:HI 20 18 22 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 22 20 24 1 (set (reg:SI 3 %r3 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 139 [ n ])
        (nil)))

(insn:HI 24 22 23 1 (set (reg:SI 5 %r5 [ caseflag ])
        (reg/v:SI 140 [ caseflag ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 140 [ caseflag ])
        (nil)))

(insn:HI 23 24 25 1 (set (reg:SI 4 %r4)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 25 23 26 1 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("newname") [flags 0x41] <function_decl 0x40285a6c newname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 24 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 22 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5 [ caseflag ])
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5 [ caseflag ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
                (nil)))))

(insn:HI 26 25 409 1 (set (reg/v:SI 125 [ m ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 25 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 409 26 410 1 (set (pc)
        (label_ref 377)) 460 {jump} (insn_list:REG_DEP_ANTI 22 (insn_list:REG_DEP_TRUE 24 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 25 (nil))))))
    (nil))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

(barrier:HI 410 409 29)

;; Start of basic block 2, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140
(code_label:HI 29 410 30 2 30 "" [1 uses])

(note:HI 30 29 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 35 30 32 2 NOTE_INSN_DELETED)

(insn:HI 32 35 33 2 (set (reg:SI 3 %r3 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 33 32 34 2 (set (reg:SI 4 %r4)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 8 [0x8]))) 36 {*addsi3_internal1} (nil)
    (nil))

(call_insn:HI 34 33 36 2 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("stat") [flags 0x41] <function_decl 0x4025b32c stat>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 32 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
            (nil))))

(insn:HI 36 34 37 2 (set (reg:CC 146)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 34 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 37 36 39 2 (set (pc)
        (if_then_else (eq (reg:CC 146)
                (const_int 0 [0x0]))
            (label_ref 153)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 32 (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_TRUE 36 (insn_list:REG_DEP_ANTI 34 (nil)))))
    (expr_list:REG_DEAD (reg:CC 146)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 2, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140

;; Start of basic block 3, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140
(note:HI 39 37 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 41 39 42 3 (set (reg:SI 3 %r3 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 139 [ n ])
        (nil)))

(insn:HI 42 41 43 3 (set (reg:SI 4 %r4)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 43 42 44 3 (set (reg:SI 5 %r5)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 44 43 45 3 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("ex2in") [flags 0x3] <function_decl 0x4028815c ex2in>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 355 {*call_value_local32} (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_TRUE 41 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_UNUSED (scratch:SI)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
                (nil)))))

(insn:HI 45 44 47 3 (set (reg/v/f:SI 119 [ p.39 ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 44 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 47 45 49 3 (set (reg/f:SI 148)
        (high:SI (symbol_ref:SI ("zfiles") [flags 0x44] <var_decl 0x40281244 zfiles>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 44 (nil))
    (nil))

(insn:HI 49 47 54 3 (set (reg/v/f:SI 123 [ z ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 148)
                (symbol_ref:SI ("zfiles") [flags 0x44] <var_decl 0x40281244 zfiles>)) [9 zfiles+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 47 (insn_list:REG_DEP_ANTI 44 (nil)))
    (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("zfiles") [flags 0x44] <var_decl 0x40281244 zfiles>) [9 zfiles+0 S4 A32])
            (nil))))

(insn:HI 54 49 50 3 (set (reg/v:SI 120 [ m.38 ])
        (const_int 1 [0x1])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 50 54 51 3 (set (reg:CC 149)
        (compare:CC (reg/v/f:SI 123 [ z ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_ANTI 44 (nil)))
    (nil))

(jump_insn:HI 51 50 58 3 (set (pc)
        (if_then_else (eq (reg:CC 149)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 41 (insn_list:REG_DEP_ANTI 42 (insn_list:REG_DEP_ANTI 43 (insn_list:REG_DEP_ANTI 45 (insn_list:REG_DEP_ANTI 47 (insn_list:REG_DEP_ANTI 49 (insn_list:REG_DEP_ANTI 54 (insn_list:REG_DEP_TRUE 50 (insn_list:REG_DEP_ANTI 44 (nil))))))))))
    (expr_list:REG_DEAD (reg:CC 149)
        (expr_list:REG_BR_PROB (const_int 3537 [0xdd1])
            (nil))))
;; End of basic block 3, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140

;; Start of basic block 4, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 123 140
(note:HI 58 51 59 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 59 58 400 4 (set (reg/v:SI 120 [ m.38 ])
        (const_int 1 [0x1])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 400 59 401 4 (set (reg/f:SI 153)
        (high:SI (symbol_ref:SI ("pcount") [flags 0x44] <var_decl 0x402817b4 pcount>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 401 400 402 4 (set (reg/f:SI 158)
        (high:SI (symbol_ref:SI ("verbose") [flags 0x44] <var_decl 0x4027ea6c verbose>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 402 401 403 4 (set (reg/f:SI 162)
        (high:SI (symbol_ref:SI ("mesg") [flags 0x44] <var_decl 0x40281074 mesg>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 403 402 404 4 (set (reg/f:SI 164)
        (high:SI (symbol_ref/f:SI ("*.LC1") [flags 0x2] <string_cst 0x40415720>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 404 403 405 4 (set (reg/f:SI 165)
        (high:SI (symbol_ref/f:SI ("*.LC2") [flags 0x2] <string_cst 0x404157a0>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 405 404 395 4 (set (reg/f:SI 167)
        (high:SI (symbol_ref/f:SI ("*.LC3") [flags 0x2] <string_cst 0x403e0340>))) 263 {elf_high} (nil)
    (nil))
;; End of basic block 4, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 164 165 167

(note:HI 395 405 60 NOTE_INSN_LOOP_BEG)

;; Start of basic block 5, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 164 165 167
(code_label:HI 60 395 61 5 38 "" [1 uses])

(note:HI 61 60 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 63 61 68 5 NOTE_INSN_DELETED)

(note:HI 68 63 65 5 NOTE_INSN_DELETED)

(insn:HI 65 68 66 5 (set (reg:SI 4 %r4 [ <variable>.iname ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 123 [ z ])
                (const_int 72 [0x48])) [8 <variable>.iname+0 S4 A32])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 66 65 64 5 (set (reg:SI 5 %r5 [ caseflag ])
        (reg/v:SI 140 [ caseflag ])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 64 66 67 5 (set (reg:SI 3 %r3 [ p.39 ])
        (reg/v/f:SI 119 [ p.39 ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 67 64 69 5 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("shmatch") [flags 0x41] <function_decl 0x402891d0 shmatch>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 65 (insn_list:REG_DEP_TRUE 64 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ <variable>.iname ])
        (expr_list:REG_DEAD (reg:SI 5 %r5 [ caseflag ])
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5 [ caseflag ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ <variable>.iname ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p.39 ]))
                (nil)))))

(insn:HI 69 67 81 5 (set (reg:CC 151)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 67 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 81 69 70 5 (set (reg:SI 135 [ iftmp.3 ])
        (const_int 1 [0x1])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 67 (nil))
    (nil))

(jump_insn:HI 70 81 72 5 (set (pc)
        (if_then_else (eq (reg:CC 151)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 64 (insn_list:REG_DEP_ANTI 65 (insn_list:REG_DEP_ANTI 66 (insn_list:REG_DEP_TRUE 69 (insn_list:REG_DEP_ANTI 67 (nil))))))
    (expr_list:REG_DEAD (reg:CC 151)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 135 140 153 158 162 164 165 167

;; Start of basic block 6, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 123 135 140 153 158 162 164 165 167
(note:HI 72 70 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 76 72 88 6 (set (reg:SI 154 [ pcount ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 153)
                (symbol_ref:SI ("pcount") [flags 0x44] <var_decl 0x402817b4 pcount>)) [3 pcount+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 67 (nil))
    (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("pcount") [flags 0x44] <var_decl 0x402817b4 pcount>) [3 pcount+0 S4 A32])
        (nil)))

(insn:HI 88 76 77 6 (set (reg:SI 4 %r4 [ caseflag ])
        (reg/v:SI 140 [ caseflag ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_OUTPUT 65 (nil)))
    (nil))

(insn:HI 77 88 102 6 (set (reg:CC 155)
        (compare:CC (reg:SI 154 [ pcount ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_ANTI 67 (nil)))
    (expr_list:REG_DEAD (reg:SI 154 [ pcount ])
        (nil)))

(insn:HI 102 77 78 6 (set (reg/v:SI 120 [ m.38 ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 78 102 85 6 (set (pc)
        (if_then_else (eq (reg:CC 155)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 76 (insn_list:REG_DEP_ANTI 81 (insn_list:REG_DEP_TRUE 77 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 67 (nil))))))
    (expr_list:REG_DEAD (reg:CC 155)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 6, registers live:
 1 [%r1] 4 [%r4] 31 [%r31] 67 [ap] 119 120 123 135 140 153 158 162 164 165 167

;; Start of basic block 7, registers live: 1 [%r1] 4 [%r4] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 164 165 167
(note:HI 85 78 86 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 86 85 87 7 NOTE_INSN_DELETED)

(insn:HI 87 86 89 7 (set (reg:SI 3 %r3 [ <variable>.zname ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 123 [ z ])
                (const_int 76 [0x4c])) [8 <variable>.zname+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 69 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 70 (nil)))))
    (nil))

(call_insn:HI 89 87 90 7 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("filter") [flags 0x41] <function_decl 0x40285828 filter>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_OUTPUT 81 (insn_list:REG_DEP_ANTI 76 (insn_list:REG_DEP_OUTPUT 66 (insn_list:REG_DEP_TRUE 88 (insn_list:REG_DEP_TRUE 87 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 77 (insn_list:REG_DEP_ANTI 70 (nil))))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ caseflag ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ caseflag ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ <variable>.zname ]))
            (nil))))

(insn:HI 90 89 91 7 (set (reg:SI 135 [ iftmp.3 ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 89 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))
;; End of basic block 7, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 135 140 153 158 162 164 165 167

;; Start of basic block 8, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 135 140 153 158 162 164 165 167
(code_label:HI 91 90 92 8 43 "" [1 uses])

(note:HI 92 91 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:HI 97 92 111 8 (set (reg:SI 159 [ verbose ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 158)
                (symbol_ref:SI ("verbose") [flags 0x44] <var_decl 0x4027ea6c verbose>)) [3 verbose+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 89 (nil)))
    (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("verbose") [flags 0x44] <var_decl 0x4027ea6c verbose>) [3 verbose+0 S4 A32])
        (nil)))

(insn:HI 111 97 98 8 (set (reg:CC 163)
        (compare:CC (reg:SI 135 [ iftmp.3 ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 81 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 67 (nil)))))
    (nil))

(insn:HI 98 111 93 8 (set (reg:CC 160)
        (compare:CC (reg:SI 159 [ verbose ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 97 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 89 (nil))))
    (expr_list:REG_DEAD (reg:SI 159 [ verbose ])
        (nil)))

(insn:HI 93 98 99 8 (set (mem/s:SI (plus:SI (reg/v/f:SI 123 [ z ])
                (const_int 80 [0x50])) [3 <variable>.mark+0 S4 A32])
        (reg:SI 135 [ iftmp.3 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 81 (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 76 (nil))))))))
    (expr_list:REG_DEAD (reg:SI 135 [ iftmp.3 ])
        (nil)))

(jump_insn:HI 99 93 106 8 (set (pc)
        (if_then_else (eq (reg:CC 160)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 97 (insn_list:REG_DEP_ANTI 102 (insn_list:REG_DEP_TRUE 98 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 93 (nil)))))))))
    (expr_list:REG_DEAD (reg:CC 160)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 163 164 165 167

;; Start of basic block 9, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 123 140 153 158 162 163 164 165 167
(note:HI 106 99 116 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 116 106 110 9 (set (reg/f:SI 133 [ iftmp.7 ])
        (lo_sum:SI (reg/f:SI 164)
            (symbol_ref/f:SI ("*.LC1") [flags 0x2] <string_cst 0x40415720>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 89 (nil)))
    (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC1") [flags 0x2] <string_cst 0x40415720>)
        (nil)))

(insn:HI 110 116 112 9 (set (reg:SI 134 [ mesg.6 ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 162)
                (symbol_ref:SI ("mesg") [flags 0x44] <var_decl 0x40281074 mesg>)) [12 mesg+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 67 (nil)))
    (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("mesg") [flags 0x44] <var_decl 0x40281074 mesg>) [12 mesg+0 S4 A32])
        (nil)))

(jump_insn:HI 112 110 114 9 (set (pc)
        (if_then_else (eq (reg:CC 163)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 110 (insn_list:REG_DEP_TRUE 111 (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_OUTPUT 93 (nil)))))))))
    (expr_list:REG_DEAD (reg:CC 163)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 123 133 134 140 153 158 162 164 165 167

;; Start of basic block 10, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 123 133 134 140 153 158 162 164 165 167
(note:HI 114 112 417 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 417 114 418 10 (set (pc)
        (label_ref 123)) 460 {jump} (insn_list:REG_DEP_ANTI 112 (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_TRUE 98 (insn_list:REG_DEP_TRUE 97 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_TRUE 77 (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_TRUE 81 (insn_list:REG_DEP_TRUE 111 (insn_list:REG_DEP_TRUE 110 (insn_list:REG_DEP_TRUE 116 (insn_list:REG_DEP_ANTI 87 (insn_list:REG_DEP_ANTI 93 (insn_list:REG_DEP_TRUE 102 (insn_list:REG_DEP_ANTI 64 (insn_list:REG_DEP_TRUE 66 (insn_list:REG_DEP_TRUE 65 (insn_list:REG_DEP_TRUE 88 (insn_list:REG_DEP_TRUE 69 (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 89 (insn_list:REG_DEP_TRUE 67 (nil))))))))))))))))))))))))
    (nil))
;; End of basic block 10, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 123 133 134 140 153 158 162 164 165 167

(barrier:HI 418 417 119)

;; Start of basic block 11, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 123 134 140 153 158 162 164 165 167
(code_label:HI 119 418 120 11 46 "" [1 uses])

(note:HI 120 119 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 122 120 123 11 (set (reg/f:SI 133 [ iftmp.7 ])
        (lo_sum:SI (reg/f:SI 165)
            (symbol_ref/f:SI ("*.LC2") [flags 0x2] <string_cst 0x404157a0>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 89 (nil)))
    (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC2") [flags 0x2] <string_cst 0x404157a0>)
        (nil)))
;; End of basic block 11, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 123 133 134 140 153 158 162 164 165 167

;; Start of basic block 12, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 123 133 134 140 153 158 162 164 165 167
(code_label:HI 123 122 124 12 48 "" [1 uses])

(note:HI 124 123 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 127 124 131 12 NOTE_INSN_DELETED)

(insn:HI 131 127 128 12 (set (reg:SI 6 %r6 [ <variable>.name ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 123 [ z ])
                (const_int 56 [0x38])) [8 <variable>.name+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 417 (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 112 (nil))))))))
    (nil))

(insn:HI 128 131 130 12 (set (reg:SI 3 %r3 [ mesg.6 ])
        (reg:SI 134 [ mesg.6 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 90 (insn_list:REG_DEP_ANTI 69 (insn_list:REG_DEP_OUTPUT 89 (insn_list:REG_DEP_OUTPUT 67 (insn_list:REG_DEP_TRUE 417 (insn_list:REG_DEP_TRUE 110 (nil)))))))
    (expr_list:REG_DEAD (reg:SI 134 [ mesg.6 ])
        (nil)))

(insn:HI 130 128 129 12 (set (reg:SI 5 %r5 [ iftmp.7 ])
        (reg/f:SI 133 [ iftmp.7 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 89 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_OUTPUT 66 (insn_list:REG_DEP_TRUE 417 (insn_list:REG_DEP_TRUE 122 (nil))))))
    (expr_list:REG_DEAD (reg/f:SI 133 [ iftmp.7 ])
        (nil)))

(insn:HI 129 130 133 12 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 167)
            (symbol_ref/f:SI ("*.LC3") [flags 0x2] <string_cst 0x403e0340>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_OUTPUT 88 (insn_list:REG_DEP_OUTPUT 65 (insn_list:REG_DEP_TRUE 417 (nil))))))
    (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC3") [flags 0x2] <string_cst 0x403e0340>)
        (nil)))

(insn:HI 133 129 132 12 (set (reg/v:SI 120 [ m.38 ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 417 (insn_list:REG_DEP_OUTPUT 102 (nil)))
    (nil))

(call_insn:HI 132 133 134 12 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("fprintf") [flags 0x41] <function_decl 0x401f332c fprintf>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 4 [0x4]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 97 (insn_list:REG_DEP_ANTI 76 (insn_list:REG_DEP_ANTI 110 (insn_list:REG_DEP_TRUE 131 (insn_list:REG_DEP_TRUE 129 (insn_list:REG_DEP_TRUE 417 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_ANTI 98 (insn_list:REG_DEP_TRUE 93 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 77 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 111 (insn_list:REG_DEP_ANTI 112 (insn_list:REG_DEP_TRUE 128 (insn_list:REG_DEP_TRUE 130 (nil)))))))))))))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5 [ iftmp.7 ])
            (expr_list:REG_DEAD (reg:SI 6 %r6 [ <variable>.name ])
                (expr_list:REG_UNUSED (scratch:SI)
                    (expr_list:REG_UNUSED (reg:SI 3 %r3)
                        (expr_list:REG_EH_REGION (const_int 0 [0x0])
                            (nil)))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 6 %r6 [ <variable>.name ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5 [ iftmp.7 ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
                (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ mesg.6 ]))
                    (nil))))))
;; End of basic block 12, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 164 165 167

;; Start of basic block 13, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 164 165 167
(code_label:HI 134 132 135 13 39 "" [2 uses])

(note:HI 135 134 137 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:HI 137 135 138 13 (set (reg/v/f:SI 123 [ z ])
        (mem/s/f:SI (plus:SI (reg/v/f:SI 123 [ z ])
                (const_int 92 [0x5c])) [9 <variable>.nxt+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 131 (insn_list:REG_DEP_ANTI 87 (insn_list:REG_DEP_ANTI 65 (insn_list:REG_DEP_ANTI 93 (insn_list:REG_DEP_TRUE 417 (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 132 (nil))))))))))))
    (nil))

(insn:HI 138 137 139 13 (set (reg:CC 169)
        (compare:CC (reg/v/f:SI 123 [ z ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_OUTPUT 417 (insn_list:REG_DEP_TRUE 137 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 132 (nil))))))
    (nil))

(jump_insn:HI 139 138 396 13 (set (pc)
        (if_then_else (ne (reg:CC 169)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 137 (insn_list:REG_DEP_TRUE 138 (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_ANTI 67 (insn_list:REG_DEP_ANTI 78 (insn_list:REG_DEP_ANTI 132 (insn_list:REG_DEP_OUTPUT 93 (nil))))))))))
    (expr_list:REG_DEAD (reg:CC 169)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 13, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 123 140 153 158 162 164 165 167

(note:HI 396 139 140 NOTE_INSN_LOOP_END)

;; Start of basic block 14, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 120
(code_label:HI 140 396 141 14 37 "" [1 uses])

(note:HI 141 140 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:HI 143 141 144 14 (set (reg:SI 3 %r3 [ p.39 ])
        (reg/v/f:SI 119 [ p.39 ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 119 [ p.39 ])
        (nil)))

(call_insn:HI 144 143 146 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 143 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ p.39 ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p.39 ]))
        (nil)))

(insn:HI 146 144 150 14 (set (reg:CC 170)
        (compare:CC (reg/v:SI 120 [ m.38 ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_ANTI 144 (nil))
    (expr_list:REG_DEAD (reg/v:SI 120 [ m.38 ])
        (nil)))

(insn:HI 150 146 147 14 (set (reg/v:SI 125 [ m ])
        (const_int -1 [0xffffffffffffffff])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 147 150 442 14 (set (pc)
        (if_then_else (ne (reg:CC 170)
                (const_int 0 [0x0]))
            (label_ref 377)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 143 (insn_list:REG_DEP_ANTI 150 (insn_list:REG_DEP_TRUE 146 (insn_list:REG_DEP_ANTI 144 (nil)))))
    (expr_list:REG_DEAD (reg:CC 170)
        (expr_list:REG_BR_PROB (const_int 400 [0x190])
            (nil))))
;; End of basic block 14, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

;; Start of basic block 15, registers live: 1 [%r1] 31 [%r31] 67 [ap]
(note:HI 442 147 443 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 443 442 444 15 (set (pc)
        (label_ref 374)) 460 {jump} (nil)
    (nil))
;; End of basic block 15, registers live:
 1 [%r1] 31 [%r31] 67 [ap]

(barrier:HI 444 443 153)

;; Start of basic block 16, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140
(code_label:HI 153 444 154 16 33 "" [1 uses])

(note:HI 154 153 156 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note:HI 156 154 158 16 NOTE_INSN_DELETED)

(note:HI 158 156 157 16 NOTE_INSN_DELETED)

(insn:HI 157 158 159 16 (set (reg:SI 171 [ s.st_mode ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 31 %r31)
                    (const_int 8 [0x8])) [6 s.st_mode+0 S2 A64]))) 30 {*rs6000.md:847} (nil)
    (nil))

(insn:HI 159 157 160 16 (parallel [
            (set (reg:CC 174)
                (compare:CC (zero_extract:SI (reg:SI 171 [ s.st_mode ])
                        (const_int 1 [0x1])
                        (const_int 20 [0x14]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 94 {*extzvsi_internal1} (insn_list:REG_DEP_TRUE 157 (nil))
    (expr_list:REG_DEAD (reg:SI 171 [ s.st_mode ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil))))

(jump_insn:HI 160 159 162 16 (set (pc)
        (if_then_else (ne (reg:CC 174)
                (const_int 0 [0x0]))
            (label_ref 174)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 157 (insn_list:REG_DEP_TRUE 159 (nil)))
    (expr_list:REG_DEAD (reg:CC 174)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 16, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140

;; Start of basic block 17, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140
(note:HI 162 160 168 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 168 162 164 17 NOTE_INSN_DELETED)

(insn:HI 164 168 166 17 (set (reg:SI 3 %r3 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 139 [ n ])
        (nil)))

(insn:HI 166 164 165 17 (set (reg:SI 5 %r5 [ caseflag ])
        (reg/v:SI 140 [ caseflag ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 140 [ caseflag ])
        (nil)))

(insn:HI 165 166 167 17 (set (reg:SI 4 %r4)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 167 165 169 17 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("newname") [flags 0x41] <function_decl 0x40285a6c newname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 166 (insn_list:REG_DEP_TRUE 165 (insn_list:REG_DEP_TRUE 164 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5 [ caseflag ])
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5 [ caseflag ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
                (nil)))))

(insn:HI 169 167 170 17 (parallel [
            (set (reg:CC 175)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 125 [ m ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 167 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 170 169 423 17 (set (pc)
        (if_then_else (ne (reg:CC 175)
                (const_int 0 [0x0]))
            (label_ref 377)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 164 (insn_list:REG_DEP_ANTI 165 (insn_list:REG_DEP_ANTI 166 (insn_list:REG_DEP_TRUE 169 (insn_list:REG_DEP_ANTI 167 (nil))))))
    (expr_list:REG_DEAD (reg:CC 175)
        (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
            (nil))))
;; End of basic block 17, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

;; Start of basic block 18, registers live: 1 [%r1] 31 [%r31] 67 [ap]
(note:HI 423 170 424 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 424 423 425 18 (set (pc)
        (label_ref 374)) 460 {jump} (nil)
    (nil))
;; End of basic block 18, registers live:
 1 [%r1] 31 [%r31] 67 [ap]

(barrier:HI 425 424 174)

;; Start of basic block 19, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140
(code_label:HI 174 425 175 19 51 "" [1 uses])

(note:HI 175 174 179 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note:HI 179 175 181 19 NOTE_INSN_DELETED)

(note:HI 181 179 184 19 NOTE_INSN_DELETED)

(note:HI 184 181 177 19 NOTE_INSN_DELETED)

(insn:HI 177 184 178 19 (set (reg:SI 3 %r3 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (insn_list:REG_LIBCALL 178 (nil)))

(call_insn/u:HI 178 177 182 19 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 177 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 177 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
            (nil))))

(insn:HI 182 178 183 19 (set (reg:SI 3 %r3)
        (plus:SI (reg:SI 3 %r3)
            (const_int 2 [0x2]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 178 (nil))
    (nil))

(call_insn:HI 183 182 187 19 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 182 (insn_list:REG_DEP_ANTI 178 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 187 183 191 19 (parallel [
            (set (reg:CC 180)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 179)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 183 (nil))
    (nil))

(insn:HI 191 187 188 19 (set (reg/v:SI 125 [ m ])
        (const_int 4 [0x4])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 188 191 195 19 (set (pc)
        (if_then_else (eq (reg:CC 180)
                (const_int 0 [0x0]))
            (label_ref 377)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 177 (insn_list:REG_DEP_ANTI 178 (insn_list:REG_DEP_ANTI 182 (insn_list:REG_DEP_ANTI 191 (insn_list:REG_DEP_TRUE 187 (insn_list:REG_DEP_ANTI 183 (nil)))))))
    (expr_list:REG_DEAD (reg:CC 180)
        (expr_list:REG_BR_PROB (const_int 2124 [0x84c])
            (nil))))
;; End of basic block 19, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 125 139 140 179

;; Start of basic block 20, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 139 140 179
(note:HI 195 188 207 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note:HI 207 195 198 20 NOTE_INSN_DELETED)

(insn:HI 198 207 199 20 (set (reg:SI 4 %r4 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 199 198 201 20 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 198 (nil))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ n ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ n ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
            (nil))))

(insn:HI 201 199 202 20 (set (reg:SI 3 %r3 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 199 (nil))
    (insn_list:REG_LIBCALL 203 (nil)))

(call_insn/u:HI 202 201 203 20 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_OUTPUT 198 (insn_list:REG_DEP_TRUE 201 (insn_list:REG_DEP_ANTI 199 (nil))))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
            (nil))))

(insn:HI 203 202 208 20 (set (reg:SI 181)
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 202 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (insn_list:REG_RETVAL 201 (expr_list:REG_EQUAL (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
                    (expr_list:REG_DEP_TRUE (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>)
                        (expr_list:REG_DEP_TRUE (reg/f:SI 179)
                            (nil))))
                (nil)))))

(insn:HI 208 203 205 20 (set (reg:SI 184)
        (zero_extend:SI (mem:QI (reg/f:SI 179) [0 S1 A8]))) 18 {*rs6000.md:513} (insn_list:REG_DEP_ANTI 202 (nil))
    (nil))

(insn:HI 205 208 209 20 (set (reg/v/f:SI 128 [ a ])
        (plus:SI (reg/f:SI 179)
            (reg:SI 181))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 203 (insn_list:REG_DEP_ANTI 202 (nil)))
    (nil))

(insn:HI 209 205 210 20 (set (reg:CC 185)
        (compare:CC (reg:SI 184)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 208 (insn_list:REG_DEP_ANTI 202 (nil)))
    (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn:HI 210 209 212 20 (set (pc)
        (if_then_else (eq (reg:CC 185)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 198 (insn_list:REG_DEP_ANTI 199 (insn_list:REG_DEP_ANTI 201 (insn_list:REG_DEP_ANTI 203 (insn_list:REG_DEP_ANTI 205 (insn_list:REG_DEP_ANTI 208 (insn_list:REG_DEP_TRUE 209 (insn_list:REG_DEP_ANTI 202 (nil)))))))))
    (expr_list:REG_DEAD (reg:CC 185)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 139 140 179 181

;; Start of basic block 21, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 139 140 179 181
(note:HI 212 210 213 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 213 212 214 21 NOTE_INSN_DELETED)

(insn:HI 214 213 215 21 (set (reg:SI 131 [ D.5209 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 128 [ a ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 18 {*rs6000.md:513} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 128 [ a ])
        (nil)))

(insn:HI 215 214 216 21 (set (reg:CC 187)
        (compare:CC (reg:SI 131 [ D.5209 ])
            (const_int 47 [0x2f]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 214 (nil))
    (nil))

(jump_insn:HI 216 215 218 21 (set (pc)
        (if_then_else (eq (reg:CC 187)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 214 (insn_list:REG_DEP_TRUE 215 (nil)))
    (expr_list:REG_DEAD (reg:CC 187)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 21, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 131 139 140 179 181

;; Start of basic block 22, registers live: 1 [%r1] 31 [%r31] 67 [ap] 131 139 140 179 181
(note:HI 218 216 219 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 219 218 220 22 (set (reg:CC 188)
        (compare:CC (reg:SI 131 [ D.5209 ])
            (const_int 58 [0x3a]))) 368 {*cmpsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 131 [ D.5209 ])
        (nil)))

(jump_insn:HI 220 219 222 22 (set (pc)
        (if_then_else (eq (reg:CC 188)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 219 (nil))
    (expr_list:REG_DEAD (reg:CC 188)
        (expr_list:REG_BR_PROB (const_int 4880 [0x1310])
            (nil))))
;; End of basic block 22, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140 179 181

;; Start of basic block 23, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140 179 181
(note:HI 222 220 224 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 224 222 225 23 (set (reg:HI 189)
        (const_int 12032 [0x2f00])) 270 {*movhi_internal} (nil)
    (nil))

(insn:HI 225 224 226 23 (set (mem:HI (plus:SI (reg/f:SI 179)
                (reg:SI 181)) [0 S2 A8])
        (reg:HI 189)) 270 {*movhi_internal} (insn_list:REG_DEP_TRUE 224 (nil))
    (expr_list:REG_DEAD (reg:HI 189)
        (expr_list:REG_DEAD (reg:SI 181)
            (expr_list:REG_EQUAL (const_int 12032 [0x2f00])
                (nil)))))
;; End of basic block 23, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140 179

;; Start of basic block 24, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140 179
(code_label:HI 226 225 227 24 55 "" [3 uses])

(note:HI 227 226 229 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 229 227 231 24 (set (reg/f:SI 191)
        (high:SI (symbol_ref:SI ("dirnames") [flags 0x44] <var_decl 0x4027ed98 dirnames>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 231 229 232 24 (set (reg:SI 192 [ dirnames ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 191)
                (symbol_ref:SI ("dirnames") [flags 0x44] <var_decl 0x4027ed98 dirnames>)) [3 dirnames+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 229 (nil))
    (expr_list:REG_DEAD (reg/f:SI 191)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("dirnames") [flags 0x44] <var_decl 0x4027ed98 dirnames>) [3 dirnames+0 S4 A32])
            (nil))))

(insn:HI 232 231 233 24 (set (reg:CC 193)
        (compare:CC (reg:SI 192 [ dirnames ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 231 (nil))
    (expr_list:REG_DEAD (reg:SI 192 [ dirnames ])
        (nil)))

(jump_insn:HI 233 232 235 24 (set (pc)
        (if_then_else (eq (reg:CC 193)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 229 (insn_list:REG_DEP_ANTI 231 (insn_list:REG_DEP_TRUE 232 (nil))))
    (expr_list:REG_DEAD (reg:CC 193)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 24, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140 179

;; Start of basic block 25, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140 179
(note:HI 235 233 240 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note:HI 240 235 236 25 NOTE_INSN_DELETED)

(insn:HI 236 240 237 25 (set (reg:SI 3 %r3 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 237 236 238 25 (set (reg:SI 4 %r4)
        (const_int 1 [0x1])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 238 237 239 25 (set (reg:SI 5 %r5 [ caseflag ])
        (reg/v:SI 140 [ caseflag ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 239 238 241 25 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("newname") [flags 0x41] <function_decl 0x40285a6c newname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 238 (insn_list:REG_DEP_TRUE 237 (insn_list:REG_DEP_TRUE 236 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5 [ caseflag ])
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5 [ caseflag ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
                (nil)))))

(insn:HI 241 239 242 25 (parallel [
            (set (reg:CC 194)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 125 [ m ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 239 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 242 241 244 25 (set (pc)
        (if_then_else (eq (reg:CC 194)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 236 (insn_list:REG_DEP_ANTI 237 (insn_list:REG_DEP_ANTI 238 (insn_list:REG_DEP_TRUE 241 (insn_list:REG_DEP_ANTI 239 (nil))))))
    (expr_list:REG_DEAD (reg:CC 194)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 25, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125 139 140 179

;; Start of basic block 26, registers live: 1 [%r1] 31 [%r31] 67 [ap] 125 179
(note:HI 244 242 246 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:HI 246 244 247 26 (set (reg:SI 3 %r3 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))

(call_insn:HI 247 246 428 26 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 246 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ p ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
        (nil)))

(jump_insn:HI 428 247 429 26 (set (pc)
        (label_ref 377)) 460 {jump} (insn_list:REG_DEP_TRUE 246 (insn_list:REG_DEP_TRUE 247 (nil)))
    (nil))
;; End of basic block 26, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

(barrier:HI 429 428 251)

;; Start of basic block 27, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140 179
(code_label:HI 251 429 252 27 59 "" [2 uses])

(note:HI 252 251 254 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:HI 254 252 256 27 (set (reg/f:SI 196)
        (high:SI (symbol_ref:SI ("recurse") [flags 0x44] <var_decl 0x4027e7b4 recurse>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 256 254 257 27 (set (reg:SI 197 [ recurse ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 196)
                (symbol_ref:SI ("recurse") [flags 0x44] <var_decl 0x4027e7b4 recurse>)) [3 recurse+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 254 (nil))
    (expr_list:REG_DEAD (reg/f:SI 196)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("recurse") [flags 0x44] <var_decl 0x4027e7b4 recurse>) [3 recurse+0 S4 A32])
            (nil))))

(insn:HI 257 256 258 27 (set (reg:CC 198)
        (compare:CC (reg:SI 197 [ recurse ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 256 (nil))
    (expr_list:REG_DEAD (reg:SI 197 [ recurse ])
        (nil)))

(jump_insn:HI 258 257 260 27 (set (pc)
        (if_then_else (eq (reg:CC 198)
                (const_int 0 [0x0]))
            (label_ref 366)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 254 (insn_list:REG_DEP_ANTI 256 (insn_list:REG_DEP_TRUE 257 (nil))))
    (expr_list:REG_DEAD (reg:CC 198)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 139 140 179

;; Start of basic block 28, registers live: 1 [%r1] 31 [%r31] 67 [ap] 139 140 179
(note:HI 260 258 263 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note:HI 263 260 261 28 NOTE_INSN_DELETED)

(insn:HI 261 263 262 28 (set (reg:SI 3 %r3 [ n ])
        (reg/v/f:SI 139 [ n ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 139 [ n ])
        (nil)))

(call_insn:HI 262 261 264 28 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("opendir") [flags 0x41] <function_decl 0x4025bbc8 opendir>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 261 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
        (nil)))

(insn:HI 264 262 265 28 (parallel [
            (set (reg:CC 199)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 127 [ d ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 262 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 265 264 397 28 (set (pc)
        (if_then_else (ne (reg:CC 199)
                (const_int 0 [0x0]))
            (label_ref 435)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 261 (insn_list:REG_DEP_TRUE 264 (insn_list:REG_DEP_ANTI 262 (nil))))
    (expr_list:REG_DEAD (reg:CC 199)
        (expr_list:REG_BR_PROB (const_int 8100 [0x1fa4])
            (nil))))
;; End of basic block 28, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 127 140 179

(note:HI 397 265 430 NOTE_INSN_LOOP_BEG)

;; Start of basic block 29, registers live: 1 [%r1] 31 [%r31] 67 [ap] 179
(note:HI 430 397 431 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 431 430 432 29 (set (pc)
        (label_ref 366)) 460 {jump} (nil)
    (nil))
;; End of basic block 29, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 179

(barrier:HI 432 431 269)

;; Start of basic block 30, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 126 127 140 179
(code_label:HI 269 432 270 30 65 "" [1 uses])

(note:HI 270 269 278 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note:HI 278 270 281 30 NOTE_INSN_DELETED)

(note:HI 281 278 284 30 NOTE_INSN_DELETED)

(note:HI 284 281 273 30 NOTE_INSN_DELETED)

(call_insn/u:HI 273 284 274 30 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 272 (insn_list:REG_DEP_ANTI 350 (insn_list:REG_DEP_ANTI 360 (insn_list:REG_DEP_TRUE 359 (insn_list:REG_DEP_ANTI 354 (nil))))))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
            (nil))))

(insn:HI 274 273 276 30 (set (reg:SI 200)
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 273 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (insn_list:REG_RETVAL 272 (expr_list:REG_EQUAL (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
                    (expr_list:REG_DEP_TRUE (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>)
                        (expr_list:REG_DEP_TRUE (reg/v/f:SI 124 [ p ])
                            (nil))))
                (nil)))))

(insn:HI 276 274 277 30 (set (reg:SI 3 %r3 [ e ])
        (reg/v/f:SI 126 [ e ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 274 (nil))
    (insn_list:REG_LIBCALL 277 (nil)))

(call_insn/u:HI 277 276 280 30 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 276 (insn_list:REG_DEP_ANTI 273 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 276 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ e ]))
            (nil))))

(insn:HI 280 277 282 30 (set (reg:SI 204)
        (plus:SI (reg:SI 200)
            (reg:SI 3 %r3))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 274 (insn_list:REG_DEP_TRUE 277 (nil)))
    (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_DEAD (reg:SI 3 %r3)
            (nil))))

(insn:HI 282 280 283 30 (set (reg:SI 3 %r3)
        (plus:SI (reg:SI 204)
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_OUTPUT 277 (insn_list:REG_DEP_TRUE 280 (nil)))
    (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(call_insn:HI 283 282 305 30 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 273 (insn_list:REG_DEP_ANTI 277 (insn_list:REG_DEP_TRUE 282 (nil))))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 305 283 287 30 (set (reg:SI 4 %r4 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 283 (insn_list:REG_DEP_OUTPUT 277 (insn_list:REG_DEP_OUTPUT 273 (insn_list:REG_DEP_OUTPUT 350 (nil)))))
    (nil))

(insn:HI 287 305 288 30 (parallel [
            (set (reg:CC 207)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 206)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 283 (nil))
    (nil))

(jump_insn:HI 288 287 302 30 (set (pc)
        (if_then_else (eq (reg:CC 207)
                (const_int 0 [0x0]))
            (label_ref/s 399)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 272 (insn_list:REG_DEP_ANTI 273 (insn_list:REG_DEP_ANTI 274 (insn_list:REG_DEP_ANTI 276 (insn_list:REG_DEP_ANTI 277 (insn_list:REG_DEP_ANTI 280 (insn_list:REG_DEP_ANTI 282 (insn_list:REG_DEP_TRUE 287 (insn_list:REG_DEP_ANTI 283 (nil))))))))))
    (expr_list:REG_DEAD (reg:CC 207)
        (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
            (nil))))
;; End of basic block 30, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 126 127 140 179 206

;; Start of basic block 31, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 126 127 140 179 206
(note:HI 302 288 316 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note:HI 316 302 306 31 NOTE_INSN_DELETED)

(call_insn:HI 306 316 310 31 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 359 (insn_list:REG_DEP_ANTI 287 (insn_list:REG_DEP_TRUE 305 (insn_list:REG_DEP_TRUE 283 (insn_list:REG_DEP_ANTI 288 (nil))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ p ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ p ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ a.40 ]))
            (nil))))

(insn:HI 310 306 311 31 (set (reg:SI 4 %r4 [ e ])
        (reg/v/f:SI 126 [ e ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 306 (nil))
    (expr_list:REG_DEAD (reg/v/f:SI 126 [ e ])
        (nil)))

(call_insn:HI 311 310 313 31 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcat") [flags 0x41] <function_decl 0x401f0074 strcat>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 287 (insn_list:REG_DEP_TRUE 310 (insn_list:REG_DEP_TRUE 306 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ e ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ e ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ D.5219 ]))
            (nil))))

(insn:HI 313 311 314 31 (set (reg:SI 3 %r3 [ a.40 ])
        (reg/f:SI 206)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 311 (nil))
    (nil))

(insn:HI 314 313 315 31 (set (reg:SI 4 %r4 [ caseflag ])
        (reg/v:SI 140 [ caseflag ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 313 (nil))
    (nil))

(call_insn:HI 315 314 317 31 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("procname") [flags 0x3] <function_decl 0x4028832c procname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 355 {*call_value_local32} (insn_list:REG_DEP_TRUE 314 (insn_list:REG_DEP_TRUE 313 (insn_list:REG_DEP_ANTI 311 (nil))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ caseflag ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ caseflag ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ a.40 ]))
            (nil))))

(insn:HI 317 315 323 31 (parallel [
            (set (reg:CC 209)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 121 [ m.37 ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 315 (nil))
    (nil))

(insn:HI 323 317 318 31 (set (reg:CC 211)
        (compare:CC (reg/v:SI 121 [ m.37 ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 317 (insn_list:REG_DEP_ANTI 315 (nil)))
    (expr_list:REG_DEAD (reg/v:SI 121 [ m.37 ])
        (nil)))

(jump_insn:HI 318 323 320 31 (set (pc)
        (if_then_else (eq (reg:CC 209)
                (const_int 0 [0x0]))
            (label_ref 341)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 305 (insn_list:REG_DEP_ANTI 306 (insn_list:REG_DEP_ANTI 310 (insn_list:REG_DEP_ANTI 311 (insn_list:REG_DEP_ANTI 313 (insn_list:REG_DEP_ANTI 314 (insn_list:REG_DEP_TRUE 317 (insn_list:REG_DEP_ANTI 315 (nil)))))))))
    (expr_list:REG_DEAD (reg:CC 209)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 127 140 179 206 211

;; Start of basic block 32, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 127 140 179 206 211
(note:HI 320 318 328 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:HI 328 320 331 32 (set (reg/f:SI 213)
        (high:SI (symbol_ref/f:SI ("*.LC4") [flags 0x2] <string_cst 0x40410444>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 315 (nil))
    (nil))

(insn:HI 331 328 324 32 (set (reg:SI 4 %r4 [ a.40 ])
        (reg/f:SI 206)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 315 (insn_list:REG_DEP_OUTPUT 314 (insn_list:REG_DEP_TRUE 287 (nil))))
    (nil))

(jump_insn:HI 324 331 326 32 (set (pc)
        (if_then_else (ne (reg:CC 211)
                (const_int 0 [0x0]))
            (label_ref 335)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 323 (insn_list:REG_DEP_ANTI 318 (insn_list:REG_DEP_ANTI 315 (nil))))
    (expr_list:REG_DEAD (reg:CC 211)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 32, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 127 140 179 206 213

;; Start of basic block 33, registers live: 1 [%r1] 4 [%r4] 31 [%r31] 67 [ap] 127 140 179 206 213
(note:HI 326 324 329 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 329 326 330 33 NOTE_INSN_DELETED)

(insn:HI 330 329 332 33 (set (reg:SI 3 %r3)
        (lo_sum:SI (reg/f:SI 213)
            (symbol_ref/f:SI ("*.LC4") [flags 0x2] <string_cst 0x40410444>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 317 (insn_list:REG_DEP_OUTPUT 315 (insn_list:REG_DEP_TRUE 328 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC4") [flags 0x2] <string_cst 0x40410444>)
            (nil))))

(call_insn:HI 332 330 433 33 (parallel [
            (call (mem:SI (symbol_ref:SI ("zipwarn") [flags 0x41] <function_decl 0x40281c3c zipwarn>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_ANTI 328 (insn_list:REG_DEP_TRUE 331 (insn_list:REG_DEP_ANTI 315 (insn_list:REG_DEP_ANTI 324 (insn_list:REG_DEP_ANTI 323 (insn_list:REG_DEP_ANTI 318 (insn_list:REG_DEP_TRUE 330 (nil))))))))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (expr_list:REG_DEAD (reg:SI 4 %r4 [ a.40 ])
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ a.40 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
            (nil))))

(jump_insn:HI 433 332 434 33 (set (pc)
        (label_ref 341)) 460 {jump} (insn_list:REG_DEP_ANTI 360 (insn_list:REG_DEP_ANTI 354 (insn_list:REG_DEP_TRUE 328 (insn_list:REG_DEP_ANTI 324 (insn_list:REG_DEP_ANTI 318 (insn_list:REG_DEP_ANTI 288 (insn_list:REG_DEP_TRUE 287 (insn_list:REG_DEP_ANTI 313 (insn_list:REG_DEP_ANTI 282 (insn_list:REG_DEP_TRUE 274 (insn_list:REG_DEP_TRUE 280 (insn_list:REG_DEP_ANTI 272 (insn_list:REG_DEP_ANTI 305 (insn_list:REG_DEP_ANTI 314 (insn_list:REG_DEP_ANTI 349 (insn_list:REG_DEP_ANTI 276 (insn_list:REG_DEP_ANTI 310 (insn_list:REG_DEP_TRUE 353 (insn_list:REG_DEP_TRUE 359 (insn_list:REG_DEP_TRUE 317 (insn_list:REG_DEP_TRUE 323 (insn_list:REG_DEP_TRUE 331 (insn_list:REG_DEP_TRUE 330 (insn_list:REG_DEP_TRUE 283 (insn_list:REG_DEP_TRUE 277 (insn_list:REG_DEP_TRUE 273 (insn_list:REG_DEP_TRUE 350 (insn_list:REG_DEP_TRUE 306 (insn_list:REG_DEP_TRUE 311 (insn_list:REG_DEP_TRUE 315 (insn_list:REG_DEP_TRUE 332 (nil))))))))))))))))))))))))))))))))
    (nil))
;; End of basic block 33, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 127 140 179 206

(barrier:HI 434 433 335)

;; Start of basic block 34, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 127 140 179 206
(code_label:HI 335 434 336 34 70 "" [1 uses])

(note:HI 336 335 339 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 339 336 340 34 (set (reg:SI 4 %r4 [ a.40 ])
        (reg/f:SI 206)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 315 (insn_list:REG_DEP_OUTPUT 314 (insn_list:REG_DEP_TRUE 287 (nil))))
    (nil))

(call_insn:HI 340 339 341 34 (parallel [
            (call (mem:SI (symbol_ref:SI ("ziperr") [flags 0x41] <function_decl 0x40281e0c ziperr>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_ANTI 317 (insn_list:REG_DEP_TRUE 339 (insn_list:REG_DEP_TRUE 315 (insn_list:REG_DEP_ANTI 324 (insn_list:REG_DEP_ANTI 323 (insn_list:REG_DEP_ANTI 318 (nil)))))))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ m.37 ])
        (expr_list:REG_DEAD (reg:SI 4 %r4 [ a.40 ])
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ a.40 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ m.37 ]))
            (nil))))
;; End of basic block 34, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 127 140 179 206

;; Start of basic block 35, registers live: 1 [%r1] 31 [%r31] 67 [ap] 127 140 179 206
(code_label:HI 341 340 342 35 68 "" [2 uses])

(note:HI 342 341 344 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:HI 344 342 345 35 (set (reg:SI 3 %r3 [ a.40 ])
        (reg/f:SI 206)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 317 (insn_list:REG_DEP_ANTI 340 (insn_list:REG_DEP_OUTPUT 315 (insn_list:REG_DEP_TRUE 433 (insn_list:REG_DEP_TRUE 287 (nil))))))
    (expr_list:REG_DEAD (reg/f:SI 206)
        (nil)))

(call_insn:HI 345 344 435 35 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_OUTPUT 314 (insn_list:REG_DEP_OUTPUT 339 (insn_list:REG_DEP_TRUE 344 (insn_list:REG_DEP_TRUE 433 (insn_list:REG_DEP_ANTI 315 (insn_list:REG_DEP_ANTI 340 (insn_list:REG_DEP_ANTI 318 (nil))))))))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ a.40 ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ a.40 ]))
        (nil)))
;; End of basic block 35, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 127 140 179

;; Start of basic block 36, registers live: 1 [%r1] 31 [%r31] 67 [ap] 127 140 179
(code_label:HI 435 345 406 36 77 "" [1 uses])

(note:HI 406 435 351 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note:HI 351 406 349 36 NOTE_INSN_DELETED)

(insn:HI 349 351 350 36 (set (reg:SI 3 %r3 [ d ])
        (reg/v/f:SI 127 [ d ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 350 349 353 36 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("readdir") [flags 0x41] <function_decl 0x4025d000 readdir>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 349 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ d ]))
        (nil)))

(insn:HI 353 350 272 36 (parallel [
            (set (reg:CC 214)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 122 [ e ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 350 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 272 353 359 36 (set (reg:SI 3 %r3 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 353 (insn_list:REG_DEP_OUTPUT 350 (nil)))
    (insn_list:REG_LIBCALL 274 (nil)))

(insn:HI 359 272 354 36 (parallel [
            (set (reg:CC 215)
                (compare:CC (plus:SI (reg/v/f:SI 122 [ e ])
                        (const_int 20 [0x14]))
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 126 [ e ])
                (plus:SI (reg/v/f:SI 122 [ e ])
                    (const_int 20 [0x14])))
        ]) 38 {*addsi3_internal3} (insn_list:REG_DEP_TRUE 353 (insn_list:REG_DEP_ANTI 350 (nil)))
    (expr_list:REG_DEAD (reg/v/f:SI 122 [ e ])
        (nil)))

(jump_insn:HI 354 359 356 36 (set (pc)
        (if_then_else (eq (reg:CC 214)
                (const_int 0 [0x0]))
            (label_ref/s 361)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 349 (insn_list:REG_DEP_TRUE 353 (insn_list:REG_DEP_ANTI 350 (nil))))
    (expr_list:REG_DEAD (reg:CC 214)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 36, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 126 127 140 179 215

;; Start of basic block 37, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 126 127 140 179 215
(note:HI 356 354 357 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note:HI 357 356 360 37 NOTE_INSN_DELETED)

(jump_insn:HI 360 357 398 37 (set (pc)
        (if_then_else (ne (reg:CC 215)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 359 (insn_list:REG_DEP_ANTI 354 (insn_list:REG_DEP_ANTI 350 (nil))))
    (expr_list:REG_DEAD (reg:CC 215)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 37, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 126 127 140 179

(note:HI 398 360 361 NOTE_INSN_LOOP_END)

;; Start of basic block 38, registers live: 1 [%r1] 31 [%r31] 67 [ap] 127 179
(code_label:HI 361 398 362 38 72 "" [1 uses])

(note:HI 362 361 364 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 364 362 365 38 (set (reg:SI 3 %r3 [ d ])
        (reg/v/f:SI 127 [ d ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 127 [ d ])
        (nil)))

(call_insn:HI 365 364 366 38 (parallel [
            (call (mem:SI (symbol_ref:SI ("closedir") [flags 0x41] <function_decl 0x4025bd24 closedir>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 364 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ d ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ d ]))
        (nil)))
;; End of basic block 38, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 179

;; Start of basic block 39, registers live: 1 [%r1] 31 [%r31] 67 [ap] 179
(code_label:HI 366 365 367 39 62 "" [2 uses])

(note:HI 367 366 369 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn:HI 369 367 370 39 (set (reg:SI 3 %r3 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))

(call_insn:HI 370 369 371 39 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 369 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ p ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
        (nil)))

(insn:HI 371 370 438 39 (set (reg/v:SI 125 [ m ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 438 371 439 39 (set (pc)
        (label_ref 377)) 460 {jump} (insn_list:REG_DEP_TRUE 371 (insn_list:REG_DEP_TRUE 369 (insn_list:REG_DEP_TRUE 370 (nil))))
    (nil))
;; End of basic block 39, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

(barrier:HI 439 438 399)

;; Start of basic block 40, registers live: 1 [%r1] 31 [%r31] 67 [ap] 127 179
(code_label:HI 399 439 290 40 75 "" [1 uses])

(note:HI 290 399 292 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:HI 292 290 293 40 (set (reg:SI 3 %r3 [ d ])
        (reg/v/f:SI 127 [ d ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 127 [ d ])
        (nil)))

(call_insn:HI 293 292 295 40 (parallel [
            (call (mem:SI (symbol_ref:SI ("closedir") [flags 0x41] <function_decl 0x4025bd24 closedir>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 292 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ d ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ d ]))
        (nil)))

(insn:HI 295 293 296 40 (set (reg:SI 3 %r3 [ p ])
        (reg/f:SI 179)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 293 (nil))
    (expr_list:REG_DEAD (reg/f:SI 179)
        (nil)))

(call_insn:HI 296 295 297 40 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 295 (insn_list:REG_DEP_ANTI 293 (nil)))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ p ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
        (nil)))

(insn:HI 297 296 440 40 (set (reg/v:SI 125 [ m ])
        (const_int 4 [0x4])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 440 297 441 40 (set (pc)
        (label_ref 377)) 460 {jump} (insn_list:REG_DEP_ANTI 292 (insn_list:REG_DEP_TRUE 297 (insn_list:REG_DEP_TRUE 295 (insn_list:REG_DEP_TRUE 293 (insn_list:REG_DEP_TRUE 296 (nil))))))
    (nil))
;; End of basic block 40, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

(barrier:HI 441 440 374)

;; Start of basic block 41, registers live: 1 [%r1] 31 [%r31] 67 [ap]
(code_label:HI 374 441 375 41 49 "" [2 uses])

(note:HI 375 374 376 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:HI 376 375 377 41 (set (reg/v:SI 125 [ m ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))
;; End of basic block 41, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

;; Start of basic block 42, registers live: 1 [%r1] 31 [%r31] 67 [ap] 125
(code_label:HI 377 376 378 42 32 "" [7 uses])

(note:HI 378 377 382 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note:HI 382 378 385 42 NOTE_INSN_FUNCTION_END)

(insn:HI 385 382 391 42 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg/v:SI 125 [ m ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 125 [ m ])
        (nil)))

(insn:HI 391 385 446 42 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 385 (nil))
    (nil))
;; End of basic block 42, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 446 391 0 42 NOTE_INSN_DELETED)


;; Function in2ex

;;   ======================================================
;;   -- basic block 0 from 3 to 20 -- before reload
;;   ======================================================

;;	  0--> 3    r121=%r3                           :iu1_6xx|iu2_6xx
;;	  1--> 10   %r3=call [`strlen']                :bpu_6xx
;;	  2--> 14   %r3=%r3+0x1                        :iu1_6xx|iu2_6xx
;;	  3--> 15   %r3=call [`malloc']                :bpu_6xx
;;	  4--> 19   {r126=cmp(%r3,0x0);r125=%r3;}      :iu1_6xx|iu2_6xx
;;	  5--> 30   %r4=r121                           :iu1_6xx|iu2_6xx
;;	  9--> 20   pc={(r126==0x0)?L32:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 4
;;   new tail = 20

;;   ======================================================
;;   -- basic block 1 from 31 to 31 -- before reload
;;   ======================================================

;;	  0--> 31   %r3=call [`strcpy']                :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 31
;;   new tail = 31

;;   ======================================================
;;   -- basic block 2 from 40 to 46 -- before reload
;;   ======================================================

;;	  0--> 40   %r3=r125                           :iu1_6xx|iu2_6xx
;;	  1--> 46   use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 40
;;   new tail = 46


;; Procedure interblock/speculative motions == 1/1 


(note:HI 2 0 6 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]
(note:HI 6 2 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 4 6 11 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 11 4 13 0 NOTE_INSN_DELETED)

(note:HI 13 11 16 0 NOTE_INSN_DELETED)

(note:HI 16 13 3 0 NOTE_INSN_DELETED)

(insn:HI 3 16 10 0 (set (reg/v/f:SI 121 [ n ])
        (reg:SI 3 %r3 [ n ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 10 3 14 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 3 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 10 (insn_list:REG_LIBCALL 10 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ n ]))
            (nil))))

(insn:HI 14 10 15 0 (set (reg:SI 3 %r3)
        (plus:SI (reg:SI 3 %r3)
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 10 (nil))
    (nil))

(call_insn:HI 15 14 19 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 14 (insn_list:REG_DEP_ANTI 10 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 19 15 30 0 (parallel [
            (set (reg:CC 126)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 125)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 15 (nil))
    (nil))

(insn:HI 30 19 20 0 (set (reg:SI 4 %r4 [ n ])
        (reg/v/f:SI 121 [ n ])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 15 (insn_list:REG_DEP_OUTPUT 10 (insn_list:REG_DEP_TRUE 3 (nil))))
    (expr_list:REG_DEAD (reg/v/f:SI 121 [ n ])
        (nil)))

(jump_insn:HI 20 30 27 0 (set (pc)
        (if_then_else (eq (reg:CC 126)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 14 (insn_list:REG_DEP_TRUE 19 (insn_list:REG_DEP_ANTI 15 (nil))))))
    (expr_list:REG_DEAD (reg:CC 126)
        (expr_list:REG_BR_PROB (const_int 2124 [0x84c])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 125

;; Start of basic block 1, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 125
(note:HI 27 20 31 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(call_insn:HI 31 27 32 1 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 19 (insn_list:REG_DEP_TRUE 30 (insn_list:REG_DEP_TRUE 15 (insn_list:REG_DEP_ANTI 20 (nil)))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ n ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ n ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ x ]))
            (nil))))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 125

;; Start of basic block 2, registers live: 1 [%r1] 31 [%r31] 67 [ap] 125
(code_label:HI 32 31 33 2 85 "" [1 uses])

(note:HI 33 32 37 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 37 33 40 2 NOTE_INSN_FUNCTION_END)

(insn:HI 40 37 46 2 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg/f:SI 125)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 15 (insn_list:REG_DEP_OUTPUT 31 (insn_list:REG_DEP_TRUE 19 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 125)
        (nil)))

(insn:HI 46 40 51 2 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 40 (nil))
    (nil))
;; End of basic block 2, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 51 46 0 2 NOTE_INSN_DELETED)


;; Function stamp

;;   ======================================================
;;   -- basic block 0 from 3 to 18 -- before reload
;;   ======================================================

;;	  0--> 3    r119=%r3                           :iu1_6xx|iu2_6xx
;;	  1--> 10   %r3=%r4                            :iu1_6xx|iu2_6xx
;;	  2--> 11   %r3=call [`dos2unixtime']          :bpu_6xx
;;	  3--> 12   r118=%r3                           :iu1_6xx|iu2_6xx
;;	  4--> 16   %r3=r119                           :iu1_6xx|iu2_6xx
;;	  5--> 17   %r4=%r31+0x8                       :iu1_6xx|iu2_6xx
;;	  6--> 14   [%r31+0x8]=r118                    :lsu_6xx
;;	  7--> 13   [%r31+0xc]=r118                    :lsu_6xx
;;	  8--> 18   %r3=call [`FileDate']              :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 4
;;   new tail = 18


;; Procedure interblock/speculative motions == 0/0 


(note:HI 2 0 7 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap]
(note:HI 7 2 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 4 7 5 0 NOTE_INSN_DELETED)

(note:HI 5 4 3 0 NOTE_INSN_FUNCTION_BEG)

(insn:HI 3 5 10 0 (set (reg/v/f:SI 119 [ f ])
        (reg:SI 3 %r3 [ f ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ f ])
        (nil)))

(insn:HI 10 3 11 0 (set (reg:SI 3 %r3 [ d ])
        (reg:SI 4 %r4 [ d ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 3 (nil))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ d ])
        (nil)))

(call_insn:HI 11 10 12 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("dos2unixtime") [flags 0x41] <function_decl 0x40285bc8 dos2unixtime>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ d ]))
        (nil)))

(insn:HI 12 11 16 0 (set (reg:SI 118 [ D.5262 ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 11 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 16 12 17 0 (set (reg:SI 3 %r3 [ f ])
        (reg/v/f:SI 119 [ f ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_OUTPUT 11 (insn_list:REG_DEP_TRUE 3 (nil))))
    (expr_list:REG_DEAD (reg/v/f:SI 119 [ f ])
        (nil)))

(insn:HI 17 16 14 0 (set (reg:SI 4 %r4)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 8 [0x8]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_OUTPUT 11 (nil)))
    (nil))

(insn:HI 14 17 13 0 (set (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 8 [0x8])) [4 u+0 S4 A64])
        (reg:SI 118 [ D.5262 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 12 (insn_list:REG_DEP_ANTI 11 (nil)))
    (nil))

(insn:HI 13 14 18 0 (set (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 12 [0xc])) [4 u+4 S4 A32])
        (reg:SI 118 [ D.5262 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 12 (insn_list:REG_DEP_ANTI 11 (nil)))
    (expr_list:REG_DEAD (reg:SI 118 [ D.5262 ])
        (nil)))

(call_insn:HI 18 13 29 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("FileDate") [flags 0x41] <function_decl 0x4028c5e4 FileDate>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_TRUE 17 (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_ANTI 11 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_ANTI 14 (nil)))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ f ]))
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 31 [%r31] 67 [ap]

(note 29 18 19 0 NOTE_INSN_DELETED)

(note:HI 19 29 0 NOTE_INSN_FUNCTION_END)


;; Function filetime

;;   ======================================================
;;   -- basic block 0 from 3 to 22 -- before reload
;;   ======================================================

;;	  0--> 4    r132=%r4                           :iu1_6xx|iu2_6xx
;;	  1--> 5    r133=%r5                           :iu1_6xx|iu2_6xx
;;	  2--> 6    r134=%r6                           :iu1_6xx|iu2_6xx
;;	  3--> 3    r131=%r3                           :iu1_6xx|iu2_6xx
;;	  4--> 13   %r3=call [`strlen']                :bpu_6xx
;;	  5--> 14   r135=%r3                           :iu1_6xx|iu2_6xx
;;	  6--> 18   r138=high(`label')                 :iu1_6xx|iu2_6xx
;;	  7--> 20   r139=[r138+low(`label')]           :lsu_6xx
;;	  9--> 21   r140=cmp(r131,r139)                :iu1_6xx|iu2_6xx
;;	 14--> 22   pc={(r140!=0x0)?L67:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 14
;;   new head = 7
;;   new tail = 22

;;   ======================================================
;;   -- basic block 1 from 26 to 27 -- before reload
;;   ======================================================

;;	  0--> 26   r141=cmp(r132,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 27   pc={(r141==0x0)?L35:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 26
;;   new tail = 27

;;   ======================================================
;;   -- basic block 2 from 31 to 34 -- before reload
;;   ======================================================

;;	  0--> 31   r143=high(`label_mode')            :iu1_6xx|iu2_6xx
;;	  1--> 33   r144=[r143+low(`label_mode')]      :lsu_6xx
;;	  3--> 34   [r132]=r144                        :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 31
;;   new tail = 34

;;   ======================================================
;;   -- basic block 3 from 38 to 39 -- before reload
;;   ======================================================

;;	  0--> 38   r145=cmp(r133,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 39   pc={(r145==0x0)?L45:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 38
;;   new tail = 39

;;   ======================================================
;;   -- basic block 4 from 43 to 44 -- before reload
;;   ======================================================

;;	  0--> 43   r146=0xfffffffffffffffe            :iu1_6xx|iu2_6xx
;;	  1--> 44   [r133]=r146                        :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 43
;;   new tail = 44

;;   ======================================================
;;   -- basic block 5 from 48 to 49 -- before reload
;;   ======================================================

;;	  0--> 48   r147=cmp(r134,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 49   pc={(r147==0x0)?L59:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 48
;;   new tail = 49

;;   ======================================================
;;   -- basic block 6 from 53 to 58 -- before reload
;;   ======================================================

;;	  0--> 53   r149=high(`label_utim')            :iu1_6xx|iu2_6xx
;;	  1--> 55   r129=[r149+low(`label_utim')]      :lsu_6xx
;;	  3--> 58   [r134]=r129                        :lsu_6xx
;;	  4--> 56   [r134+0x8]=r129                    :lsu_6xx
;;	  5--> 57   [r134+0x4]=r129                    :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 53
;;   new tail = 57

;;   ======================================================
;;   -- basic block 7 from 62 to 257 -- before reload
;;   ======================================================

;;	  0--> 62   r151=high(`label_time')            :iu1_6xx|iu2_6xx
;;	  1--> 64   r128=[r151+low(`label_time')]      :lsu_6xx
;;	  3--> 257  pc=L239                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 62
;;   new tail = 257

;;   ======================================================
;;   -- basic block 8 from 71 to 77 -- before reload
;;   ======================================================

;;	  0--> 71   %r3=r135+0x1                       :iu1_6xx|iu2_6xx
;;	  1--> 72   %r3=call [`malloc']                :bpu_6xx
;;	  2--> 76   {r154=cmp(%r3,0x0);r153=%r3;}      :iu1_6xx|iu2_6xx
;;	  7--> 77   pc={(r154!=0x0)?L86:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 73
;;   new tail = 77

;;   ======================================================
;;   -- basic block 9 from 81 to 85 -- before reload
;;   ======================================================

;;	  0--> 81   r156=high(`*.LC5')                 :iu1_6xx|iu2_6xx
;;	  1--> 84   %r4=r156+low(`*.LC5')              :iu1_6xx|iu2_6xx
;;	  2--> 83   %r3=0x4                            :iu1_6xx|iu2_6xx
;;	  3--> 85   call [`ziperr']                    :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 82
;;   new tail = 85

;;   ======================================================
;;   -- basic block 10 from 89 to 98 -- before reload
;;   ======================================================

;;	  0--> 89   %r3=r153                           :iu1_6xx|iu2_6xx
;;	  1--> 90   %r4=r131                           :iu1_6xx|iu2_6xx
;;	  2--> 91   %r3=call [`strcpy']                :bpu_6xx
;;	  3--> 93   r157=r153+r135                     :iu1_6xx|iu2_6xx
;;	  4--> 96   r159=zxn([r157-0x1])               :lsu_6xx
;;	  6--> 97   r160=cmp(r159,0x2f)                :iu1_6xx|iu2_6xx
;;	 11--> 98   pc={(r160!=0x0)?L104:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 11
;;   new head = 95
;;   new tail = 98

;;   ======================================================
;;   -- basic block 11 from 102 to 103 -- before reload
;;   ======================================================

;;	  0--> 102  r161=0x0                           :iu1_6xx|iu2_6xx
;;	  1--> 103  [r157-0x1]=r161                    :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 102
;;   new tail = 103

;;   ======================================================
;;   -- basic block 12 from 107 to 115 -- before reload
;;   ======================================================

;;	  0--> 107  r163=high(`*.LC0')                 :iu1_6xx|iu2_6xx
;;	  1--> 109  %r3=r131                           :iu1_6xx|iu2_6xx
;;	  2--> 110  %r4=r163+low(`*.LC0')              :iu1_6xx|iu2_6xx
;;	  3--> 111  %r3=call [`strcmp']                :bpu_6xx
;;	  4--> 114  r166=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  9--> 115  pc={(r166!=0x0)?L144:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 108
;;   new tail = 115

;;   ======================================================
;;   -- basic block 13 from 119 to 131 -- before reload
;;   ======================================================

;;	  0--> 119  r169=high(`__iob')                 :iu1_6xx|iu2_6xx
;;	  1--> 121  r167=[r169+low(`__iob')]           :lsu_6xx
;;	  3--> 123  %r3=[r167]                         :lsu_6xx
;;	  5--> 124  %r3=call [`fileno']                :bpu_6xx
;;	  6--> 127  %r4=%r31+0x8                       :iu1_6xx|iu2_6xx
;;	  7--> 128  %r3=call [`fstat']                 :bpu_6xx
;;	  8--> 130  r171=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	 13--> 131  pc={(r171==0x0)?L162:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 13
;;   new head = 122
;;   new tail = 131

;;   ======================================================
;;   -- basic block 14 from 135 to 259 -- before reload
;;   ======================================================

;;	  0--> 135  %r3=r153                           :iu1_6xx|iu2_6xx
;;	  1--> 136  call [`free']                      :bpu_6xx
;;	  2--> 138  r173=high(`*.LC6')                 :iu1_6xx|iu2_6xx
;;	  3--> 140  %r3=r173+low(`*.LC6')              :iu1_6xx|iu2_6xx
;;	  4--> 141  call [`error']                     :bpu_6xx
;;	  5--> 259  pc=L162                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 139
;;   new tail = 259

;;   ======================================================
;;   -- basic block 15 from 147 to 152 -- before reload
;;   ======================================================

;;	  0--> 147  %r3=r153                           :iu1_6xx|iu2_6xx
;;	  1--> 148  %r4=%r31+0x8                       :iu1_6xx|iu2_6xx
;;	  2--> 149  %r3=call [`stat']                  :bpu_6xx
;;	  3--> 151  r174=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  8--> 152  pc={(r174==0x0)?L162:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 150
;;   new tail = 152

;;   ======================================================
;;   -- basic block 16 from 156 to 261 -- before reload
;;   ======================================================

;;	  0--> 156  %r3=r153                           :iu1_6xx|iu2_6xx
;;	  1--> 157  call [`free']                      :bpu_6xx
;;	  2--> 158  r128=0x0                           :iu1_6xx|iu2_6xx
;;	  3--> 261  pc=L239                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 156
;;   new tail = 261

;;   ======================================================
;;   -- basic block 17 from 165 to 166 -- before reload
;;   ======================================================

;;	  0--> 165  r175=cmp(r132,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 166  pc={(r175==0x0)?L189:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 165
;;   new tail = 166

;;   ======================================================
;;   -- basic block 18 from 171 to 183 -- before reload
;;   ======================================================

;;	  0--> 171  r118=zxn([%r31+0x8])               :lsu_6xx
;;	  2--> 182  {r184=cmp(zxt(r118,0x1,0x14),0x0);c:iu1_6xx|iu2_6xx
;;	  3--> 174  r179=r118^0x4                      :iu1_6xx|iu2_6xx
;;	  4--> 175  r180=zxt(r179,0x1,0x1d)            :iu1_6xx|iu2_6xx
;;	  5--> 172  r177=r118<<0x10                    :iu1_6xx|iu2_6xx
;;	  6--> 176  r122=r177|r180                     :iu1_6xx|iu2_6xx
;;	  7--> 177  [r132]=r122                        :lsu_6xx
;;	  8--> 183  pc={(r184==0x0)?L189:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 173
;;   new tail = 183

;;   ======================================================
;;   -- basic block 19 from 187 to 188 -- before reload
;;   ======================================================

;;	  0--> 187  r185=r122|0x10                     :iu1_6xx|iu2_6xx
;;	  1--> 188  [r132]=r185                        :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 187
;;   new tail = 188

;;   ======================================================
;;   -- basic block 20 from 192 to 193 -- before reload
;;   ======================================================

;;	  0--> 192  r186=cmp(r133,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 193  pc={(r186==0x0)?L213:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 192
;;   new tail = 193

;;   ======================================================
;;   -- basic block 21 from 198 to 201 -- before reload
;;   ======================================================

;;	  0--> 198  r187=zxn([%r31+0x8])               :lsu_6xx
;;	  1--> 204  r121=0xffffffffffffffff            :iu1_6xx|iu2_6xx
;;	  2--> 199  {r189=r187&0xc00;clobber scratch;} :iu1_6xx|iu2_6xx
;;	  3--> 200  r190=cmp(r189,0x400)               :iu1_6xx|iu2_6xx
;;	  8--> 201  pc={(r190!=0x0)?L210:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 198
;;   new tail = 201

;;   ======================================================
;;   -- basic block 22 from 209 to 209 -- before reload
;;   ======================================================

;;	  0--> 209  r121=[%r31+0x18]                   :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 209
;;   new tail = 209

;;   ======================================================
;;   -- basic block 23 from 212 to 212 -- before reload
;;   ======================================================

;;	  0--> 212  [r133]=r121                        :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 212
;;   new tail = 212

;;   ======================================================
;;   -- basic block 24 from 216 to 217 -- before reload
;;   ======================================================

;;	  0--> 216  r191=cmp(r134,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 217  pc={(r191==0x0)?L229:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 216
;;   new tail = 217

;;   ======================================================
;;   -- basic block 25 from 221 to 228 -- before reload
;;   ======================================================

;;	  0--> 221  r192=[%r31+0x10]                   :lsu_6xx
;;	  1--> 224  r193=[%r31+0x14]                   :lsu_6xx
;;	  2--> 227  r194=[%r31+0xc]                    :lsu_6xx
;;	  3--> 222  [r134]=r192                        :lsu_6xx
;;	  4--> 228  [r134+0x8]=r194                    :lsu_6xx
;;	  5--> 225  [r134+0x4]=r193                    :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 221
;;   new tail = 225

;;   ======================================================
;;   -- basic block 26 from 232 to 238 -- before reload
;;   ======================================================

;;	  0--> 232  %r3=r153                           :iu1_6xx|iu2_6xx
;;	  1--> 233  call [`free']                      :bpu_6xx
;;	  2--> 236  %r3=%r31+0x14                      :iu1_6xx|iu2_6xx
;;	  3--> 237  %r3=call [`unix2dostime']          :bpu_6xx
;;	  4--> 238  r128=%r3                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 4
;;   new head = 235
;;   new tail = 238

;;   ======================================================
;;   -- basic block 27 from 247 to 253 -- before reload
;;   ======================================================

;;	  0--> 247  %r3=r128                           :iu1_6xx|iu2_6xx
;;	  1--> 253  use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 247
;;   new tail = 253


;; Procedure interblock/speculative motions == 0/0 


(note:HI 2 0 9 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 5 [%r5] 6 [%r6] 31 [%r31] 67 [ap]
(note:HI 9 2 7 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 7 9 4 0 NOTE_INSN_FUNCTION_BEG)

(insn:HI 4 7 5 0 (set (reg/v/f:SI 132 [ a ])
        (reg:SI 4 %r4 [ a ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ a ])
        (nil)))

(insn:HI 5 4 6 0 (set (reg/v/f:SI 133 [ n ])
        (reg:SI 5 %r5 [ n ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 5 %r5 [ n ])
        (nil)))

(insn:HI 6 5 3 0 (set (reg/v/f:SI 134 [ t ])
        (reg:SI 6 %r6 [ t ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 6 %r6 [ t ])
        (nil)))

(insn:HI 3 6 13 0 (set (reg/v/f:SI 131 [ f ])
        (reg:SI 3 %r3 [ f ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 13 3 14 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 6 (insn_list:REG_DEP_ANTI 5 (insn_list:REG_DEP_ANTI 4 (insn_list:REG_DEP_ANTI 3 (nil)))))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_LIBCALL 14 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ f ]))
            (nil))))

(insn:HI 14 13 18 0 (set (reg:SI 135)
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 13 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (insn_list:REG_RETVAL 13 (expr_list:REG_EQUAL (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
                    (expr_list:REG_DEP_TRUE (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>)
                        (expr_list:REG_DEP_TRUE (reg/v/f:SI 131 [ f ])
                            (nil))))
                (nil)))))

(insn:HI 18 14 20 0 (set (reg/f:SI 138)
        (high:SI (symbol_ref:SI ("label") [flags 0x44] <var_decl 0x403b6910 label>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 13 (nil))
    (nil))

(insn:HI 20 18 21 0 (set (reg:SI 139 [ label ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 138)
                (symbol_ref:SI ("label") [flags 0x44] <var_decl 0x403b6910 label>)) [8 label+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 18 (insn_list:REG_DEP_ANTI 13 (nil)))
    (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("label") [flags 0x44] <var_decl 0x403b6910 label>) [8 label+0 S4 A32])
            (nil))))

(insn:HI 21 20 22 0 (set (reg:CC 140)
        (compare:CC (reg/v/f:SI 131 [ f ])
            (reg:SI 139 [ label ]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 20 (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_ANTI 13 (nil))))
    (expr_list:REG_DEAD (reg:SI 139 [ label ])
        (nil)))

(jump_insn:HI 22 21 24 0 (set (pc)
        (if_then_else (ne (reg:CC 140)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 4 (insn_list:REG_DEP_ANTI 5 (insn_list:REG_DEP_ANTI 6 (insn_list:REG_DEP_ANTI 14 (insn_list:REG_DEP_ANTI 18 (insn_list:REG_DEP_ANTI 20 (insn_list:REG_DEP_TRUE 21 (insn_list:REG_DEP_ANTI 13 (nil))))))))))
    (expr_list:REG_DEAD (reg:CC 140)
        (expr_list:REG_BR_PROB (const_int 6463 [0x193f])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 135

;; Start of basic block 1, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134
(note:HI 24 22 26 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 26 24 27 1 (set (reg:CC 141)
        (compare:CC (reg/v/f:SI 132 [ a ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 27 26 29 1 (set (pc)
        (if_then_else (eq (reg:CC 141)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 26 (nil))
    (expr_list:REG_DEAD (reg:CC 141)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 132 133 134

;; Start of basic block 2, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134
(note:HI 29 27 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 31 29 33 2 (set (reg/f:SI 143)
        (high:SI (symbol_ref:SI ("label_mode") [flags 0x2] <var_decl 0x403b69f8 label_mode>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 33 31 34 2 (set (reg:SI 144 [ label_mode ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 143)
                (symbol_ref:SI ("label_mode") [flags 0x2] <var_decl 0x403b69f8 label_mode>)) [4 label_mode+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 31 (nil))
    (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("label_mode") [flags 0x2] <var_decl 0x403b69f8 label_mode>) [4 label_mode+0 S4 A32])
            (nil))))

(insn:HI 34 33 35 2 (set (mem:SI (reg/v/f:SI 132 [ a ]) [4 S4 A32])
        (reg:SI 144 [ label_mode ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 144 [ label_mode ])
        (expr_list:REG_DEAD (reg/v/f:SI 132 [ a ])
            (nil))))
;; End of basic block 2, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 133 134

;; Start of basic block 3, registers live: 1 [%r1] 31 [%r31] 67 [ap] 133 134
(code_label:HI 35 34 36 3 92 "" [1 uses])

(note:HI 36 35 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:HI 38 36 39 3 (set (reg:CC 145)
        (compare:CC (reg/v/f:SI 133 [ n ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 39 38 41 3 (set (pc)
        (if_then_else (eq (reg:CC 145)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 38 (nil))
    (expr_list:REG_DEAD (reg:CC 145)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 3, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 133 134

;; Start of basic block 4, registers live: 1 [%r1] 31 [%r31] 67 [ap] 133 134
(note:HI 41 39 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 43 41 44 4 (set (reg:SI 146)
        (const_int -2 [0xfffffffffffffffe])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 44 43 45 4 (set (mem:SI (reg/v/f:SI 133 [ n ]) [4 S4 A32])
        (reg:SI 146)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 43 (nil))
    (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ n ])
            (expr_list:REG_EQUAL (const_int -2 [0xfffffffffffffffe])
                (nil)))))
;; End of basic block 4, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 134

;; Start of basic block 5, registers live: 1 [%r1] 31 [%r31] 67 [ap] 134
(code_label:HI 45 44 46 5 94 "" [1 uses])

(note:HI 46 45 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 48 46 49 5 (set (reg:CC 147)
        (compare:CC (reg/v/f:SI 134 [ t ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 49 48 51 5 (set (pc)
        (if_then_else (eq (reg:CC 147)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 48 (nil))
    (expr_list:REG_DEAD (reg:CC 147)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 5, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 134

;; Start of basic block 6, registers live: 1 [%r1] 31 [%r31] 67 [ap] 134
(note:HI 51 49 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 53 51 55 6 (set (reg/f:SI 149)
        (high:SI (symbol_ref:SI ("label_utim") [flags 0x2] <var_decl 0x403b6a6c label_utim>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 55 53 58 6 (set (reg:SI 129 [ label_utim.15 ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 149)
                (symbol_ref:SI ("label_utim") [flags 0x2] <var_decl 0x403b6a6c label_utim>)) [4 label_utim+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 53 (nil))
    (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("label_utim") [flags 0x2] <var_decl 0x403b6a6c label_utim>) [4 label_utim+0 S4 A32])
            (nil))))

(insn:HI 58 55 56 6 (set (mem/s:SI (reg/v/f:SI 134 [ t ]) [4 <variable>.atime+0 S4 A32])
        (reg:SI 129 [ label_utim.15 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 55 (nil))
    (nil))

(insn:HI 56 58 57 6 (set (mem/s:SI (plus:SI (reg/v/f:SI 134 [ t ])
                (const_int 8 [0x8])) [4 <variable>.ctime+0 S4 A32])
        (reg:SI 129 [ label_utim.15 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 55 (nil))
    (nil))

(insn:HI 57 56 59 6 (set (mem/s:SI (plus:SI (reg/v/f:SI 134 [ t ])
                (const_int 4 [0x4])) [4 <variable>.mtime+0 S4 A32])
        (reg:SI 129 [ label_utim.15 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:SI 129 [ label_utim.15 ])
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ t ])
            (nil))))
;; End of basic block 6, registers live:
 1 [%r1] 31 [%r31] 67 [ap]

;; Start of basic block 7, registers live: 1 [%r1] 31 [%r31] 67 [ap]
(code_label:HI 59 57 60 7 96 "" [1 uses])

(note:HI 60 59 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 60 64 7 (set (reg/f:SI 151)
        (high:SI (symbol_ref:SI ("label_time") [flags 0x2] <var_decl 0x403b6984 label_time>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 64 62 257 7 (set (reg:SI 128 [ D.5278 ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 151)
                (symbol_ref:SI ("label_time") [flags 0x2] <var_decl 0x403b6984 label_time>)) [4 label_time+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 62 (nil))
    (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("label_time") [flags 0x2] <var_decl 0x403b6984 label_time>) [4 label_time+0 S4 A32])
            (nil))))

(jump_insn:HI 257 64 258 7 (set (pc)
        (label_ref 239)) 460 {jump} (insn_list:REG_DEP_TRUE 62 (insn_list:REG_DEP_TRUE 64 (nil)))
    (nil))
;; End of basic block 7, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128

(barrier:HI 258 257 67)

;; Start of basic block 8, registers live: 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 135
(code_label:HI 67 258 68 8 90 "" [1 uses])

(note:HI 68 67 70 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 70 68 73 8 NOTE_INSN_DELETED)

(note:HI 73 70 71 8 NOTE_INSN_DELETED)

(insn:HI 71 73 72 8 (set (reg:SI 3 %r3)
        (plus:SI (reg:SI 135)
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (nil)
    (nil))

(call_insn:HI 72 71 76 8 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 71 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 76 72 77 8 (parallel [
            (set (reg:CC 154)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 153)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 72 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 77 76 79 8 (set (pc)
        (if_then_else (ne (reg:CC 154)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 71 (insn_list:REG_DEP_TRUE 76 (insn_list:REG_DEP_ANTI 72 (nil))))
    (expr_list:REG_DEAD (reg:CC 154)
        (expr_list:REG_BR_PROB (const_int 9087 [0x237f])
            (nil))))
;; End of basic block 8, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 135 153

;; Start of basic block 9, registers live: 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 135 153
(note:HI 79 77 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note:HI 82 79 81 9 NOTE_INSN_DELETED)

(insn:HI 81 82 84 9 (set (reg/f:SI 156)
        (high:SI (symbol_ref/f:SI ("*.LC5") [flags 0x2] <string_cst 0x40440a60>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 84 81 83 9 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 156)
            (symbol_ref/f:SI ("*.LC5") [flags 0x2] <string_cst 0x40440a60>))) 266 {elf_low} (insn_list:REG_DEP_TRUE 81 (nil))
    (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC5") [flags 0x2] <string_cst 0x40440a60>)
            (nil))))

(insn:HI 83 84 85 9 (set (reg:SI 3 %r3)
        (const_int 4 [0x4])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 85 83 86 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("ziperr") [flags 0x41] <function_decl 0x40281e0c ziperr>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_ANTI 81 (insn_list:REG_DEP_TRUE 83 (insn_list:REG_DEP_TRUE 84 (nil))))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (expr_list:REG_DEAD (reg:SI 4 %r4)
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
            (nil))))
;; End of basic block 9, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 135 153

;; Start of basic block 10, registers live: 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 135 153
(code_label:HI 86 85 87 10 99 "" [1 uses])

(note:HI 87 86 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 95 87 89 10 NOTE_INSN_DELETED)

(insn:HI 89 95 90 10 (set (reg:SI 3 %r3 [ name ])
        (reg/f:SI 153)) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 90 89 91 10 (set (reg:SI 4 %r4 [ f ])
        (reg/v/f:SI 131 [ f ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 91 90 93 10 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 90 (insn_list:REG_DEP_TRUE 89 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ f ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ f ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name ]))
            (nil))))

(insn:HI 93 91 96 10 (set (reg:SI 157)
        (plus:SI (reg/f:SI 153)
            (reg:SI 135))) 36 {*addsi3_internal1} (insn_list:REG_DEP_ANTI 91 (nil))
    (expr_list:REG_DEAD (reg:SI 135)
        (nil)))

(insn:HI 96 93 97 10 (set (reg:SI 159)
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 157)
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 18 {*rs6000.md:513} (insn_list:REG_DEP_TRUE 93 (insn_list:REG_DEP_ANTI 91 (nil)))
    (nil))

(insn:HI 97 96 98 10 (set (reg:CC 160)
        (compare:CC (reg:SI 159)
            (const_int 47 [0x2f]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 96 (insn_list:REG_DEP_ANTI 91 (nil)))
    (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(jump_insn:HI 98 97 100 10 (set (pc)
        (if_then_else (ne (reg:CC 160)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 89 (insn_list:REG_DEP_ANTI 90 (insn_list:REG_DEP_ANTI 93 (insn_list:REG_DEP_ANTI 96 (insn_list:REG_DEP_TRUE 97 (insn_list:REG_DEP_ANTI 91 (nil)))))))
    (expr_list:REG_DEAD (reg:CC 160)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 153 157

;; Start of basic block 11, registers live: 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 153 157
(note:HI 100 98 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 102 100 103 11 (set (reg:QI 161)
        (const_int 0 [0x0])) 271 {*movqi_internal} (nil)
    (nil))

(insn:HI 103 102 104 11 (set (mem:QI (plus:SI (reg:SI 157)
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 161)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 102 (nil))
    (expr_list:REG_DEAD (reg:QI 161)
        (expr_list:REG_DEAD (reg:SI 157)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 11, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 153

;; Start of basic block 12, registers live: 1 [%r1] 31 [%r31] 67 [ap] 131 132 133 134 153
(code_label:HI 104 103 105 12 101 "" [1 uses])

(note:HI 105 104 108 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 108 105 112 12 NOTE_INSN_DELETED)

(note:HI 112 108 107 12 NOTE_INSN_DELETED)

(insn:HI 107 112 109 12 (set (reg/f:SI 163)
        (high:SI (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 109 107 110 12 (set (reg:SI 3 %r3 [ f ])
        (reg/v/f:SI 131 [ f ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 131 [ f ])
        (insn_list:REG_LIBCALL 111 (nil))))

(insn:HI 110 109 111 12 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 163)
            (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>))) 266 {elf_low} (insn_list:REG_DEP_TRUE 107 (nil))
    (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>)
            (nil))))

(call_insn/u:HI 111 110 114 12 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x401f04fc strcmp>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 109 (insn_list:REG_DEP_TRUE 110 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 109 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ f ]))
                (nil)))))

(insn:HI 114 111 115 12 (set (reg:CC 166)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 111 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 115 114 117 12 (set (pc)
        (if_then_else (ne (reg:CC 166)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 107 (insn_list:REG_DEP_ANTI 109 (insn_list:REG_DEP_ANTI 110 (insn_list:REG_DEP_TRUE 114 (insn_list:REG_DEP_ANTI 111 (nil))))))
    (expr_list:REG_DEAD (reg:CC 166)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153

;; Start of basic block 13, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153
(note:HI 117 115 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 122 117 129 13 NOTE_INSN_DELETED)

(note:HI 129 122 119 13 NOTE_INSN_DELETED)

(insn:HI 119 129 121 13 (set (reg/f:SI 169)
        (high:SI (symbol_ref:SI ("__iob") [flags 0x44] <var_decl 0x40232244 __iob>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 121 119 123 13 (set (reg/f:SI 167 [ __iob ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 169)
                (symbol_ref:SI ("__iob") [flags 0x44] <var_decl 0x40232244 __iob>)) [31 __iob+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 119 (nil))
    (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("__iob") [flags 0x44] <var_decl 0x40232244 __iob>) [31 __iob+0 S4 A32])
            (nil))))

(insn:HI 123 121 124 13 (set (reg:SI 3 %r3)
        (mem/f:SI (reg/f:SI 167 [ __iob ]) [30 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 121 (nil))
    (expr_list:REG_DEAD (reg/f:SI 167 [ __iob ])
        (nil)))

(call_insn:HI 124 123 127 13 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("fileno") [flags 0x41] <function_decl 0x4023c0e8 fileno>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 121 (insn_list:REG_DEP_TRUE 123 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 127 124 128 13 (set (reg:SI 4 %r4)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 8 [0x8]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_OUTPUT 124 (nil))
    (nil))

(call_insn:HI 128 127 130 13 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("fstat") [flags 0x41] <function_decl 0x4025b4fc fstat>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 127 (insn_list:REG_DEP_TRUE 124 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ D.5289 ]))
            (nil))))

(insn:HI 130 128 131 13 (set (reg:CC 171)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 128 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 131 130 133 13 (set (pc)
        (if_then_else (eq (reg:CC 171)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 119 (insn_list:REG_DEP_ANTI 121 (insn_list:REG_DEP_ANTI 123 (insn_list:REG_DEP_ANTI 124 (insn_list:REG_DEP_ANTI 127 (insn_list:REG_DEP_TRUE 130 (insn_list:REG_DEP_ANTI 128 (nil))))))))
    (expr_list:REG_DEAD (reg:CC 171)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 13, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153

;; Start of basic block 14, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153
(note:HI 133 131 139 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 139 133 135 14 NOTE_INSN_DELETED)

(insn:HI 135 139 136 14 (set (reg:SI 3 %r3 [ name ])
        (reg/f:SI 153)) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 136 135 138 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 135 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ name ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name ]))
        (nil)))

(insn:HI 138 136 140 14 (set (reg/f:SI 173)
        (high:SI (symbol_ref/f:SI ("*.LC6") [flags 0x2] <string_cst 0x4044c924>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 136 (nil))
    (nil))

(insn:HI 140 138 141 14 (set (reg:SI 3 %r3)
        (lo_sum:SI (reg/f:SI 173)
            (symbol_ref/f:SI ("*.LC6") [flags 0x2] <string_cst 0x4044c924>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 136 (insn_list:REG_DEP_OUTPUT 135 (insn_list:REG_DEP_TRUE 138 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC6") [flags 0x2] <string_cst 0x4044c924>)
            (nil))))

(call_insn:HI 141 140 259 14 (parallel [
            (call (mem:SI (symbol_ref:SI ("error") [flags 0x41] <function_decl 0x40281f68 error>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_ANTI 135 (insn_list:REG_DEP_ANTI 138 (insn_list:REG_DEP_ANTI 136 (insn_list:REG_DEP_TRUE 140 (nil)))))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(jump_insn:HI 259 141 260 14 (set (pc)
        (label_ref 162)) 460 {jump} (insn_list:REG_DEP_TRUE 138 (insn_list:REG_DEP_ANTI 135 (insn_list:REG_DEP_TRUE 140 (insn_list:REG_DEP_TRUE 136 (insn_list:REG_DEP_TRUE 141 (nil))))))
    (nil))
;; End of basic block 14, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153

(barrier:HI 260 259 144)

;; Start of basic block 15, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153
(code_label:HI 144 260 145 15 103 "" [1 uses])

(note:HI 145 144 150 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note:HI 150 145 147 15 NOTE_INSN_DELETED)

(insn:HI 147 150 148 15 (set (reg:SI 3 %r3 [ name ])
        (reg/f:SI 153)) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 148 147 149 15 (set (reg:SI 4 %r4)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 8 [0x8]))) 36 {*addsi3_internal1} (nil)
    (nil))

(call_insn:HI 149 148 151 15 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("stat") [flags 0x41] <function_decl 0x4025b32c stat>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 148 (insn_list:REG_DEP_TRUE 147 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name ]))
            (nil))))

(insn:HI 151 149 152 15 (set (reg:CC 174)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 149 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 152 151 154 15 (set (pc)
        (if_then_else (eq (reg:CC 174)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 147 (insn_list:REG_DEP_ANTI 148 (insn_list:REG_DEP_TRUE 151 (insn_list:REG_DEP_ANTI 149 (nil)))))
    (expr_list:REG_DEAD (reg:CC 174)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 15, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153

;; Start of basic block 16, registers live: 1 [%r1] 31 [%r31] 67 [ap] 153
(note:HI 154 152 156 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 156 154 157 16 (set (reg:SI 3 %r3 [ name ])
        (reg/f:SI 153)) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))

(call_insn:HI 157 156 158 16 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 156 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ name ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name ]))
        (nil)))

(insn:HI 158 157 261 16 (set (reg:SI 128 [ D.5278 ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 157 (nil))
    (nil))

(jump_insn:HI 261 158 262 16 (set (pc)
        (label_ref 239)) 460 {jump} (insn_list:REG_DEP_TRUE 158 (insn_list:REG_DEP_TRUE 156 (insn_list:REG_DEP_TRUE 157 (nil))))
    (nil))
;; End of basic block 16, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128

(barrier:HI 262 261 162)

;; Start of basic block 17, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153
(code_label:HI 162 262 163 17 105 "" [3 uses])

(note:HI 163 162 165 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:HI 165 163 166 17 (set (reg:CC 175)
        (compare:CC (reg/v/f:SI 132 [ a ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 166 165 168 17 (set (pc)
        (if_then_else (eq (reg:CC 175)
                (const_int 0 [0x0]))
            (label_ref 189)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 165 (nil))
    (expr_list:REG_DEAD (reg:CC 175)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 17, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153

;; Start of basic block 18, registers live: 1 [%r1] 31 [%r31] 67 [ap] 132 133 134 153
(note:HI 168 166 170 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note:HI 170 168 173 18 NOTE_INSN_DELETED)

(note:HI 173 170 181 18 NOTE_INSN_DELETED)

(note:HI 181 173 171 18 NOTE_INSN_DELETED)

(insn:HI 171 181 182 18 (set (reg:SI 118 [ temp.49 ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 31 %r31)
                    (const_int 8 [0x8])) [6 s.st_mode+0 S2 A64]))) 30 {*rs6000.md:847} (nil)
    (nil))

(insn:HI 182 171 174 18 (parallel [
            (set (reg:CC 184)
                (compare:CC (zero_extract:SI (reg:SI 118 [ temp.49 ])
                        (const_int 1 [0x1])
                        (const_int 20 [0x14]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 94 {*extzvsi_internal1} (insn_list:REG_DEP_TRUE 171 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil)))

(insn:HI 174 182 175 18 (set (reg:SI 179)
        (xor:SI (reg:SI 118 [ temp.49 ])
            (const_int 4 [0x4]))) 74 {*boolsi3_internal1} (insn_list:REG_DEP_TRUE 171 (nil))
    (nil))

(insn:HI 175 174 172 18 (set (reg:SI 180)
        (zero_extract:SI (reg:SI 179)
            (const_int 1 [0x1])
            (const_int 29 [0x1d]))) 93 {extzvsi} (insn_list:REG_DEP_TRUE 174 (nil))
    (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn:HI 172 175 176 18 (set (reg:SI 177)
        (ashift:SI (reg:SI 118 [ temp.49 ])
            (const_int 16 [0x10]))) 111 {ashlsi3_no_power} (insn_list:REG_DEP_TRUE 171 (nil))
    (expr_list:REG_DEAD (reg:SI 118 [ temp.49 ])
        (nil)))

(insn:HI 176 172 177 18 (set (reg:SI 122 [ D.5299 ])
        (ior:SI (reg:SI 177)
            (reg:SI 180))) 74 {*boolsi3_internal1} (insn_list:REG_DEP_TRUE 175 (insn_list:REG_DEP_TRUE 172 (nil)))
    (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_DEAD (reg:SI 180)
            (nil))))

(insn:HI 177 176 183 18 (set (mem:SI (reg/v/f:SI 132 [ a ]) [4 S4 A32])
        (reg:SI 122 [ D.5299 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 176 (nil))
    (nil))

(jump_insn:HI 183 177 185 18 (set (pc)
        (if_then_else (eq (reg:CC 184)
                (const_int 0 [0x0]))
            (label_ref 189)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 171 (insn_list:REG_DEP_ANTI 172 (insn_list:REG_DEP_ANTI 174 (insn_list:REG_DEP_ANTI 175 (insn_list:REG_DEP_ANTI 176 (insn_list:REG_DEP_TRUE 182 (insn_list:REG_DEP_ANTI 177 (nil))))))))
    (expr_list:REG_DEAD (reg:CC 184)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 122 132 133 134 153

;; Start of basic block 19, registers live: 1 [%r1] 31 [%r31] 67 [ap] 122 132 133 134 153
(note:HI 185 183 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 187 185 188 19 (set (reg:SI 185)
        (ior:SI (reg:SI 122 [ D.5299 ])
            (const_int 16 [0x10]))) 74 {*boolsi3_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 122 [ D.5299 ])
        (nil)))

(insn:HI 188 187 189 19 (set (mem:SI (reg/v/f:SI 132 [ a ]) [4 S4 A32])
        (reg:SI 185)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 187 (nil))
    (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg/v/f:SI 132 [ a ])
            (nil))))
;; End of basic block 19, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 133 134 153

;; Start of basic block 20, registers live: 1 [%r1] 31 [%r31] 67 [ap] 133 134 153
(code_label:HI 189 188 190 20 108 "" [2 uses])

(note:HI 190 189 192 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:HI 192 190 193 20 (set (reg:CC 186)
        (compare:CC (reg/v/f:SI 133 [ n ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 193 192 195 20 (set (pc)
        (if_then_else (eq (reg:CC 186)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 192 (nil))
    (expr_list:REG_DEAD (reg:CC 186)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 20, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 133 134 153

;; Start of basic block 21, registers live: 1 [%r1] 31 [%r31] 67 [ap] 133 134 153
(note:HI 195 193 197 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 197 195 198 21 NOTE_INSN_DELETED)

(insn:HI 198 197 204 21 (set (reg:SI 187 [ s.st_mode ])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/f:SI 31 %r31)
                    (const_int 8 [0x8])) [6 s.st_mode+0 S2 A64]))) 30 {*rs6000.md:847} (nil)
    (nil))

(insn:HI 204 198 199 21 (set (reg:SI 121 [ iftmp.18 ])
        (const_int -1 [0xffffffffffffffff])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 199 204 200 21 (parallel [
            (set (reg:SI 189)
                (and:SI (reg:SI 187 [ s.st_mode ])
                    (const_int 3072 [0xc00])))
            (clobber (scratch:CC))
        ]) 68 {andsi3} (insn_list:REG_DEP_TRUE 198 (nil))
    (expr_list:REG_DEAD (reg:SI 187 [ s.st_mode ])
        (expr_list:REG_UNUSED (scratch:CC)
            (nil))))

(insn:HI 200 199 201 21 (set (reg:CC 190)
        (compare:CC (reg:SI 189)
            (const_int 1024 [0x400]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 199 (nil))
    (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(jump_insn:HI 201 200 208 21 (set (pc)
        (if_then_else (ne (reg:CC 190)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 198 (insn_list:REG_DEP_ANTI 199 (insn_list:REG_DEP_ANTI 204 (insn_list:REG_DEP_TRUE 200 (nil)))))
    (expr_list:REG_DEAD (reg:CC 190)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 133 134 153

;; Start of basic block 22, registers live: 1 [%r1] 31 [%r31] 67 [ap] 133 134 153
(note:HI 208 201 209 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 209 208 210 22 (set (reg:SI 121 [ iftmp.18 ])
        (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 24 [0x18])) [4 s.st_size+0 S4 A64])) 268 {*movsi_internal1} (nil)
    (nil))
;; End of basic block 22, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 121 133 134 153

;; Start of basic block 23, registers live: 1 [%r1] 31 [%r31] 67 [ap] 121 133 134 153
(code_label:HI 210 209 211 23 115 "" [1 uses])

(note:HI 211 210 212 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 212 211 213 23 (set (mem:SI (reg/v/f:SI 133 [ n ]) [4 S4 A32])
        (reg:SI 121 [ iftmp.18 ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 121 [ iftmp.18 ])
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ n ])
            (nil))))
;; End of basic block 23, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 134 153

;; Start of basic block 24, registers live: 1 [%r1] 31 [%r31] 67 [ap] 134 153
(code_label:HI 213 212 214 24 111 "" [1 uses])

(note:HI 214 213 216 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:HI 216 214 217 24 (set (reg:CC 191)
        (compare:CC (reg/v/f:SI 134 [ t ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 217 216 219 24 (set (pc)
        (if_then_else (eq (reg:CC 191)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 216 (nil))
    (expr_list:REG_DEAD (reg:CC 191)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 24, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 134 153

;; Start of basic block 25, registers live: 1 [%r1] 31 [%r31] 67 [ap] 134 153
(note:HI 219 217 221 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:HI 221 219 224 25 (set (reg:SI 192 [ s.st_atime ])
        (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 16 [0x10])) [4 s.st_atime+0 S4 A64])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 224 221 227 25 (set (reg:SI 193 [ s.st_mtime ])
        (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 20 [0x14])) [4 s.st_mtime+0 S4 A32])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 227 224 222 25 (set (reg:SI 194 [ s.st_ctime ])
        (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 12 [0xc])) [4 s.st_ctime+0 S4 A32])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 222 227 228 25 (set (mem/s:SI (reg/v/f:SI 134 [ t ]) [4 <variable>.atime+0 S4 A32])
        (reg:SI 192 [ s.st_atime ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 221 (nil))
    (expr_list:REG_DEAD (reg:SI 192 [ s.st_atime ])
        (nil)))

(insn:HI 228 222 225 25 (set (mem/s:SI (plus:SI (reg/v/f:SI 134 [ t ])
                (const_int 8 [0x8])) [4 <variable>.ctime+0 S4 A32])
        (reg:SI 194 [ s.st_ctime ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 227 (nil))
    (expr_list:REG_DEAD (reg:SI 194 [ s.st_ctime ])
        (nil)))

(insn:HI 225 228 229 25 (set (mem/s:SI (plus:SI (reg/v/f:SI 134 [ t ])
                (const_int 4 [0x4])) [4 <variable>.mtime+0 S4 A32])
        (reg:SI 193 [ s.st_mtime ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 224 (nil))
    (expr_list:REG_DEAD (reg:SI 193 [ s.st_mtime ])
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ t ])
            (nil))))
;; End of basic block 25, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 153

;; Start of basic block 26, registers live: 1 [%r1] 31 [%r31] 67 [ap] 153
(code_label:HI 229 225 230 26 116 "" [1 uses])

(note:HI 230 229 235 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note:HI 235 230 232 26 NOTE_INSN_DELETED)

(insn:HI 232 235 233 26 (set (reg:SI 3 %r3 [ name ])
        (reg/f:SI 153)) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))

(call_insn:HI 233 232 236 26 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 232 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ name ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name ]))
        (nil)))

(insn:HI 236 233 237 26 (set (reg:SI 3 %r3)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 20 [0x14]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_ANTI 233 (insn_list:REG_DEP_OUTPUT 232 (nil)))
    (nil))

(call_insn:HI 237 236 238 26 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("unix2dostime") [flags 0x41] <function_decl 0x402870e8 unix2dostime>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 236 (insn_list:REG_DEP_ANTI 233 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 238 237 239 26 (set (reg:SI 128 [ D.5278 ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 237 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))
;; End of basic block 26, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128

;; Start of basic block 27, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128
(code_label:HI 239 238 240 27 98 "" [2 uses])

(note:HI 240 239 244 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note:HI 244 240 247 27 NOTE_INSN_FUNCTION_END)

(insn:HI 247 244 253 27 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg:SI 128 [ D.5278 ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 128 [ D.5278 ])
        (nil)))

(insn:HI 253 247 266 27 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 247 (nil))
    (nil))
;; End of basic block 27, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 266 253 0 27 NOTE_INSN_DELETED)


;; Function set_extra_field

;;   ======================================================
;;   -- basic block 0 from 3 to 14 -- before reload
;;   ======================================================

;;	  0--> 10   r125=high(`zp_tz_is_valid')        :iu1_6xx|iu2_6xx
;;	  1--> 12   r126=[r125+low(`zp_tz_is_valid')]  :lsu_6xx
;;	  2--> 3    r122=%r3                           :iu1_6xx|iu2_6xx
;;	  3--> 23   %r3=0x9                            :iu1_6xx|iu2_6xx
;;	  4--> 13   r127=cmp(r126,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 4    r123=%r4                           :iu1_6xx|iu2_6xx
;;	  6--> 17   r120=0x0                           :iu1_6xx|iu2_6xx
;;	  9--> 14   pc={(r127==0x0)?L85:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 5
;;   new tail = 14

;;   ======================================================
;;   -- basic block 1 from 24 to 30 -- before reload
;;   ======================================================

;;	  0--> 24   %r3=call [`malloc']                :bpu_6xx
;;	  1--> 25   r128=%r3                           :iu1_6xx|iu2_6xx
;;	  2--> 29   r129=cmp(r128,0x0)                 :iu1_6xx|iu2_6xx
;;	  3--> 80   r151=0x9                           :iu1_6xx|iu2_6xx
;;	  4--> 39   r130=0x55                          :iu1_6xx|iu2_6xx
;;	  5--> 43   r132=0x54                          :iu1_6xx|iu2_6xx
;;	  6--> 47   r134=0x5                           :iu1_6xx|iu2_6xx
;;	  7--> 51   r136=0x0                           :iu1_6xx|iu2_6xx
;;	  8--> 55   r138=0x1                           :iu1_6xx|iu2_6xx
;;	  9--> 28   [r122+0x3c]=r128                   :lsu_6xx
;;	 10--> 33   r120=0x4                           :iu1_6xx|iu2_6xx
;;	 11--> 30   pc={(r129==0x0)?L85:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 11
;;   new head = 24
;;   new tail = 30

;;   ======================================================
;;   -- basic block 2 from 40 to 84 -- before reload
;;   ======================================================

;;	  0--> 59   r140=[r123+0x4]                    :lsu_6xx
;;	  1--> 83   [r122+0x20]=r151                   :lsu_6xx
;;	  2--> 74   r149=r140 0>>0x18                  :iu1_6xx|iu2_6xx
;;	  3--> 64   r143=r140 0>>0x8                   :iu1_6xx|iu2_6xx
;;	  4--> 69   r146=r140 0>>0x10                  :iu1_6xx|iu2_6xx
;;	  5--> 40   [r128]=r130                        :lsu_6xx
;;	  6--> 44   [r128+0x1]=r132                    :lsu_6xx
;;	  7--> 48   [r128+0x2]=r134                    :lsu_6xx
;;	  8--> 52   [r128+0x3]=r136                    :lsu_6xx
;;	  9--> 56   [r128+0x4]=r138                    :lsu_6xx
;;	 10--> 65   [r128+0x6]=r143#3                  :lsu_6xx
;;	 11--> 70   [r128+0x7]=r146#3                  :lsu_6xx
;;	 12--> 75   [r128+0x8]=r149#3                  :lsu_6xx
;;	 13--> 78   [r122+0x40]=r128                   :lsu_6xx
;;	 14--> 60   [r128+0x5]=r140#3                  :lsu_6xx
;;	 15--> 81   [r122+0x1c]=r151                   :lsu_6xx
;;	 16--> 84   r120=0x0                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 16
;;   new head = 59
;;   new tail = 84

;;   ======================================================
;;   -- basic block 3 from 93 to 99 -- before reload
;;   ======================================================

;;	  0--> 93   %r3=r120                           :iu1_6xx|iu2_6xx
;;	 17--> 99   use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 17
;;   new head = 93
;;   new tail = 99


;; Procedure interblock/speculative motions == 7/7 


(note:HI 2 0 7 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap]
(note:HI 7 2 5 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 5 7 10 0 NOTE_INSN_FUNCTION_BEG)

(insn:HI 10 5 12 0 (set (reg/f:SI 125)
        (high:SI (symbol_ref:SI ("zp_tz_is_valid") [flags 0x44] <var_decl 0x4028189c zp_tz_is_valid>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 12 10 3 0 (set (reg:SI 126 [ zp_tz_is_valid ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 125)
                (symbol_ref:SI ("zp_tz_is_valid") [flags 0x44] <var_decl 0x4028189c zp_tz_is_valid>)) [3 zp_tz_is_valid+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("zp_tz_is_valid") [flags 0x44] <var_decl 0x4028189c zp_tz_is_valid>) [3 zp_tz_is_valid+0 S4 A32])
            (nil))))

(insn:HI 3 12 23 0 (set (reg/v/f:SI 122 [ z ])
        (reg:SI 3 %r3 [ z ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ z ])
        (nil)))

(insn:HI 23 3 13 0 (set (reg:SI 3 %r3)
        (const_int 9 [0x9])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 3 (nil))
    (nil))

(insn:HI 13 23 4 0 (set (reg:CC 127)
        (compare:CC (reg:SI 126 [ zp_tz_is_valid ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:SI 126 [ zp_tz_is_valid ])
        (nil)))

(insn:HI 4 13 17 0 (set (reg/v/f:SI 123 [ z_utim ])
        (reg:SI 4 %r4 [ z_utim ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ z_utim ])
        (nil)))

(insn:HI 17 4 14 0 (set (reg:SI 120 [ D.5318 ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 14 17 21 0 (set (pc)
        (if_then_else (eq (reg:CC 127)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 4 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_ANTI 17 (insn_list:REG_DEP_TRUE 13 (nil)))))))
    (expr_list:REG_DEAD (reg:CC 127)
        (expr_list:REG_BR_PROB (const_int 886 [0x376])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 120 122 123

;; Start of basic block 1, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 122 123
(note:HI 21 14 24 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(call_insn:HI 24 21 25 1 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 4 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_ANTI 14 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_ANTI 12 (nil))))))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
        (nil)))

(insn:HI 25 24 29 1 (set (reg/f:SI 128)
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 24 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (expr_list:REG_NOALIAS (reg/f:SI 128)
            (nil))))

(insn:HI 29 25 80 1 (set (reg:CC 129)
        (compare:CC (reg/f:SI 128)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 24 (nil)))
    (nil))

(insn:HI 80 29 39 1 (set (reg:SI 151)
        (const_int 9 [0x9])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 24 (nil))
    (nil))

(insn:HI 39 80 43 1 (set (reg:QI 130)
        (const_int 85 [0x55])) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 24 (nil))
    (nil))

(insn:HI 43 39 47 1 (set (reg:QI 132)
        (const_int 84 [0x54])) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 24 (nil))
    (nil))

(insn:HI 47 43 51 1 (set (reg:QI 134)
        (const_int 5 [0x5])) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 24 (nil))
    (nil))

(insn:HI 51 47 55 1 (set (reg:QI 136)
        (const_int 0 [0x0])) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 24 (nil))
    (nil))

(insn:HI 55 51 28 1 (set (reg:QI 138)
        (const_int 1 [0x1])) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 24 (nil))
    (nil))

(insn:HI 28 55 33 1 (set (mem/s:SI (plus:SI (reg/v/f:SI 122 [ z ])
                (const_int 60 [0x3c])) [8 <variable>.extra+0 S4 A32])
        (reg/f:SI 128)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_ANTI 24 (nil))))
    (nil))

(insn:HI 33 28 30 1 (set (reg:SI 120 [ D.5318 ])
        (const_int 4 [0x4])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 17 (insn_list:REG_DEP_ANTI 24 (nil)))
    (nil))

(jump_insn:HI 30 33 37 1 (set (pc)
        (if_then_else (eq (reg:CC 129)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 23 (insn_list:REG_DEP_ANTI 25 (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_TRUE 29 (insn_list:REG_DEP_ANTI 24 (insn_list:REG_DEP_ANTI 28 (nil)))))))
    (expr_list:REG_DEAD (reg:CC 129)
        (expr_list:REG_BR_PROB (const_int 1036 [0x40c])
            (nil))))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 120 122 123 128 130 132 134 136 138 151

;; Start of basic block 2, registers live: 1 [%r1] 31 [%r31] 67 [ap] 122 123 128 130 132 134 136 138 151
(note:HI 37 30 59 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 59 37 83 2 (set (reg:SI 140 [ <variable>.mtime ])
        (mem/s:SI (plus:SI (reg/v/f:SI 123 [ z_utim ])
                (const_int 4 [0x4])) [4 <variable>.mtime+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 4 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil))))
    (expr_list:REG_DEAD (reg/v/f:SI 123 [ z_utim ])
        (nil)))

(insn:HI 83 59 74 2 (set (mem/s:SI (plus:SI (reg/v/f:SI 122 [ z ])
                (const_int 32 [0x20])) [3 <variable>.cext+0 S4 A32])
        (reg:SI 151)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 80 (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_EQUAL (const_int 9 [0x9])
        (nil)))

(insn:HI 74 83 64 2 (set (reg:SI 149)
        (lshiftrt:SI (reg:SI 140 [ <variable>.mtime ])
            (const_int 24 [0x18]))) 117 {lshrsi3_no_power} (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_ANTI 24 (nil)))
    (nil))

(insn:HI 64 74 69 2 (set (reg:SI 143)
        (lshiftrt:SI (reg:SI 140 [ <variable>.mtime ])
            (const_int 8 [0x8]))) 117 {lshrsi3_no_power} (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_ANTI 24 (nil)))
    (nil))

(insn:HI 69 64 40 2 (set (reg:SI 146)
        (lshiftrt:SI (reg:SI 140 [ <variable>.mtime ])
            (const_int 16 [0x10]))) 117 {lshrsi3_no_power} (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_ANTI 24 (nil)))
    (nil))

(insn:HI 40 69 44 2 (set (mem:QI (reg/f:SI 128) [0 S1 A8])
        (reg:QI 130)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 39 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:QI 130)
        (expr_list:REG_EQUAL (const_int 85 [0x55])
            (nil))))

(insn:HI 44 40 48 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 1 [0x1])) [0 S1 A8])
        (reg:QI 132)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:QI 132)
        (expr_list:REG_EQUAL (const_int 84 [0x54])
            (nil))))

(insn:HI 48 44 52 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 2 [0x2])) [0 S1 A8])
        (reg:QI 134)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 47 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:QI 134)
        (expr_list:REG_EQUAL (const_int 5 [0x5])
            (nil))))

(insn:HI 52 48 56 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 3 [0x3])) [0 S1 A8])
        (reg:QI 136)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 51 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:QI 136)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:HI 56 52 65 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 4 [0x4])) [0 S1 A8])
        (reg:QI 138)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 55 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:QI 138)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn:HI 65 56 70 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 6 [0x6])) [0 S1 A8])
        (subreg:QI (reg:SI 143) 3)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 64 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn:HI 70 65 75 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 7 [0x7])) [0 S1 A8])
        (subreg:QI (reg:SI 146) 3)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 69 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn:HI 75 70 78 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 8 [0x8])) [0 S1 A8])
        (subreg:QI (reg:SI 149) 3)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 74 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn:HI 78 75 60 2 (set (mem/s:SI (plus:SI (reg/v/f:SI 122 [ z ])
                (const_int 64 [0x40])) [8 <variable>.cextra+0 S4 A32])
        (reg/f:SI 128)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (nil))

(insn:HI 60 78 81 2 (set (mem:QI (plus:SI (reg/f:SI 128)
                (const_int 5 [0x5])) [0 S1 A8])
        (subreg:QI (reg:SI 140 [ <variable>.mtime ]) 3)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:SI 140 [ <variable>.mtime ])
        (expr_list:REG_DEAD (reg/f:SI 128)
            (nil))))

(insn:HI 81 60 84 2 (set (mem/s:SI (plus:SI (reg/v/f:SI 122 [ z ])
                (const_int 28 [0x1c])) [3 <variable>.ext+0 S4 A32])
        (reg:SI 151)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 80 (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_ANTI 30 (insn_list:REG_DEP_ANTI 24 (nil)))))
    (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/v/f:SI 122 [ z ])
            (expr_list:REG_EQUAL (const_int 9 [0x9])
                (nil)))))

(insn:HI 84 81 85 2 (set (reg:SI 120 [ D.5318 ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 33 (insn_list:REG_DEP_ANTI 24 (nil)))
    (nil))
;; End of basic block 2, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 120

;; Start of basic block 3, registers live: 1 [%r1] 31 [%r31] 67 [ap] 120
(code_label:HI 85 84 86 3 128 "" [2 uses])

(note:HI 86 85 90 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 90 86 93 3 NOTE_INSN_FUNCTION_END)

(insn:HI 93 90 99 3 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg:SI 120 [ D.5318 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 25 (insn_list:REG_DEP_OUTPUT 24 (insn_list:REG_DEP_TRUE 17 (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_TRUE 84 (nil)))))))
    (expr_list:REG_DEAD (reg:SI 120 [ D.5318 ])
        (nil)))

(insn:HI 99 93 108 3 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 93 (nil))
    (nil))
;; End of basic block 3, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 108 99 0 3 NOTE_INSN_DELETED)


;; Function deletedir

;;   ======================================================
;;   -- basic block 0 from 10 to 24 -- before reload
;;   ======================================================

;;	  0--> 10   %r3=call [`rmdir']                 :bpu_6xx
;;	  1--> 24   use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 15
;;   new tail = 24


;; Procedure interblock/speculative motions == 0/0 


(note:HI 2 0 4 NOTE_INSN_DELETED)

(note:HI 4 2 6 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]
(note:HI 6 4 15 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 15 6 10 0 NOTE_INSN_FUNCTION_END)

(call_insn:HI 10 15 24 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("rmdir") [flags 0x41] <function_decl 0x403d7984 rmdir>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 4 [0x4]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (nil)
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ d ]))
        (nil)))

(insn:HI 24 10 29 0 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 10 (nil))
    (nil))
;; End of basic block 0, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 29 24 0 0 NOTE_INSN_DELETED)


;; Function version_local

;;   ======================================================
;;   -- basic block 0 from 8 to 64 -- before reload
;;   ======================================================

;;	  0--> 8    r119=high(`*.LC7')                 :iu1_6xx|iu2_6xx
;;	  1--> 9    r118=r119+low(`*.LC7')             :iu1_6xx|iu2_6xx
;;	  2--> 20   r127=high(`WBversion')             :iu1_6xx|iu2_6xx
;;	  3--> 10   r120=[r119+low(`*.LC7')]           :lsu_6xx
;;	  4--> 14   r122=[r118+0x8]                    :lsu_6xx
;;	  5--> 25   %r5=[r127+low(`WBversion')]        :lsu_6xx
;;	  6--> 12   r121=[r118+0x4]                    :lsu_6xx
;;	  7--> 17   r123=%r31+0x28                     :iu1_6xx|iu2_6xx
;;	  8--> 18   r125=high(`*.LC8')                 :iu1_6xx|iu2_6xx
;;	  9--> 24   %r4=r125+low(`*.LC8')              :iu1_6xx|iu2_6xx
;;	 10--> 23   %r3=r123                           :iu1_6xx|iu2_6xx
;;	 11--> 11   [%r31+0x8]=r120                    :lsu_6xx
;;	 12--> 13   [%r31+0xc]=r121                    :lsu_6xx
;;	 13--> 15   [%r31+0x10]=r122                   :lsu_6xx
;;	 14--> 26   %r3=call [`sprintf']               :bpu_6xx
;;	 15--> 28   r129=%r31+0x18                     :iu1_6xx|iu2_6xx
;;	 16--> 29   r131=high(`*.LC9')                 :iu1_6xx|iu2_6xx
;;	 17--> 31   r133=high(`*.LC10')                :iu1_6xx|iu2_6xx
;;	 18--> 34   %r4=r131+low(`*.LC9')              :iu1_6xx|iu2_6xx
;;	 19--> 35   %r5=r133+low(`*.LC10')             :iu1_6xx|iu2_6xx
;;	 20--> 33   %r3=r129                           :iu1_6xx|iu2_6xx
;;	 21--> 36   %r3=call [`sprintf']               :bpu_6xx
;;	 22--> 38   r134=%r31+0x38                     :iu1_6xx|iu2_6xx
;;	 23--> 39   r136=high(`*.LC11')                :iu1_6xx|iu2_6xx
;;	 24--> 41   r138=high(`*.LC12')                :iu1_6xx|iu2_6xx
;;	 25--> 44   %r4=r136+low(`*.LC11')             :iu1_6xx|iu2_6xx
;;	 26--> 45   %r5=r138+low(`*.LC12')             :iu1_6xx|iu2_6xx
;;	 27--> 43   %r3=r134                           :iu1_6xx|iu2_6xx
;;	 28--> 46   %r3=call [`sprintf']               :bpu_6xx
;;	 29--> 53   r145=high(`*.LC13')                :iu1_6xx|iu2_6xx
;;	 30--> 54   r144=r145+low(`*.LC13')            :iu1_6xx|iu2_6xx
;;	 31--> 62   %r8=r144                           :iu1_6xx|iu2_6xx
;;	 32--> 48   r140=high(`CompiledWith.5348')     :iu1_6xx|iu2_6xx
;;	 33--> 57   %r3=r140+low(`CompiledWith.5348')  :iu1_6xx|iu2_6xx
;;	 34--> 59   %r5=r129                           :iu1_6xx|iu2_6xx
;;	 35--> 60   %r6=r123                           :iu1_6xx|iu2_6xx
;;	 36--> 61   %r7=r134                           :iu1_6xx|iu2_6xx
;;	 37--> 58   %r4=%r31+0x8                       :iu1_6xx|iu2_6xx
;;	 38--> 63   %r9=%r8                            :iu1_6xx|iu2_6xx
;;	 39--> 64   %r3=call [`printf']                :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 39
;;   new head = 19
;;   new tail = 64


;; Procedure interblock/speculative motions == 0/0 


(note:HI 2 0 3 NOTE_INSN_DELETED)

(note:HI 3 2 6 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 0, registers live: 1 [%r1] 31 [%r31] 67 [ap]
(note:HI 6 3 19 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 19 6 22 0 NOTE_INSN_DELETED)

(note:HI 22 19 30 0 NOTE_INSN_DELETED)

(note:HI 30 22 32 0 NOTE_INSN_DELETED)

(note:HI 32 30 40 0 NOTE_INSN_DELETED)

(note:HI 40 32 42 0 NOTE_INSN_DELETED)

(note:HI 42 40 49 0 NOTE_INSN_DELETED)

(note:HI 49 42 8 0 NOTE_INSN_DELETED)

(insn:HI 8 49 9 0 (set (reg/f:SI 119)
        (high:SI (symbol_ref/f:SI ("*.LC7") [flags 0x2] <string_cst 0x40471440>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 9 8 20 0 (set (reg/f:SI 118)
        (lo_sum:SI (reg/f:SI 119)
            (symbol_ref/f:SI ("*.LC7") [flags 0x2] <string_cst 0x40471440>))) 266 {elf_low} (insn_list:REG_DEP_TRUE 8 (nil))
    (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC7") [flags 0x2] <string_cst 0x40471440>)
        (nil)))

(insn:HI 20 9 10 0 (set (reg/f:SI 127)
        (high:SI (symbol_ref:SI ("WBversion") [flags 0x6] <var_decl 0x403d7c3c WBversion>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 10 20 14 0 (set (reg:SI 120)
        (mem/s:SI (lo_sum:SI (reg/f:SI 119)
                (symbol_ref/f:SI ("*.LC7") [flags 0x2] <string_cst 0x40471440>)) [0 S4 A8])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 8 (nil))
    (expr_list:REG_DEAD (reg/f:SI 119)
        (nil)))

(insn:HI 14 10 25 0 (set (reg:QI 122)
        (mem/s:QI (plus:SI (reg/f:SI 118)
                (const_int 8 [0x8])) [0 S1 A8])) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 9 (nil))
    (nil))

(insn:HI 25 14 12 0 (set (reg:SI 5 %r5 [ WBversion ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 127)
                (symbol_ref:SI ("WBversion") [flags 0x6] <var_decl 0x403d7c3c WBversion>)) [3 WBversion+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))

(insn:HI 12 25 17 0 (set (reg:SI 121)
        (mem/s:SI (plus:SI (reg/f:SI 118)
                (const_int 4 [0x4])) [0 S4 A8])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg/f:SI 118)
        (nil)))

(insn:HI 17 12 18 0 (set (reg/f:SI 123)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 40 [0x28]))) 36 {*addsi3_internal1} (nil)
    (nil))

(insn:HI 18 17 24 0 (set (reg/f:SI 125)
        (high:SI (symbol_ref/f:SI ("*.LC8") [flags 0x2] <string_cst 0x40464894>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 24 18 23 0 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 125)
            (symbol_ref/f:SI ("*.LC8") [flags 0x2] <string_cst 0x40464894>))) 266 {elf_low} (insn_list:REG_DEP_TRUE 18 (nil))
    (expr_list:REG_DEAD (reg/f:SI 125)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC8") [flags 0x2] <string_cst 0x40464894>)
            (nil))))

(insn:HI 23 24 11 0 (set (reg:SI 3 %r3)
        (reg/f:SI 123)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 17 (nil))
    (expr_list:REG_EQUAL (plus:SI (reg/f:SI 31 %r31)
            (const_int 40 [0x28]))
        (nil)))

(insn:HI 11 23 13 0 (set (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 8 [0x8])) [0 buf1+0 S4 A64])
        (reg:SI 120)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 10 (nil))
    (expr_list:REG_DEAD (reg:SI 120)
        (nil)))

(insn:HI 13 11 15 0 (set (mem/s:SI (plus:SI (reg/f:SI 31 %r31)
                (const_int 12 [0xc])) [0 buf1+4 S4 A32])
        (reg:SI 121)) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 12 (nil))
    (expr_list:REG_DEAD (reg:SI 121)
        (nil)))

(insn:HI 15 13 26 0 (set (mem/s:QI (plus:SI (reg/f:SI 31 %r31)
                (const_int 16 [0x10])) [0 buf1+8 S1 A64])
        (reg:QI 122)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 14 (nil))
    (expr_list:REG_DEAD (reg:QI 122)
        (nil)))

(call_insn:HI 26 15 28 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x401f5a6c sprintf>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 4 [0x4]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_ANTI 9 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_ANTI 14 (insn_list:REG_DEP_ANTI 11 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_ANTI 15 (insn_list:REG_DEP_TRUE 24 (insn_list:REG_DEP_TRUE 25 (nil)))))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5 [ WBversion ])
            (expr_list:REG_UNUSED (scratch:SI)
                (expr_list:REG_UNUSED (reg:SI 3 %r3)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5 [ WBversion ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
                (nil)))))

(insn:HI 28 26 29 0 (set (reg/f:SI 129)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 24 [0x18]))) 36 {*addsi3_internal1} (nil)
    (nil))

(insn:HI 29 28 31 0 (set (reg/f:SI 131)
        (high:SI (symbol_ref/f:SI ("*.LC9") [flags 0x2] <string_cst 0x404648b8>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 26 (nil))
    (nil))

(insn:HI 31 29 34 0 (set (reg/f:SI 133)
        (high:SI (symbol_ref/f:SI ("*.LC10") [flags 0x2] <string_cst 0x4046d580>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 26 (nil))
    (nil))

(insn:HI 34 31 35 0 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 131)
            (symbol_ref/f:SI ("*.LC9") [flags 0x2] <string_cst 0x404648b8>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 26 (insn_list:REG_DEP_OUTPUT 24 (insn_list:REG_DEP_TRUE 29 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 131)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC9") [flags 0x2] <string_cst 0x404648b8>)
            (nil))))

(insn:HI 35 34 33 0 (set (reg:SI 5 %r5)
        (lo_sum:SI (reg/f:SI 133)
            (symbol_ref/f:SI ("*.LC10") [flags 0x2] <string_cst 0x4046d580>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 26 (insn_list:REG_DEP_OUTPUT 25 (insn_list:REG_DEP_TRUE 31 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC10") [flags 0x2] <string_cst 0x4046d580>)
            (nil))))

(insn:HI 33 35 36 0 (set (reg:SI 3 %r3)
        (reg/f:SI 129)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 26 (insn_list:REG_DEP_TRUE 28 (nil)))
    (expr_list:REG_EQUAL (plus:SI (reg/f:SI 31 %r31)
            (const_int 24 [0x18]))
        (nil)))

(call_insn:HI 36 33 38 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x401f5a6c sprintf>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 4 [0x4]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 33 (insn_list:REG_DEP_ANTI 26 (insn_list:REG_DEP_TRUE 34 (insn_list:REG_DEP_TRUE 35 (nil)))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_UNUSED (scratch:SI)
                (expr_list:REG_UNUSED (reg:SI 3 %r3)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
                (nil)))))

(insn:HI 38 36 39 0 (set (reg/f:SI 134)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 56 [0x38]))) 36 {*addsi3_internal1} (nil)
    (nil))

(insn:HI 39 38 41 0 (set (reg/f:SI 136)
        (high:SI (symbol_ref/f:SI ("*.LC11") [flags 0x2] <string_cst 0x40471540>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 36 (nil))
    (nil))

(insn:HI 41 39 44 0 (set (reg/f:SI 138)
        (high:SI (symbol_ref/f:SI ("*.LC12") [flags 0x2] <string_cst 0x404648dc>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 36 (nil))
    (nil))

(insn:HI 44 41 45 0 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 136)
            (symbol_ref/f:SI ("*.LC11") [flags 0x2] <string_cst 0x40471540>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 36 (insn_list:REG_DEP_OUTPUT 34 (insn_list:REG_DEP_TRUE 39 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC11") [flags 0x2] <string_cst 0x40471540>)
            (nil))))

(insn:HI 45 44 43 0 (set (reg:SI 5 %r5)
        (lo_sum:SI (reg/f:SI 138)
            (symbol_ref/f:SI ("*.LC12") [flags 0x2] <string_cst 0x404648dc>))) 266 {elf_low} (insn_list:REG_DEP_ANTI 36 (insn_list:REG_DEP_OUTPUT 35 (insn_list:REG_DEP_TRUE 41 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC12") [flags 0x2] <string_cst 0x404648dc>)
            (nil))))

(insn:HI 43 45 46 0 (set (reg:SI 3 %r3)
        (reg/f:SI 134)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 36 (insn_list:REG_DEP_TRUE 38 (nil)))
    (expr_list:REG_EQUAL (plus:SI (reg/f:SI 31 %r31)
            (const_int 56 [0x38]))
        (nil)))

(call_insn:HI 46 43 53 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x401f5a6c sprintf>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 4 [0x4]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_ANTI 36 (insn_list:REG_DEP_TRUE 44 (insn_list:REG_DEP_TRUE 45 (nil)))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_UNUSED (scratch:SI)
                (expr_list:REG_UNUSED (reg:SI 3 %r3)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
                (nil)))))

(insn:HI 53 46 54 0 (set (reg/f:SI 145)
        (high:SI (symbol_ref/f:SI ("*.LC13") [flags 0x2] <string_cst 0x40470528>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 46 (nil))
    (nil))

(insn:HI 54 53 62 0 (set (reg/f:SI 144)
        (lo_sum:SI (reg/f:SI 145)
            (symbol_ref/f:SI ("*.LC13") [flags 0x2] <string_cst 0x40470528>))) 266 {elf_low} (insn_list:REG_DEP_TRUE 53 (insn_list:REG_DEP_ANTI 46 (nil)))
    (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2] <string_cst 0x40470528>)
            (nil))))

(insn:HI 62 54 48 0 (set (reg:SI 8 %r8)
        (reg/f:SI 144)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 26 (insn_list:REG_DEP_OUTPUT 36 (insn_list:REG_DEP_OUTPUT 46 (insn_list:REG_DEP_TRUE 54 (nil)))))
    (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2] <string_cst 0x40470528>)
            (nil))))

(insn:HI 48 62 57 0 (set (reg/f:SI 140)
        (high:SI (symbol_ref:SI ("CompiledWith.5348") [flags 0x2] <var_decl 0x403d7f68 CompiledWith>))) 263 {elf_high} (insn_list:REG_DEP_ANTI 46 (nil))
    (nil))

(insn:HI 57 48 59 0 (set (reg:SI 3 %r3)
        (lo_sum:SI (reg/f:SI 140)
            (symbol_ref:SI ("CompiledWith.5348") [flags 0x2] <var_decl 0x403d7f68 CompiledWith>))) 266 {elf_low} (insn_list:REG_DEP_OUTPUT 46 (insn_list:REG_DEP_TRUE 48 (nil)))
    (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (symbol_ref:SI ("CompiledWith.5348") [flags 0x2] <var_decl 0x403d7f68 CompiledWith>)
            (nil))))

(insn:HI 59 57 60 0 (set (reg:SI 5 %r5)
        (reg/f:SI 129)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 46 (insn_list:REG_DEP_OUTPUT 45 (insn_list:REG_DEP_TRUE 28 (nil))))
    (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 31 %r31)
                (const_int 24 [0x18]))
            (nil))))

(insn:HI 60 59 61 0 (set (reg:SI 6 %r6)
        (reg/f:SI 123)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 26 (insn_list:REG_DEP_OUTPUT 36 (insn_list:REG_DEP_OUTPUT 46 (insn_list:REG_DEP_TRUE 17 (nil)))))
    (expr_list:REG_DEAD (reg/f:SI 123)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 31 %r31)
                (const_int 40 [0x28]))
            (nil))))

(insn:HI 61 60 58 0 (set (reg:SI 7 %r7)
        (reg/f:SI 134)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 26 (insn_list:REG_DEP_OUTPUT 36 (insn_list:REG_DEP_OUTPUT 46 (insn_list:REG_DEP_TRUE 38 (nil)))))
    (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 31 %r31)
                (const_int 56 [0x38]))
            (nil))))

(insn:HI 58 61 63 0 (set (reg:SI 4 %r4)
        (plus:SI (reg/f:SI 31 %r31)
            (const_int 8 [0x8]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_ANTI 46 (insn_list:REG_DEP_OUTPUT 44 (nil)))
    (nil))

(insn:HI 63 58 64 0 (set (reg:SI 9 %r9)
        (reg:SI 8 %r8)) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 26 (insn_list:REG_DEP_OUTPUT 36 (insn_list:REG_DEP_OUTPUT 46 (insn_list:REG_DEP_TRUE 62 (nil)))))
    (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC13") [flags 0x2] <string_cst 0x40470528>)
        (nil)))

(call_insn:HI 64 63 75 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("printf") [flags 0x41] <function_decl 0x401f49f8 printf>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 4 [0x4]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 8 (insn_list:REG_DEP_ANTI 9 (insn_list:REG_DEP_ANTI 10 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_ANTI 14 (insn_list:REG_DEP_ANTI 11 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_ANTI 15 (insn_list:REG_DEP_ANTI 17 (insn_list:REG_DEP_ANTI 18 (insn_list:REG_DEP_ANTI 20 (insn_list:REG_DEP_ANTI 23 (insn_list:REG_DEP_ANTI 24 (insn_list:REG_DEP_ANTI 25 (insn_list:REG_DEP_ANTI 26 (insn_list:REG_DEP_ANTI 28 (insn_list:REG_DEP_ANTI 29 (insn_list:REG_DEP_ANTI 31 (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_ANTI 34 (insn_list:REG_DEP_ANTI 35 (insn_list:REG_DEP_ANTI 36 (insn_list:REG_DEP_ANTI 38 (insn_list:REG_DEP_ANTI 39 (insn_list:REG_DEP_ANTI 41 (insn_list:REG_DEP_ANTI 43 (insn_list:REG_DEP_ANTI 44 (insn_list:REG_DEP_ANTI 45 (insn_list:REG_DEP_ANTI 48 (insn_list:REG_DEP_ANTI 53 (insn_list:REG_DEP_TRUE 63 (insn_list:REG_DEP_TRUE 61 (insn_list:REG_DEP_TRUE 60 (insn_list:REG_DEP_TRUE 59 (insn_list:REG_DEP_TRUE 58 (insn_list:REG_DEP_ANTI 46 (insn_list:REG_DEP_ANTI 54 (insn_list:REG_DEP_TRUE 57 (insn_list:REG_DEP_TRUE 62 (nil))))))))))))))))))))))))))))))))))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_DEAD (reg:SI 6 %r6)
                (expr_list:REG_DEAD (reg:SI 7 %r7)
                    (expr_list:REG_DEAD (reg:SI 8 %r8)
                        (expr_list:REG_DEAD (reg:SI 9 %r9)
                            (expr_list:REG_UNUSED (scratch:SI)
                                (expr_list:REG_UNUSED (reg:SI 3 %r3)
                                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                                        (nil))))))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 9 %r9))
        (expr_list:REG_DEP_TRUE (use (reg:SI 8 %r8))
            (expr_list:REG_DEP_TRUE (use (reg:SI 7 %r7))
                (expr_list:REG_DEP_TRUE (use (reg:SI 6 %r6))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
                        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
                            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
                                (nil)))))))))
;; End of basic block 0, registers live:
 1 [%r1] 31 [%r31] 67 [ap]

(note 75 64 65 0 NOTE_INSN_DELETED)

(note:HI 65 75 0 NOTE_INSN_FUNCTION_END)


;; Function wild_recurse

;;   ======================================================
;;   -- basic block 6 from 62 to 420 -- before reload
;;   ======================================================

;;	  0--> 62   r124=r126                          :iu1_6xx|iu2_6xx
;;	  1--> 68   r126=r124-0x1                      :iu1_6xx|iu2_6xx
;;	  2--> 64   r159=cmp(r146,r124)                :iu1_6xx|iu2_6xx
;;	  3--> 420  {pc={(r223==0x1)?L73:pc};r223=r223-:bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 62
;;   new tail = 420

;;   ======================================================
;;   -- basic block 7 from 70 to 72 -- before reload
;;   ======================================================

;;	  0--> 70   r161=zxn([r124-0x1])               :lsu_6xx
;;	  2--> 71   r162=cmp(r161,0x2f)                :iu1_6xx|iu2_6xx
;;	  7--> 72   pc={(r162!=0x0)?L60:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 70
;;   new tail = 72

;;   ======================================================
;;   -- basic block 32 from 292 to 297 -- before reload
;;   ======================================================

;;	  0--> 292  %r3=r137                           :iu1_6xx|iu2_6xx
;;	  1--> 293  %r3=call [`readdir']               :bpu_6xx
;;	  2--> 224  %r5=0x0                            :iu1_6xx|iu2_6xx
;;	  3--> 296  {r202=cmp(%r3,0x0);r127=%r3;}      :iu1_6xx|iu2_6xx
;;	  4--> 222  %r3=r124                           :iu1_6xx|iu2_6xx
;;	  6--> 302  {r203=cmp(r127+0x14,0x0);r121=r127+:iu1_6xx|iu2_6xx
;;	  8--> 297  pc={(r202==0x0)?L405:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 294
;;   new tail = 297

;;   ======================================================
;;   -- basic block 33 from 303 to 303 -- before reload
;;   ======================================================

;;	  0--> 223  %r4=r121                           :iu1_6xx|iu2_6xx
;;	  1--> 303  pc={(r203!=0x0)?L219:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 223
;;   new tail = 303

;;   ======================================================
;;   -- basic block 24 from 225 to 228 -- before reload
;;   ======================================================

;;	  0--> 225  %r3=call [`shmatch']               :bpu_6xx
;;	  1--> 227  r193=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  2--> 234  %r4=r121                           :iu1_6xx|iu2_6xx
;;	  3--> 233  %r3=r215                           :iu1_6xx|iu2_6xx
;;	  6--> 228  pc={(r193==0x0)?L465:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 6
;;   new head = 226
;;   new tail = 228

;;   ======================================================
;;   -- basic block 25 from 235 to 238 -- before reload
;;   ======================================================

;;	  0--> 235  %r3=call [`strcpy']                :bpu_6xx
;;	  1--> 242  %r3=r135                           :iu1_6xx|iu2_6xx
;;	  2--> 266  %r4=0x0                            :iu1_6xx|iu2_6xx
;;	  3--> 238  pc={(r212==0x0)?L262:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 235
;;   new tail = 238

;;   ======================================================
;;   -- basic block 27 from 265 to 268 -- before reload
;;   ======================================================

;;	  0--> 265  %r3=r135                           :iu1_6xx|iu2_6xx
;;	  1--> 267  %r3=call [`procname']              :bpu_6xx
;;	  2--> 268  r128=%r3                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 265
;;   new tail = 268

;;   ======================================================
;;   -- basic block 26 from 243 to 452 -- before reload
;;   ======================================================

;;	  0--> 243  %r3=call [`strlen']                :bpu_6xx
;;	  1--> 244  r195=%r3                           :iu1_6xx|iu2_6xx
;;	  2--> 246  r123=r135+r195                     :iu1_6xx|iu2_6xx
;;	  3--> 250  r122=r123+0x1                      :iu1_6xx|iu2_6xx
;;	  4--> 249  [r135+r195]=r197                   :lsu_6xx
;;	  5--> 252  %r3=r122                           :iu1_6xx|iu2_6xx
;;	  6--> 253  %r4=r136                           :iu1_6xx|iu2_6xx
;;	  7--> 254  %r3=call [`strcpy']                :bpu_6xx
;;	  8--> 256  %r3=r135                           :iu1_6xx|iu2_6xx
;;	  9--> 257  %r4=r122                           :iu1_6xx|iu2_6xx
;;	 10--> 258  %r3=call [`wild_recurse']          :bpu_6xx
;;	 11--> 259  r128=%r3                           :iu1_6xx|iu2_6xx
;;	 12--> 452  pc=L269                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 12
;;   new head = 243
;;   new tail = 452

;;   ======================================================
;;   -- basic block 28 from 273 to 276 -- before reload
;;   ======================================================

;;	  0--> 286  r214=cmp(r128,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	  1--> 275  r199=cmp(r128,0x0)                 :iu1_6xx|iu2_6xx
;;	  2--> 273  [r215]=r198                        :lsu_6xx
;;	 13--> 276  pc={(r199!=0x0)?L282:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 13
;;   new head = 286
;;   new tail = 276

;;   ======================================================
;;   -- basic block 29 from 279 to 454 -- before reload
;;   ======================================================

;;	  0--> 279  r130=0x1                           :iu1_6xx|iu2_6xx
;;	 13--> 454  pc=L465                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 13
;;   new head = 279
;;   new tail = 454

;;   ======================================================
;;   -- basic block 30 from 287 to 287 -- before reload
;;   ======================================================

;;	  0--> 287  pc={(r214!=0x0)?L321:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 287
;;   new tail = 287

;;   ======================================================
;;   -- basic block 0 from 5 to 16 -- before reload
;;   ======================================================

;;	  0--> 6    r146=%r4                           :iu1_6xx|iu2_6xx
;;	  1--> 5    r145=%r3                           :iu1_6xx|iu2_6xx
;;	  2--> 12   %r3=r146                           :iu1_6xx|iu2_6xx
;;	  3--> 13   %r3=call [`isshexp']               :bpu_6xx
;;	  4--> 15   r147=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  5--> 49   r134=0x0                           :iu1_6xx|iu2_6xx
;;	  6--> 50   r133=0x0                           :iu1_6xx|iu2_6xx
;;	  9--> 16   pc={(r147!=0x0)?L51:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 7
;;   new tail = 16

;;   ======================================================
;;   -- basic block 1 from 20 to 30 -- before reload
;;   ======================================================

;;	  0--> 20   r149=high(`IDOS')                  :iu1_6xx|iu2_6xx
;;	  1--> 22   r142=[r149+low(`IDOS')]            :lsu_6xx
;;	  2--> 25   %r4=r145                           :iu1_6xx|iu2_6xx
;;	  3--> 24   %r3=r142                           :iu1_6xx|iu2_6xx
;;	  4--> 23   r150=[r142+0x70]                   :lsu_6xx
;;	  5--> 26   %r5=0xfffffffffffffffe             :iu1_6xx|iu2_6xx
;;	  9--> 27   %r3=call [r150]                    :bpu_6xx
;;	 10--> 29   {r151=cmp(%r3,0x0);r129=%r3;}      :iu1_6xx|iu2_6xx
;;	 15--> 30   pc={(r151==0x0)?L358:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 15
;;   new head = 28
;;   new tail = 30

;;   ======================================================
;;   -- basic block 2 from 36 to 44 -- before reload
;;   ======================================================

;;	  0--> 36   r125=[r149+low(`IDOS')]            :lsu_6xx
;;	  1--> 39   %r4=r129                           :iu1_6xx|iu2_6xx
;;	  2--> 38   %r3=r125                           :iu1_6xx|iu2_6xx
;;	  3--> 37   r154=[r125+0x74]                   :lsu_6xx
;;	  7--> 40   call [r154]                        :bpu_6xx
;;	  8--> 42   %r3=r145                           :iu1_6xx|iu2_6xx
;;	  9--> 43   %r4=0x0                            :iu1_6xx|iu2_6xx
;;	 10--> 44   %r3=call [`procname']              :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 10
;;   new head = 36
;;   new tail = 44

;;   ======================================================
;;   -- basic block 3 from 54 to 428 -- before reload
;;   ======================================================

;;	  0--> 54   %r3=r146                           :iu1_6xx|iu2_6xx
;;	  1--> 55   %r3=call [`strlen']                :bpu_6xx
;;	  2--> 58   r158=r146+%r3                      :iu1_6xx|iu2_6xx
;;	  3--> 421  r126=r158-0x1                      :iu1_6xx|iu2_6xx
;;	  4--> 427  r226=cmp(r146,r126)                :iu1_6xx|iu2_6xx
;;	  5--> 422  r223=r158-r146                     :iu1_6xx|iu2_6xx
;;	  9--> 428  pc={(gtu(r226,0x0))?L426:pc}       :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 9
;;   new head = 56
;;   new tail = 428

;;   ======================================================
;;   -- basic block 4 from 431 to 432 -- before reload
;;   ======================================================

;;	  0--> 431  r228=cmp(r146,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	  5--> 432  pc={(r228!=0x0)?L60:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 431
;;   new tail = 432

;;   ======================================================
;;   -- basic block 5 from 433 to 433 -- before reload
;;   ======================================================

;;	  0--> 433  r223=0x1                           :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 433
;;   new tail = 433

;;   ======================================================
;;   -- basic block 8 from 77 to 83 -- before reload
;;   ======================================================

;;	  0--> 82   r165=cmp(r134,0x0)                 :iu1_6xx|iu2_6xx
;;	  1--> 79   r164=0x0                           :iu1_6xx|iu2_6xx
;;	  2--> 77   r132=zxn([r124])                   :lsu_6xx
;;	  3--> 80   [r124]=r164                        :lsu_6xx
;;	  5--> 83   pc={(r165==0x0)?L88:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 82
;;   new tail = 83

;;   ======================================================
;;   -- basic block 9 from 87 to 87 -- before reload
;;   ======================================================

;;	  0--> 87   [r134]=r133#3                      :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 87
;;   new tail = 87

;;   ======================================================
;;   -- basic block 10 from 91 to 96 -- before reload
;;   ======================================================

;;	  0--> 91   %r3=r145                           :iu1_6xx|iu2_6xx
;;	  1--> 92   %r3=call [`opendir']               :bpu_6xx
;;	  2--> 95   {r213=cmp(%r3,0x0);r137=%r3;}      :iu1_6xx|iu2_6xx
;;	  7--> 96   pc={(r213!=0x0)?L106:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 93
;;   new tail = 96

;;   ======================================================
;;   -- basic block 11 from 99 to 102 -- before reload
;;   ======================================================

;;	  0--> 99   r133=r132                          :iu1_6xx|iu2_6xx
;;	  1--> 100  r134=r124                          :iu1_6xx|iu2_6xx
;;	  2--> 102  pc={(ltu(r159,0x0))?L51:pc}        :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 99
;;   new tail = 102

;;   ======================================================
;;   -- basic block 12 from 110 to 117 -- before reload
;;   ======================================================

;;	  0--> 110  %r3=r124+0x1                       :iu1_6xx|iu2_6xx
;;	  1--> 111  %r4=0x2f                           :iu1_6xx|iu2_6xx
;;	  2--> 112  %r3=call [`strchr']                :bpu_6xx
;;	  3--> 116  {r212=cmp(%r3,0x0);r136=%r3;}      :iu1_6xx|iu2_6xx
;;	  8--> 117  pc={(r212==0x0)?L141:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 113
;;   new tail = 117

;;   ======================================================
;;   -- basic block 13 from 122 to 439 -- before reload
;;   ======================================================

;;	  0--> 122  [r136]=r164                        :lsu_6xx
;;	  1--> 123  r136=r136+0x1                      :iu1_6xx|iu2_6xx
;;	  2--> 125  %r3=r145                           :iu1_6xx|iu2_6xx
;;	  3--> 126  %r3=call [`strlen']                :bpu_6xx
;;	  4--> 127  r173=%r3                           :iu1_6xx|iu2_6xx
;;	  5--> 129  %r3=r136                           :iu1_6xx|iu2_6xx
;;	  6--> 393  r212=cmp(r136,0x0)                 :iu1_6xx|iu2_6xx
;;	  7--> 130  %r3=call [`strlen']                :bpu_6xx
;;	  8--> 135  r179=r173+%r3                      :iu1_6xx|iu2_6xx
;;	  9--> 137  r181=r179+0x20                     :iu1_6xx|iu2_6xx
;;	 10--> 138  r131=zxn(r181#2)                   :iu1_6xx|iu2_6xx
;;	 11--> 439  pc=L151                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 11
;;   new head = 131
;;   new tail = 439

;;   ======================================================
;;   -- basic block 14 from 144 to 150 -- before reload
;;   ======================================================

;;	  0--> 144  %r3=r145                           :iu1_6xx|iu2_6xx
;;	  1--> 145  %r3=call [`strlen']                :bpu_6xx
;;	  2--> 149  r185=%r3+0x1f                      :iu1_6xx|iu2_6xx
;;	  3--> 150  r131=zxn(r185#2)                   :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 3
;;   new head = 146
;;   new tail = 150

;;   ======================================================
;;   -- basic block 15 from 155 to 155 -- before reload
;;   ======================================================

;;	  0--> 155  pc={(r213!=0x0)?L161:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 155
;;   new tail = 155

;;   ======================================================
;;   -- basic block 16 from 158 to 441 -- before reload
;;   ======================================================

;;	  0--> 158  r135=0x0                           :iu1_6xx|iu2_6xx
;;	  1--> 441  pc=L170                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 158
;;   new tail = 441

;;   ======================================================
;;   -- basic block 17 from 163 to 169 -- before reload
;;   ======================================================

;;	  0--> 163  %r3=r131                           :iu1_6xx|iu2_6xx
;;	  1--> 164  %r3=call [`malloc']                :bpu_6xx
;;	  2--> 168  {r188=cmp(%r3,0x0);r135=%r3;}      :iu1_6xx|iu2_6xx
;;	  7--> 169  pc={(r188!=0x0)?L187:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 165
;;   new tail = 169

;;   ======================================================
;;   -- basic block 18 from 173 to 176 -- before reload
;;   ======================================================

;;	  0--> 173  [r124]=r132#3                      :lsu_6xx
;;	  1--> 176  pc={(r213==0x0)?L182:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 173
;;   new tail = 176

;;   ======================================================
;;   -- basic block 19 from 179 to 443 -- before reload
;;   ======================================================

;;	  0--> 179  r128=0x4                           :iu1_6xx|iu2_6xx
;;	  1--> 443  pc=L308                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 179
;;   new tail = 443

;;   ======================================================
;;   -- basic block 20 from 184 to 445 -- before reload
;;   ======================================================

;;	  0--> 184  r128=0xffffffffffffffff            :iu1_6xx|iu2_6xx
;;	  1--> 445  pc=L308                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 184
;;   new tail = 445

;;   ======================================================
;;   -- basic block 21 from 191 to 206 -- before reload
;;   ======================================================

;;	  0--> 191  %r4=r145                           :iu1_6xx|iu2_6xx
;;	  1--> 192  %r3=call [`strcpy']                :bpu_6xx
;;	  2--> 194  %r3=r135                           :iu1_6xx|iu2_6xx
;;	  3--> 195  %r3=call [`strlen']                :bpu_6xx
;;	  4--> 200  [r124]=r132#3                      :lsu_6xx
;;	  5--> 198  r120=zxn(%r3)                      :iu1_6xx|iu2_6xx
;;	  6--> 202  %r3=r124                           :iu1_6xx|iu2_6xx
;;	  7--> 203  %r3=call [`isshexp']               :bpu_6xx
;;	  8--> 205  r192=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	 13--> 206  pc={(r192!=0x0)?L213:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 13
;;   new head = 196
;;   new tail = 206

;;   ======================================================
;;   -- basic block 22 from 209 to 447 -- before reload
;;   ======================================================

;;	  0--> 210  r128=0xffffffffffffffff            :iu1_6xx|iu2_6xx
;;	  1--> 394  r214=cmp(r128,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	  2--> 209  r130=0x0                           :iu1_6xx|iu2_6xx
;;	  6--> 447  pc=L321                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 6
;;   new head = 210
;;   new tail = 447

;;   ======================================================
;;   -- basic block 23 from 215 to 450 -- before reload
;;   ======================================================

;;	  0--> 406  r215=r135+r120                     :iu1_6xx|iu2_6xx
;;	  1--> 215  r130=0x0                           :iu1_6xx|iu2_6xx
;;	  2--> 216  r128=0xffffffffffffffff            :iu1_6xx|iu2_6xx
;;	  3--> 408  r197=0x2f                          :iu1_6xx|iu2_6xx
;;	  4--> 409  r198=0x0                           :iu1_6xx|iu2_6xx
;;	  5--> 450  pc=L465                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 406
;;   new tail = 450

;;   ======================================================
;;   -- basic block 34 from 396 to 456 -- before reload
;;   ======================================================

;;	  0--> 396  r214=cmp(r128,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	  5--> 456  pc=L321                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 396
;;   new tail = 456

;;   ======================================================
;;   -- basic block 35 from 312 to 312 -- before reload
;;   ======================================================

;;	  0--> 312  pc={(r213!=0x0)?L318:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 312
;;   new tail = 312

;;   ======================================================
;;   -- basic block 36 from 315 to 458 -- before reload
;;   ======================================================

;;	  0--> 397  r214=cmp(r128,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	  1--> 315  r130=0x0                           :iu1_6xx|iu2_6xx
;;	  5--> 458  pc=L325                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 397
;;   new tail = 458

;;   ======================================================
;;   -- basic block 37 from 320 to 460 -- before reload
;;   ======================================================

;;	  0--> 398  r214=cmp(r128,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
;;	  1--> 320  r130=0x0                           :iu1_6xx|iu2_6xx
;;	  5--> 460  pc=L321                            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 398
;;   new tail = 460

;;   ======================================================
;;   -- basic block 38 from 395 to 395 -- before reload
;;   ======================================================

;;	  0--> 395  r214=cmp(r128,0xffffffffffffffff)  :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 395
;;   new tail = 395

;;   ======================================================
;;   -- basic block 39 from 323 to 324 -- before reload
;;   ======================================================

;;	  0--> 323  %r3=r137                           :iu1_6xx|iu2_6xx
;;	  1--> 324  call [`closedir']                  :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 323
;;   new tail = 324

;;   ======================================================
;;   -- basic block 40 from 329 to 329 -- before reload
;;   ======================================================

;;	  0--> 329  pc={(r212==0x0)?L334:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 329
;;   new tail = 329

;;   ======================================================
;;   -- basic block 41 from 332 to 333 -- before reload
;;   ======================================================

;;	  0--> 332  r206=0x2f                          :iu1_6xx|iu2_6xx
;;	  1--> 333  [r136-0x1]=r206                    :lsu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 332
;;   new tail = 333

;;   ======================================================
;;   -- basic block 42 from 337 to 338 -- before reload
;;   ======================================================

;;	  0--> 337  r207=cmp(r135,0x0)                 :iu1_6xx|iu2_6xx
;;	  5--> 338  pc={(r207==0x0)?L343:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 337
;;   new tail = 338

;;   ======================================================
;;   -- basic block 43 from 341 to 342 -- before reload
;;   ======================================================

;;	  0--> 341  %r3=r135                           :iu1_6xx|iu2_6xx
;;	  1--> 342  call [`free']                      :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 341
;;   new tail = 342

;;   ======================================================
;;   -- basic block 44 from 348 to 348 -- before reload
;;   ======================================================

;;	  0--> 348  pc={(r214!=0x0)?L361:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 348
;;   new tail = 348

;;   ======================================================
;;   -- basic block 45 from 355 to 352 -- before reload
;;   ======================================================

;;	  0--> 351  r210=cmp(r130,0x0)                 :iu1_6xx|iu2_6xx
;;	  1--> 355  r128=0x0                           :iu1_6xx|iu2_6xx
;;	  5--> 352  pc={(r210!=0x0)?L361:pc}           :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 5
;;   new head = 351
;;   new tail = 352

;;   ======================================================
;;   -- basic block 46 from 360 to 360 -- before reload
;;   ======================================================

;;	  0--> 360  r128=0xffffffffffffffff            :iu1_6xx|iu2_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 0
;;   new head = 360
;;   new tail = 360

;;   ======================================================
;;   -- basic block 47 from 369 to 375 -- before reload
;;   ======================================================

;;	  0--> 369  %r3=r128                           :iu1_6xx|iu2_6xx
;;	  1--> 375  use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 369
;;   new tail = 375


;; Procedure interblock/speculative motions == 10/10 


(note:HI 2 0 9 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 155
(note:HI 9 2 7 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 7 9 14 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 14 7 6 0 NOTE_INSN_DELETED)

(insn:HI 6 14 5 0 (set (reg/v/f:SI 146 [ wildtail ])
        (reg:SI 4 %r4 [ wildtail ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ wildtail ])
        (nil)))

(insn:HI 5 6 12 0 (set (reg/v/f:SI 145 [ whole ])
        (reg:SI 3 %r3 [ whole ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ whole ])
        (nil)))

(insn:HI 12 5 13 0 (set (reg:SI 3 %r3 [ wildtail ])
        (reg/v/f:SI 146 [ wildtail ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 5 (insn_list:REG_DEP_TRUE 6 (nil)))
    (nil))

(call_insn:HI 13 12 15 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("isshexp") [flags 0x41] <function_decl 0x40288f68 isshexp>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 6 (insn_list:REG_DEP_TRUE 12 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ wildtail ]))
        (nil)))

(insn:HI 15 13 49 0 (set (reg:CC 147)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 49 15 50 0 (set (reg/v/f:SI 134 [ glue ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 50 49 16 0 (set (reg/v:SI 133 [ plug ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 16 50 18 0 (set (pc)
        (if_then_else (ne (reg:CC 147)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 5 (insn_list:REG_DEP_ANTI 6 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_ANTI 49 (insn_list:REG_DEP_ANTI 50 (insn_list:REG_DEP_TRUE 15 (insn_list:REG_DEP_ANTI 13 (nil))))))))
    (expr_list:REG_DEAD (reg:CC 147)
        (expr_list:REG_BR_PROB (const_int 9958 [0x26e6])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 133 134 145 146 155

;; Start of basic block 1, registers live: 1 [%r1] 31 [%r31] 67 [ap] 145 155
(note:HI 18 16 28 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(note:HI 28 18 20 1 NOTE_INSN_DELETED)

(insn:HI 20 28 22 1 (set (reg/f:SI 149)
        (high:SI (symbol_ref:SI ("IDOS") [flags 0x44] <var_decl 0x40372bc8 IDOS>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 22 20 25 1 (set (reg:SI 142 [ IDOS.1 ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 149)
                (symbol_ref:SI ("IDOS") [flags 0x44] <var_decl 0x40372bc8 IDOS>)) [201 IDOS+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 20 (nil))
    (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("IDOS") [flags 0x44] <var_decl 0x40372bc8 IDOS>) [201 IDOS+0 S4 A32])
        (nil)))

(insn:HI 25 22 24 1 (set (reg:SI 4 %r4 [ whole ])
        (reg/v/f:SI 145 [ whole ])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 24 25 23 1 (set (reg:SI 3 %r3 [ IDOS.1 ])
        (reg:SI 142 [ IDOS.1 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 22 (nil))
    (nil))

(insn:HI 23 24 26 1 (set (reg/f:SI 150 [ <variable>.Lock ])
        (mem/s/f:SI (plus:SI (reg:SI 142 [ IDOS.1 ])
                (const_int 112 [0x70])) [50 <variable>.Lock+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 22 (nil))
    (expr_list:REG_DEAD (reg:SI 142 [ IDOS.1 ])
        (nil)))

(insn:HI 26 23 27 1 (set (reg:SI 5 %r5)
        (const_int -2 [0xfffffffffffffffe])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 27 26 29 1 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (reg/f:SI 150 [ <variable>.Lock ]) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 268435456 [0x10000000]))
            (clobber (scratch:SI))
        ]) 359 {*call_value_indirect_nonlocal_sysv} (insn_list:REG_DEP_ANTI 22 (insn_list:REG_DEP_TRUE 26 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 24 (nil))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ whole ])
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_DEAD (reg/f:SI 150 [ <variable>.Lock ])
                (expr_list:REG_UNUSED (scratch:SI)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ whole ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ IDOS.1 ]))
                (nil)))))

(insn:HI 29 27 30 1 (parallel [
            (set (reg:CC 151)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 129 [ lok ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 27 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 30 29 32 1 (set (pc)
        (if_then_else (eq (reg:CC 151)
                (const_int 0 [0x0]))
            (label_ref 358)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 20 (insn_list:REG_DEP_ANTI 22 (insn_list:REG_DEP_ANTI 23 (insn_list:REG_DEP_ANTI 24 (insn_list:REG_DEP_ANTI 25 (insn_list:REG_DEP_ANTI 26 (insn_list:REG_DEP_TRUE 29 (insn_list:REG_DEP_ANTI 27 (nil)))))))))
    (expr_list:REG_DEAD (reg:CC 151)
        (expr_list:REG_BR_PROB (const_int 5347 [0x14e3])
            (nil))))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 129 145 149 155

;; Start of basic block 2, registers live: 1 [%r1] 31 [%r31] 67 [ap] 129 145 149 155
(note:HI 32 30 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn:HI 36 32 39 2 (set (reg:SI 125 [ IDOS.73 ])
        (mem/i:SI (lo_sum:SI (reg/f:SI 149)
                (symbol_ref:SI ("IDOS") [flags 0x44] <var_decl 0x40372bc8 IDOS>)) [201 IDOS+0 S4 A32])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (mem/i:SI (symbol_ref:SI ("IDOS") [flags 0x44] <var_decl 0x40372bc8 IDOS>) [201 IDOS+0 S4 A32])
            (nil))))

(insn:HI 39 36 38 2 (set (reg:SI 4 %r4 [ lok ])
        (reg/v:SI 129 [ lok ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 129 [ lok ])
        (nil)))

(insn:HI 38 39 37 2 (set (reg:SI 3 %r3 [ IDOS.73 ])
        (reg:SI 125 [ IDOS.73 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 36 (nil))
    (nil))

(insn:HI 37 38 40 2 (set (reg/f:SI 154 [ <variable>.UnLock ])
        (mem/s/f:SI (plus:SI (reg:SI 125 [ IDOS.73 ])
                (const_int 116 [0x74])) [57 <variable>.UnLock+0 S4 A32])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 36 (nil))
    (expr_list:REG_DEAD (reg:SI 125 [ IDOS.73 ])
        (nil)))

(call_insn:HI 40 37 42 2 (parallel [
            (call (mem:SI (reg/f:SI 154 [ <variable>.UnLock ]) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 268435456 [0x10000000]))
            (clobber (scratch:SI))
        ]) 357 {*call_indirect_nonlocal_sysv} (insn_list:REG_DEP_ANTI 36 (insn_list:REG_DEP_TRUE 37 (insn_list:REG_DEP_TRUE 38 (insn_list:REG_DEP_TRUE 39 (nil)))))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ IDOS.73 ])
        (expr_list:REG_DEAD (reg:SI 4 %r4 [ lok ])
            (expr_list:REG_DEAD (reg/f:SI 154 [ <variable>.UnLock ])
                (expr_list:REG_UNUSED (scratch:SI)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ lok ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ IDOS.73 ]))
            (nil))))

(insn:HI 42 40 43 2 (set (reg:SI 3 %r3 [ whole ])
        (reg/v/f:SI 145 [ whole ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 40 (nil))
    (expr_list:REG_DEAD (reg/v/f:SI 145 [ whole ])
        (nil)))

(insn:HI 43 42 44 2 (set (reg:SI 4 %r4)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 40 (insn_list:REG_DEP_OUTPUT 39 (nil)))
    (nil))

(call_insn/j:HI 44 43 45 2 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("procname") [flags 0x3] <function_decl 0x4028832c procname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (use (reg:SI 155))
            (return)
        ]) 363 {*sibcall_value_local32} (insn_list:REG_DEP_ANTI 36 (insn_list:REG_DEP_ANTI 37 (insn_list:REG_DEP_ANTI 38 (insn_list:REG_DEP_ANTI 39 (insn_list:REG_DEP_TRUE 43 (insn_list:REG_DEP_TRUE 42 (insn_list:REG_DEP_ANTI 40 (nil))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 155)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ whole ]))
            (nil))))
;; End of basic block 2, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(barrier:HI 45 44 383)

(note:HI 383 45 51 NOTE_INSN_LOOP_BEG)

;; Start of basic block 3, registers live: 1 [%r1] 31 [%r31] 67 [ap] 133 134 145 146
(code_label:HI 51 383 52 3 141 "" [2 uses])

(note:HI 52 51 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 56 52 59 3 NOTE_INSN_DELETED)

(note:HI 59 56 54 3 NOTE_INSN_DELETED)

(insn:HI 54 59 55 3 (set (reg:SI 3 %r3 [ wildtail ])
        (reg/v/f:SI 146 [ wildtail ])) 268 {*movsi_internal1} (nil)
    (insn_list:REG_LIBCALL 55 (nil)))

(call_insn/u:HI 55 54 58 3 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 54 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 54 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ wildtail ]))
            (nil))))

(insn:HI 58 55 421 3 (set (reg:SI 158)
        (plus:SI (reg/v/f:SI 146 [ wildtail ])
            (reg:SI 3 %r3))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 55 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 421 58 427 3 (set (reg:SI 126 [ ivtmp.72 ])
        (plus:SI (reg:SI 158)
            (const_int -1 [0xffffffffffffffff]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 58 (insn_list:REG_DEP_ANTI 55 (nil)))
    (nil))

(insn:HI 427 421 422 3 (set (reg:CCUNS 226)
        (compare:CCUNS (reg/v/f:SI 146 [ wildtail ])
            (reg:SI 126 [ ivtmp.72 ]))) 370 {*cmpsi_internal2} (insn_list:REG_DEP_TRUE 421 (insn_list:REG_DEP_ANTI 55 (nil)))
    (nil))

(insn:HI 422 427 428 3 (set (reg:SI 223)
        (minus:SI (reg:SI 158)
            (reg/v/f:SI 146 [ wildtail ]))) 43 {*rs6000.md:1174} (insn_list:REG_DEP_TRUE 58 (insn_list:REG_DEP_ANTI 55 (nil)))
    (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn:HI 428 422 429 3 (set (pc)
        (if_then_else (gtu (reg:CCUNS 226)
                (const_int 0 [0x0]))
            (label_ref 426)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 54 (insn_list:REG_DEP_ANTI 58 (insn_list:REG_DEP_ANTI 421 (insn_list:REG_DEP_ANTI 422 (insn_list:REG_DEP_TRUE 427 (insn_list:REG_DEP_ANTI 55 (nil)))))))
    (expr_list:REG_DEAD (reg:CCUNS 226)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 3, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 126 133 134 145 146 223

;; Start of basic block 4, registers live: 1 [%r1] 31 [%r31] 67 [ap] 126 133 134 145 146 223
(note:HI 429 428 431 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 431 429 432 4 (set (reg:CC 228)
        (compare:CC (reg/v/f:SI 146 [ wildtail ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 432 431 426 4 (set (pc)
        (if_then_else (ne (reg:CC 228)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 431 (nil))
    (expr_list:REG_DEAD (reg:CC 228)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 4, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 126 133 134 145 146 223

;; Start of basic block 5, registers live: 1 [%r1] 31 [%r31] 67 [ap] 126 133 134 145 146
(code_label:HI 426 432 423 5 190 "" [1 uses])

(note:HI 423 426 433 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:HI 433 423 381 5 (set (reg:SI 223)
        (const_int 1 [0x1])) 268 {*movsi_internal1} (nil)
    (nil))
;; End of basic block 5, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 126 133 134 145 146 223

(note:HI 381 433 60 NOTE_INSN_LOOP_BEG)

;; Start of basic block 6, registers live: 1 [%r1] 31 [%r31] 67 [ap] 126 133 134 145 146 223
(code_label:HI 60 381 61 6 142 "" [2 uses])

(note:HI 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:HI 62 61 68 6 (set (reg/v/f:SI 124 [ name.74 ])
        (reg:SI 126 [ ivtmp.72 ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg:SI 126 [ ivtmp.72 ])
        (nil)))

(insn:HI 68 62 64 6 (set (reg:SI 126 [ ivtmp.72 ])
        (plus:SI (reg/v/f:SI 124 [ name.74 ])
            (const_int -1 [0xffffffffffffffff]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))

(insn:HI 64 68 420 6 (set (reg:CCUNS 159)
        (compare:CCUNS (reg/v/f:SI 146 [ wildtail ])
            (reg/v/f:SI 124 [ name.74 ]))) 370 {*cmpsi_internal2} (insn_list:REG_DEP_TRUE 62 (nil))
    (nil))

(jump_insn:HI 420 64 67 6 (parallel [
            (set (pc)
                (if_then_else (eq (reg:SI 223)
                        (const_int 1 [0x1]))
                    (label_ref 73)
                    (pc)))
            (set (reg:SI 223)
                (plus:SI (reg:SI 223)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (scratch:CC))
            (clobber (scratch:SI))
        ]) 471 {*ctrsi_internal5} (insn_list:REG_DEP_ANTI 62 (insn_list:REG_DEP_ANTI 64 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_UNUSED (scratch:CC)
            (nil))))
;; End of basic block 6, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 126 133 134 145 146 159 223

;; Start of basic block 7, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 126 133 134 145 146 159 223
(note:HI 67 420 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note:HI 69 67 70 7 NOTE_INSN_DELETED)

(insn:HI 70 69 71 7 (set (reg:SI 161)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 124 [ name.74 ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 18 {*rs6000.md:513} (insn_list:REG_DEP_TRUE 62 (insn_list:REG_DEP_ANTI 420 (nil)))
    (nil))

(insn:HI 71 70 72 7 (set (reg:CC 162)
        (compare:CC (reg:SI 161)
            (const_int 47 [0x2f]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 70 (nil))
    (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn:HI 72 71 382 7 (set (pc)
        (if_then_else (ne (reg:CC 162)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 68 (insn_list:REG_DEP_ANTI 70 (insn_list:REG_DEP_TRUE 71 (insn_list:REG_DEP_ANTI 420 (nil)))))
    (expr_list:REG_DEAD (reg:CC 162)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 7, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 126 133 134 145 146 159 223

(note:HI 382 72 73 NOTE_INSN_LOOP_END)

;; Start of basic block 8, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 133 134 145 146 159
(code_label:HI 73 382 74 8 143 "" [1 uses])

(note:HI 74 73 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note:HI 76 74 82 8 NOTE_INSN_DELETED)

(insn:HI 82 76 79 8 (set (reg:CC 165)
        (compare:CC (reg/v/f:SI 134 [ glue ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(insn:HI 79 82 77 8 (set (reg:QI 164)
        (const_int 0 [0x0])) 271 {*movqi_internal} (nil)
    (nil))

(insn:HI 77 79 80 8 (set (reg/v:SI 132 [ plug2 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 124 [ name.74 ]) [0 S1 A8]))) 18 {*rs6000.md:513} (nil)
    (nil))

(insn:HI 80 77 83 8 (set (mem:QI (reg/v/f:SI 124 [ name.74 ]) [0 S1 A8])
        (reg:QI 164)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 79 (insn_list:REG_DEP_ANTI 77 (nil)))
    (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn:HI 83 80 85 8 (set (pc)
        (if_then_else (eq (reg:CC 165)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 77 (insn_list:REG_DEP_ANTI 79 (insn_list:REG_DEP_TRUE 82 (insn_list:REG_DEP_ANTI 80 (nil)))))
    (expr_list:REG_DEAD (reg:CC 165)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 8, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 132 133 134 145 146 159 164

;; Start of basic block 9, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 133 134 145 146 159 164
(note:HI 85 83 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:HI 87 85 88 9 (set (mem:QI (reg/v/f:SI 134 [ glue ]) [0 S1 A8])
        (subreg/s/u:QI (reg/v:SI 133 [ plug ]) 3)) 271 {*movqi_internal} (nil)
    (expr_list:REG_DEAD (reg/v:SI 133 [ plug ])
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ glue ])
            (nil))))
;; End of basic block 9, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 132 145 146 159 164

;; Start of basic block 10, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 145 146 159 164
(code_label:HI 88 87 89 10 145 "" [1 uses])

(note:HI 89 88 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note:HI 93 89 91 10 NOTE_INSN_DELETED)

(insn:HI 91 93 92 10 (set (reg:SI 3 %r3 [ whole ])
        (reg/v/f:SI 145 [ whole ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 92 91 95 10 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("opendir") [flags 0x41] <function_decl 0x4025bbc8 opendir>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 91 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ whole ]))
        (nil)))

(insn:HI 95 92 96 10 (parallel [
            (set (reg:CC 213)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 137 [ dir ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 92 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 96 95 98 10 (set (pc)
        (if_then_else (ne (reg:CC 213)
                (const_int 0 [0x0]))
            (label_ref/s 106)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 91 (insn_list:REG_DEP_TRUE 95 (insn_list:REG_DEP_ANTI 92 (nil))))
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 10, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 132 137 145 146 159 164 213

;; Start of basic block 11, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 137 145 146 159 164 213
(note:HI 98 96 99 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:HI 99 98 100 11 (set (reg/v:SI 133 [ plug ])
        (reg/v:SI 132 [ plug2 ])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 100 99 102 11 (set (reg/v/f:SI 134 [ glue ])
        (reg/v/f:SI 124 [ name.74 ])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 102 100 384 11 (set (pc)
        (if_then_else (ltu (reg:CCUNS 159)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 99 (insn_list:REG_DEP_ANTI 100 (nil)))
    (expr_list:REG_DEAD (reg:CCUNS 159)
        (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
            (nil))))
;; End of basic block 11, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 132 133 134 137 145 146 164 213

(note:HI 384 102 106 NOTE_INSN_LOOP_END)

;; Start of basic block 12, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 137 145 164 213
(code_label:HI 106 384 107 12 147 "" [1 uses])

(note:HI 107 106 109 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note:HI 109 107 113 12 NOTE_INSN_DELETED)

(note:HI 113 109 110 12 NOTE_INSN_DELETED)

(insn:HI 110 113 111 12 (set (reg:SI 3 %r3)
        (plus:SI (reg/v/f:SI 124 [ name.74 ])
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (nil)
    (insn_list:REG_LIBCALL 112 (nil)))

(insn:HI 111 110 112 12 (set (reg:SI 4 %r4)
        (const_int 47 [0x2f])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 112 111 116 12 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x401f02b8 strchr>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 111 (insn_list:REG_DEP_TRUE 110 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 110 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3))
                (nil)))))

(insn:HI 116 112 117 12 (parallel [
            (set (reg:CC 212)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 136 [ subwild ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 112 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 117 116 119 12 (set (pc)
        (if_then_else (eq (reg:CC 212)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 110 (insn_list:REG_DEP_ANTI 111 (insn_list:REG_DEP_TRUE 116 (insn_list:REG_DEP_ANTI 112 (nil)))))
    (expr_list:REG_BR_PROB (const_int 1899 [0x76b])
        (nil)))
;; End of basic block 12, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 132 136 137 145 164 212 213

;; Start of basic block 13, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 136 137 145 164 213
(note:HI 119 117 131 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note:HI 131 119 122 13 NOTE_INSN_DELETED)

(insn:HI 122 131 123 13 (set (mem:QI (reg/v/f:SI 136 [ subwild ]) [0 S1 A8])
        (reg:QI 164)) 271 {*movqi_internal} (nil)
    (expr_list:REG_DEAD (reg:QI 164)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:HI 123 122 125 13 (set (reg/v/f:SI 136 [ subwild ])
        (plus:SI (reg/v/f:SI 136 [ subwild ])
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_ANTI 122 (nil))
    (nil))

(insn:HI 125 123 126 13 (set (reg:SI 3 %r3 [ whole ])
        (reg/v/f:SI 145 [ whole ])) 268 {*movsi_internal1} (nil)
    (insn_list:REG_LIBCALL 127 (nil)))

(call_insn/u:HI 126 125 127 13 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 123 (insn_list:REG_DEP_TRUE 125 (insn_list:REG_DEP_TRUE 122 (nil))))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ whole ]))
            (nil))))

(insn:HI 127 126 129 13 (set (reg:SI 173)
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 126 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (insn_list:REG_RETVAL 125 (expr_list:REG_EQUAL (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
                    (expr_list:REG_DEP_TRUE (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>)
                        (expr_list:REG_DEP_TRUE (reg/v/f:SI 145 [ whole ])
                            (nil))))
                (nil)))))

(insn:HI 129 127 393 13 (set (reg:SI 3 %r3 [ subwild ])
        (reg/v/f:SI 136 [ subwild ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 127 (nil))
    (insn_list:REG_LIBCALL 130 (nil)))

(insn:HI 393 129 130 13 (set (reg:CC 212)
        (compare:CC (reg/v/f:SI 136 [ subwild ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 123 (nil))
    (nil))

(call_insn/u:HI 130 393 135 13 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 129 (insn_list:REG_DEP_ANTI 126 (nil)))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 129 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ subwild ]))
            (nil))))

(insn:HI 135 130 137 13 (set (reg:SI 179)
        (plus:SI (reg:SI 173)
            (reg:SI 3 %r3))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 127 (insn_list:REG_DEP_TRUE 130 (nil)))
    (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg:SI 3 %r3)
            (nil))))

(insn:HI 137 135 138 13 (set (reg:SI 181)
        (plus:SI (reg:SI 179)
            (const_int 32 [0x20]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 135 (insn_list:REG_DEP_ANTI 130 (nil)))
    (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn:HI 138 137 439 13 (set (reg/v:SI 131 [ newlen ])
        (zero_extend:SI (subreg:HI (reg:SI 181) 2))) 30 {*rs6000.md:847} (insn_list:REG_DEP_TRUE 137 (insn_list:REG_DEP_ANTI 130 (nil)))
    (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn:HI 439 138 440 13 (set (pc)
        (label_ref 151)) 460 {jump} (insn_list:REG_DEP_TRUE 137 (insn_list:REG_DEP_TRUE 127 (insn_list:REG_DEP_ANTI 122 (insn_list:REG_DEP_ANTI 125 (insn_list:REG_DEP_TRUE 123 (insn_list:REG_DEP_ANTI 129 (insn_list:REG_DEP_TRUE 393 (insn_list:REG_DEP_TRUE 138 (insn_list:REG_DEP_TRUE 135 (insn_list:REG_DEP_TRUE 126 (insn_list:REG_DEP_TRUE 130 (nil))))))))))))
    (nil))
;; End of basic block 13, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 131 132 136 137 145 212 213

(barrier:HI 440 439 141)

;; Start of basic block 14, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 136 137 145 212 213
(code_label:HI 141 440 142 14 150 "" [1 uses])

(note:HI 142 141 146 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note:HI 146 142 144 14 NOTE_INSN_DELETED)

(insn:HI 144 146 145 14 (set (reg:SI 3 %r3 [ whole ])
        (reg/v/f:SI 145 [ whole ])) 268 {*movsi_internal1} (nil)
    (insn_list:REG_LIBCALL 145 (nil)))

(call_insn/u:HI 145 144 149 14 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 144 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 144 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ whole ]))
            (nil))))

(insn:HI 149 145 150 14 (set (reg:SI 185)
        (plus:SI (reg:SI 3 %r3)
            (const_int 31 [0x1f]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 145 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 150 149 151 14 (set (reg/v:SI 131 [ newlen ])
        (zero_extend:SI (subreg:HI (reg:SI 185) 2))) 30 {*rs6000.md:847} (insn_list:REG_DEP_TRUE 149 (insn_list:REG_DEP_ANTI 145 (nil)))
    (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
;; End of basic block 14, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 131 132 136 137 145 212 213

;; Start of basic block 15, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 131 132 136 137 145 212 213
(code_label:HI 151 150 152 15 152 "" [1 uses])

(note:HI 152 151 155 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 155 152 157 15 (set (pc)
        (if_then_else (ne (reg:CC 213)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 452 {*rs6000.md:13839} (nil)
    (expr_list:REG_BR_PROB (const_int 6463 [0x193f])
        (nil)))
;; End of basic block 15, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 131 132 136 137 145 212 213

;; Start of basic block 16, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 136 137 212 213
(note:HI 157 155 158 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:HI 158 157 441 16 (set (reg/v/f:SI 135 [ newwhole ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 441 158 442 16 (set (pc)
        (label_ref 170)) 460 {jump} (insn_list:REG_DEP_TRUE 158 (nil))
    (nil))
;; End of basic block 16, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 132 135 136 137 212 213

(barrier:HI 442 441 161)

;; Start of basic block 17, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 131 132 136 137 145 212 213
(code_label:HI 161 442 162 17 153 "" [1 uses])

(note:HI 162 161 165 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note:HI 165 162 163 17 NOTE_INSN_DELETED)

(insn:HI 163 165 164 17 (set (reg:SI 3 %r3 [ newlen ])
        (reg/v:SI 131 [ newlen ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 131 [ newlen ])
        (nil)))

(call_insn:HI 164 163 168 17 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("malloc") [flags 0x41] <function_decl 0x40203074 malloc>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 163 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newlen ]))
        (nil)))

(insn:HI 168 164 169 17 (parallel [
            (set (reg:CC 188)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 135 [ newwhole ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 164 (nil))
    (nil))

(jump_insn:HI 169 168 170 17 (set (pc)
        (if_then_else (ne (reg:CC 188)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 163 (insn_list:REG_DEP_TRUE 168 (insn_list:REG_DEP_ANTI 164 (nil))))
    (expr_list:REG_DEAD (reg:CC 188)
        (expr_list:REG_BR_PROB (const_int 6463 [0x193f])
            (nil))))
;; End of basic block 17, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 124 132 135 136 137 145 212 213

;; Start of basic block 18, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 132 135 136 137 212 213
(code_label:HI 170 169 171 18 155 "" [1 uses])

(note:HI 171 170 173 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:HI 173 171 176 18 (set (mem:QI (reg/v/f:SI 124 [ name.74 ]) [0 S1 A8])
        (subreg/s/u:QI (reg/v:SI 132 [ plug2 ]) 3)) 271 {*movqi_internal} (nil)
    (expr_list:REG_DEAD (reg/v:SI 132 [ plug2 ])
        (expr_list:REG_DEAD (reg/v/f:SI 124 [ name.74 ])
            (nil))))

(jump_insn:HI 176 173 178 18 (set (pc)
        (if_then_else (eq (reg:CC 213)
                (const_int 0 [0x0]))
            (label_ref 182)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 173 (nil))
    (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
        (nil)))
;; End of basic block 18, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 135 136 137 212 213

;; Start of basic block 19, registers live: 1 [%r1] 31 [%r31] 67 [ap] 135 136 137 212 213
(note:HI 178 176 179 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:HI 179 178 443 19 (set (reg/v:SI 128 [ e ])
        (const_int 4 [0x4])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 443 179 444 19 (set (pc)
        (label_ref 308)) 460 {jump} (insn_list:REG_DEP_TRUE 179 (nil))
    (nil))
;; End of basic block 19, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 135 136 137 212 213

(barrier:HI 444 443 182)

;; Start of basic block 20, registers live: 1 [%r1] 31 [%r31] 67 [ap] 135 136 137 212 213
(code_label:HI 182 444 183 20 157 "" [1 uses])

(note:HI 183 182 184 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:HI 184 183 445 20 (set (reg/v:SI 128 [ e ])
        (const_int -1 [0xffffffffffffffff])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 445 184 446 20 (set (pc)
        (label_ref 308)) 460 {jump} (insn_list:REG_DEP_TRUE 184 (nil))
    (nil))
;; End of basic block 20, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 135 136 137 212 213

(barrier:HI 446 445 187)

;; Start of basic block 21, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 124 132 135 136 137 145 212
(code_label:HI 187 446 188 21 156 "" [1 uses])

(note:HI 188 187 196 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note:HI 196 188 204 21 NOTE_INSN_DELETED)

(note:HI 204 196 191 21 NOTE_INSN_DELETED)

(insn:HI 191 204 192 21 (set (reg:SI 4 %r4 [ whole ])
        (reg/v/f:SI 145 [ whole ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 145 [ whole ])
        (nil)))

(call_insn:HI 192 191 194 21 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 191 (nil))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ whole ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ whole ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newwhole ]))
            (nil))))

(insn:HI 194 192 195 21 (set (reg:SI 3 %r3 [ newwhole ])
        (reg/v/f:SI 135 [ newwhole ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 192 (nil))
    (insn_list:REG_LIBCALL 195 (nil)))

(call_insn/u:HI 195 194 200 21 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_OUTPUT 191 (insn_list:REG_DEP_TRUE 194 (insn_list:REG_DEP_ANTI 192 (nil))))
    (expr_list:REG_UNUSED (scratch:SI)
        (insn_list:REG_RETVAL 194 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newwhole ]))
            (nil))))

(insn:HI 200 195 198 21 (set (mem:QI (reg/v/f:SI 124 [ name.74 ]) [0 S1 A8])
        (subreg/s/u:QI (reg/v:SI 132 [ plug2 ]) 3)) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 195 (nil))
    (expr_list:REG_DEAD (reg/v:SI 132 [ plug2 ])
        (nil)))

(insn:HI 198 200 202 21 (set (reg/v:SI 120 [ newlen.78 ])
        (zero_extend:SI (reg:HI 3 %r3 [+4 ]))) 30 {*rs6000.md:847} (insn_list:REG_DEP_TRUE 195 (nil))
    (expr_list:REG_DEAD (reg:HI 3 %r3 [+4 ])
        (nil)))

(insn:HI 202 198 203 21 (set (reg:SI 3 %r3 [ name.74 ])
        (reg/v/f:SI 124 [ name.74 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 198 (insn_list:REG_DEP_OUTPUT 195 (nil)))
    (nil))

(call_insn:HI 203 202 205 21 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("isshexp") [flags 0x41] <function_decl 0x40288f68 isshexp>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 192 (insn_list:REG_DEP_OUTPUT 191 (insn_list:REG_DEP_TRUE 202 (insn_list:REG_DEP_ANTI 195 (insn_list:REG_DEP_TRUE 200 (nil))))))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name.74 ]))
        (nil)))

(insn:HI 205 203 206 21 (set (reg:CC 192)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 203 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 206 205 208 21 (set (pc)
        (if_then_else (ne (reg:CC 192)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 191 (insn_list:REG_DEP_ANTI 192 (insn_list:REG_DEP_ANTI 194 (insn_list:REG_DEP_ANTI 195 (insn_list:REG_DEP_ANTI 198 (insn_list:REG_DEP_ANTI 200 (insn_list:REG_DEP_ANTI 202 (insn_list:REG_DEP_TRUE 205 (insn_list:REG_DEP_ANTI 203 (nil))))))))))
    (expr_list:REG_DEAD (reg:CC 192)
        (expr_list:REG_BR_PROB (const_int 8100 [0x1fa4])
            (nil))))
;; End of basic block 21, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 120 124 135 136 137 212

;; Start of basic block 22, registers live: 1 [%r1] 31 [%r31] 67 [ap] 135 136 137 212
(note:HI 208 206 210 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:HI 210 208 394 22 (set (reg/v:SI 128 [ e ])
        (const_int -1 [0xffffffffffffffff])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 394 210 209 22 (set (reg:CC 214)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 210 (nil))
    (expr_list:REG_EQUAL (compare:CC (const_int -1 [0xffffffffffffffff])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn:HI 209 394 447 22 (set (reg/v:SI 130 [ amatch ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 447 209 448 22 (set (pc)
        (label_ref 321)) 460 {jump} (insn_list:REG_DEP_TRUE 209 (insn_list:REG_DEP_TRUE 210 (insn_list:REG_DEP_TRUE 394 (nil))))
    (nil))
;; End of basic block 22, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212 214

(barrier:HI 448 447 213)

;; Start of basic block 23, registers live: 1 [%r1] 31 [%r31] 67 [ap] 120 124 135 136 137 212
(code_label:HI 213 448 214 23 160 "" [1 uses])

(note:HI 214 213 406 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:HI 406 214 215 23 (set (reg:SI 215)
        (plus:SI (reg/v/f:SI 135 [ newwhole ])
            (reg/v:SI 120 [ newlen.78 ]))) 36 {*addsi3_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 120 [ newlen.78 ])
        (nil)))

(insn:HI 215 406 216 23 (set (reg/v:SI 130 [ amatch ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 216 215 408 23 (set (reg/v:SI 128 [ e ])
        (const_int -1 [0xffffffffffffffff])) 268 {*movsi_internal1} (nil)
    (nil))

(insn:HI 408 216 409 23 (set (reg:QI 197)
        (const_int 47 [0x2f])) 271 {*movqi_internal} (nil)
    (nil))

(insn:HI 409 408 468 23 (set (reg:QI 198)
        (const_int 0 [0x0])) 271 {*movqi_internal} (nil)
    (nil))

(note 468 409 450 23 NOTE_INSN_LOOP_BEG)

(jump_insn:HI 450 468 451 23 (set (pc)
        (label_ref 465)) 460 {jump} (insn_list:REG_DEP_TRUE 409 (insn_list:REG_DEP_TRUE 408 (insn_list:REG_DEP_TRUE 215 (insn_list:REG_DEP_TRUE 216 (insn_list:REG_DEP_TRUE 406 (nil))))))
    (nil))
;; End of basic block 23, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215

(barrier:HI 451 450 219)

;; Start of basic block 24, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 5 [%r5] 31 [%r31] 67 [ap] 121 124 128 130 135 136 137 197 198 212 215
(code_label:HI 219 451 220 24 164 "" [1 uses])

(note:HI 220 219 226 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note:HI 226 220 225 24 NOTE_INSN_DELETED)

(call_insn:HI 225 226 227 24 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("shmatch") [flags 0x41] <function_decl 0x402891d0 shmatch>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 224 (insn_list:REG_DEP_TRUE 223 (insn_list:REG_DEP_TRUE 222 (insn_list:REG_DEP_ANTI 293 (insn_list:REG_DEP_ANTI 303 (insn_list:REG_DEP_ANTI 302 (insn_list:REG_DEP_ANTI 297 (nil))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ name.77 ])
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ name.77 ]))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name.74 ]))
                (nil)))))

(insn:HI 227 225 234 24 (set (reg:CC 193)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 225 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 234 227 233 24 (set (reg:SI 4 %r4 [ name.77 ])
        (reg/v/f:SI 121 [ name.77 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 225 (insn_list:REG_DEP_OUTPUT 223 (insn_list:REG_DEP_TRUE 302 (nil))))
    (expr_list:REG_DEAD (reg/v/f:SI 121 [ name.77 ])
        (nil)))

(insn:HI 233 234 228 24 (set (reg:SI 3 %r3 [ D.5145 ])
        (reg:SI 215)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 227 (insn_list:REG_DEP_OUTPUT 225 (nil)))
    (nil))

(jump_insn:HI 228 233 230 24 (set (pc)
        (if_then_else (eq (reg:CC 193)
                (const_int 0 [0x0]))
            (label_ref 465)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 222 (insn_list:REG_DEP_ANTI 223 (insn_list:REG_DEP_ANTI 224 (insn_list:REG_DEP_TRUE 227 (insn_list:REG_DEP_ANTI 225 (nil))))))
    (expr_list:REG_DEAD (reg:CC 193)
        (expr_list:REG_BR_PROB (const_int 7000 [0x1b58])
            (nil))))
;; End of basic block 24, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215

;; Start of basic block 25, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 124 130 135 136 137 197 198 212 215
(note:HI 230 228 235 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(call_insn:HI 235 230 242 25 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_OUTPUT 224 (insn_list:REG_DEP_TRUE 234 (insn_list:REG_DEP_TRUE 233 (insn_list:REG_DEP_ANTI 225 (insn_list:REG_DEP_ANTI 228 (nil))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ name.77 ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ name.77 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ D.5145 ]))
            (nil))))

(insn:HI 242 235 266 25 (set (reg:SI 3 %r3 [ newwhole ])
        (reg/v/f:SI 135 [ newwhole ])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 235 (nil))
    (insn_list:REG_LIBCALL 244 (nil)))

(insn:HI 266 242 238 25 (set (reg:SI 4 %r4)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 235 (insn_list:REG_DEP_OUTPUT 234 (nil)))
    (nil))

(jump_insn:HI 238 266 240 25 (set (pc)
        (if_then_else (eq (reg:CC 212)
                (const_int 0 [0x0]))
            (label_ref 262)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 235 (nil))
    (expr_list:REG_BR_PROB (const_int 1899 [0x76b])
        (nil)))
;; End of basic block 25, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 124 130 135 136 137 197 198 212 215

;; Start of basic block 26, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 124 130 135 136 137 197 198 212 215
(note:HI 240 238 243 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(call_insn/u:HI 243 240 244 26 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 225 (insn_list:REG_DEP_OUTPUT 224 (insn_list:REG_DEP_OUTPUT 234 (insn_list:REG_DEP_TRUE 242 (insn_list:REG_DEP_ANTI 238 (insn_list:REG_DEP_ANTI 235 (nil)))))))
    (expr_list:REG_UNUSED (scratch:SI)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newwhole ]))
            (nil))))

(insn:HI 244 243 246 26 (set (reg:SI 195)
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 243 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (insn_list:REG_RETVAL 242 (expr_list:REG_EQUAL (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
                    (expr_list:REG_DEP_TRUE (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x401f0e80 strlen>)
                        (expr_list:REG_DEP_TRUE (reg/v/f:SI 135 [ newwhole ])
                            (nil))))
                (nil)))))

(insn:HI 246 244 250 26 (set (reg/v/f:SI 123 [ name.75 ])
        (plus:SI (reg/v/f:SI 135 [ newwhole ])
            (reg:SI 195))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 244 (insn_list:REG_DEP_ANTI 243 (nil)))
    (nil))

(insn:HI 250 246 249 26 (set (reg/v/f:SI 122 [ name.76 ])
        (plus:SI (reg/v/f:SI 123 [ name.75 ])
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_TRUE 246 (nil))
    (expr_list:REG_DEAD (reg/v/f:SI 123 [ name.75 ])
        (nil)))

(insn:HI 249 250 252 26 (set (mem:QI (plus:SI (reg/v/f:SI 135 [ newwhole ])
                (reg:SI 195)) [0 S1 A8])
        (reg:QI 197)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 244 (insn_list:REG_DEP_ANTI 243 (nil)))
    (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_EQUAL (const_int 47 [0x2f])
            (nil))))

(insn:HI 252 249 253 26 (set (reg:SI 3 %r3 [ name.76 ])
        (reg/v/f:SI 122 [ name.76 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 244 (insn_list:REG_DEP_OUTPUT 243 (insn_list:REG_DEP_TRUE 250 (nil))))
    (nil))

(insn:HI 253 252 254 26 (set (reg:SI 4 %r4 [ subwild ])
        (reg/v/f:SI 136 [ subwild ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 235 (insn_list:REG_DEP_OUTPUT 243 (insn_list:REG_DEP_OUTPUT 234 (nil))))
    (nil))

(call_insn:HI 254 253 256 26 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x401f07b4 strcpy>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 225 (insn_list:REG_DEP_OUTPUT 224 (insn_list:REG_DEP_TRUE 253 (insn_list:REG_DEP_TRUE 252 (insn_list:REG_DEP_ANTI 243 (insn_list:REG_DEP_ANTI 246 (insn_list:REG_DEP_TRUE 249 (insn_list:REG_DEP_TRUE 250 (nil)))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ subwild ])
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_UNUSED (reg:SI 3 %r3)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ subwild ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ name.76 ]))
            (nil))))

(insn:HI 256 254 257 26 (set (reg:SI 3 %r3 [ newwhole ])
        (reg/v/f:SI 135 [ newwhole ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 254 (nil))
    (nil))

(insn:HI 257 256 258 26 (set (reg:SI 4 %r4 [ name.76 ])
        (reg/v/f:SI 122 [ name.76 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 256 (nil))
    (expr_list:REG_DEAD (reg/v/f:SI 122 [ name.76 ])
        (nil)))

(call_insn:HI 258 257 259 26 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("wild_recurse") [flags 0x3] <function_decl 0x403b6d98 wild_recurse>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 355 {*call_value_local32} (insn_list:REG_DEP_ANTI 225 (insn_list:REG_DEP_OUTPUT 224 (insn_list:REG_DEP_TRUE 257 (insn_list:REG_DEP_TRUE 256 (insn_list:REG_DEP_ANTI 254 (nil))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ name.76 ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ name.76 ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newwhole ]))
            (nil))))

(insn:HI 259 258 452 26 (set (reg/v:SI 128 [ e ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 258 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 452 259 453 26 (set (pc)
        (label_ref 269)) 460 {jump} (insn_list:REG_DEP_ANTI 233 (insn_list:REG_DEP_ANTI 238 (insn_list:REG_DEP_ANTI 303 (insn_list:REG_DEP_ANTI 297 (insn_list:REG_DEP_TRUE 244 (insn_list:REG_DEP_TRUE 227 (insn_list:REG_DEP_ANTI 228 (insn_list:REG_DEP_ANTI 292 (insn_list:REG_DEP_ANTI 253 (insn_list:REG_DEP_ANTI 242 (insn_list:REG_DEP_ANTI 249 (insn_list:REG_DEP_ANTI 256 (insn_list:REG_DEP_TRUE 296 (insn_list:REG_DEP_ANTI 222 (insn_list:REG_DEP_TRUE 246 (insn_list:REG_DEP_TRUE 250 (insn_list:REG_DEP_ANTI 252 (insn_list:REG_DEP_TRUE 302 (insn_list:REG_DEP_ANTI 234 (insn_list:REG_DEP_ANTI 223 (insn_list:REG_DEP_TRUE 224 (insn_list:REG_DEP_TRUE 257 (insn_list:REG_DEP_TRUE 259 (insn_list:REG_DEP_TRUE 235 (insn_list:REG_DEP_TRUE 293 (insn_list:REG_DEP_TRUE 225 (insn_list:REG_DEP_TRUE 243 (insn_list:REG_DEP_TRUE 254 (insn_list:REG_DEP_TRUE 258 (nil))))))))))))))))))))))))))))))
    (nil))
;; End of basic block 26, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215

(barrier:HI 453 452 262)

;; Start of basic block 27, registers live: 1 [%r1] 4 [%r4] 31 [%r31] 67 [ap] 124 130 135 136 137 197 198 212 215
(code_label:HI 262 453 263 27 166 "" [1 uses])

(note:HI 263 262 265 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:HI 265 263 267 27 (set (reg:SI 3 %r3 [ newwhole ])
        (reg/v/f:SI 135 [ newwhole ])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 235 (nil))
    (nil))

(call_insn:HI 267 265 268 27 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("procname") [flags 0x3] <function_decl 0x4028832c procname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 355 {*call_value_local32} (insn_list:REG_DEP_ANTI 238 (insn_list:REG_DEP_ANTI 225 (insn_list:REG_DEP_OUTPUT 224 (insn_list:REG_DEP_TRUE 266 (insn_list:REG_DEP_TRUE 265 (insn_list:REG_DEP_ANTI 235 (nil)))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newwhole ]))
            (nil))))

(insn:HI 268 267 269 27 (set (reg/v:SI 128 [ e ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 267 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))
;; End of basic block 27, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215

;; Start of basic block 28, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215
(code_label:HI 269 268 270 28 168 "" [1 uses])

(note:HI 270 269 286 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:HI 286 270 275 28 (set (reg:CC 214)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 452 (insn_list:REG_DEP_TRUE 268 (nil)))
    (nil))

(insn:HI 275 286 273 28 (set (reg:CC 199)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 268 (insn_list:REG_DEP_TRUE 452 (insn_list:REG_DEP_ANTI 267 (insn_list:REG_DEP_ANTI 258 (nil)))))
    (nil))

(insn:HI 273 275 276 28 (set (mem:QI (reg:SI 215) [0 S1 A8])
        (reg:QI 198)) 271 {*movqi_internal} (insn_list:REG_DEP_ANTI 267 (insn_list:REG_DEP_TRUE 452 (nil)))
    (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn:HI 276 273 278 28 (set (pc)
        (if_then_else (ne (reg:CC 199)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 275 (insn_list:REG_DEP_ANTI 267 (insn_list:REG_DEP_ANTI 452 (insn_list:REG_DEP_ANTI 273 (nil)))))
    (expr_list:REG_DEAD (reg:CC 199)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 214 215

;; Start of basic block 29, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 128 135 136 137 197 198 212 215
(note:HI 278 276 279 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:HI 279 278 454 29 (set (reg/v:SI 130 [ amatch ])
        (const_int 1 [0x1])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 452 (nil))
    (nil))

(jump_insn:HI 454 279 455 29 (set (pc)
        (label_ref 465)) 460 {jump} (insn_list:REG_DEP_ANTI 233 (insn_list:REG_DEP_ANTI 238 (insn_list:REG_DEP_ANTI 303 (insn_list:REG_DEP_ANTI 297 (insn_list:REG_DEP_ANTI 276 (insn_list:REG_DEP_ANTI 273 (insn_list:REG_DEP_TRUE 227 (insn_list:REG_DEP_ANTI 228 (insn_list:REG_DEP_ANTI 292 (insn_list:REG_DEP_ANTI 265 (insn_list:REG_DEP_TRUE 279 (insn_list:REG_DEP_TRUE 275 (insn_list:REG_DEP_TRUE 296 (insn_list:REG_DEP_ANTI 222 (insn_list:REG_DEP_TRUE 302 (insn_list:REG_DEP_ANTI 234 (insn_list:REG_DEP_ANTI 223 (insn_list:REG_DEP_TRUE 224 (insn_list:REG_DEP_TRUE 266 (insn_list:REG_DEP_TRUE 268 (insn_list:REG_DEP_TRUE 235 (insn_list:REG_DEP_TRUE 293 (insn_list:REG_DEP_TRUE 225 (insn_list:REG_DEP_TRUE 267 (insn_list:REG_DEP_TRUE 452 (nil))))))))))))))))))))))))))
    (nil))
;; End of basic block 29, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215

(barrier:HI 455 454 282)

;; Start of basic block 30, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 214 215
(code_label:HI 282 455 283 30 169 "" [1 uses])

(note:HI 283 282 287 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 287 283 465 30 (set (pc)
        (if_then_else (ne (reg:CC 214)
                (const_int 0 [0x0]))
            (label_ref/s 321)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 286 (insn_list:REG_DEP_ANTI 276 (insn_list:REG_DEP_ANTI 452 (insn_list:REG_DEP_ANTI 267 (insn_list:REG_DEP_OUTPUT 273 (nil))))))
    (expr_list:REG_BR_PROB (const_int 500 [0x1f4])
        (nil)))
;; End of basic block 30, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 214 215

;; Start of basic block 32, registers live: 1 [%r1] 31 [%r31] 67 [ap] 124 128 130 135 136 137 197 198 212 215
(code_label:HI 465 287 464 32 193 "" [3 uses])

(note:HI 464 465 294 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note:HI 294 464 292 32 NOTE_INSN_DELETED)

(insn:HI 292 294 293 32 (set (reg:SI 3 %r3 [ dir ])
        (reg/v/f:SI 137 [ dir ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn:HI 293 292 224 32 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("readdir") [flags 0x41] <function_decl 0x4025d000 readdir>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 292 (nil))
    (expr_list:REG_UNUSED (scratch:SI)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ dir ]))
        (nil)))

(insn:HI 224 293 296 32 (set (reg:SI 5 %r5)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 293 (nil))
    (nil))

(insn:HI 296 224 222 32 (parallel [
            (set (reg:CC 202)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 127 [ e ])
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 293 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 222 296 302 32 (set (reg:SI 3 %r3 [ name.74 ])
        (reg/v/f:SI 124 [ name.74 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 296 (insn_list:REG_DEP_OUTPUT 293 (nil)))
    (nil))

(insn:HI 302 222 297 32 (parallel [
            (set (reg:CC 203)
                (compare:CC (plus:SI (reg/v/f:SI 127 [ e ])
                        (const_int 20 [0x14]))
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 121 [ name.77 ])
                (plus:SI (reg/v/f:SI 127 [ e ])
                    (const_int 20 [0x14])))
        ]) 38 {*addsi3_internal3} (insn_list:REG_DEP_TRUE 296 (insn_list:REG_DEP_ANTI 293 (nil)))
    (expr_list:REG_DEAD (reg/v/f:SI 127 [ e ])
        (nil)))

(jump_insn:HI 297 302 299 32 (set (pc)
        (if_then_else (eq (reg:CC 202)
                (const_int 0 [0x0]))
            (label_ref/s 405)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 292 (insn_list:REG_DEP_TRUE 296 (insn_list:REG_DEP_ANTI 293 (nil))))
    (expr_list:REG_DEAD (reg:CC 202)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 32, registers live:
 1 [%r1] 3 [%r3] 5 [%r5] 31 [%r31] 67 [ap] 121 124 128 130 135 136 137 197 198 203 212 215

;; Start of basic block 33, registers live: 1 [%r1] 3 [%r3] 5 [%r5] 31 [%r31] 67 [ap] 121 124 128 130 135 136 137 197 198 203 212 215
(note:HI 299 297 300 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note:HI 300 299 223 33 NOTE_INSN_DELETED)

(insn:HI 223 300 303 33 (set (reg:SI 4 %r4 [ name.77 ])
        (reg/v/f:SI 121 [ name.77 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 293 (insn_list:REG_DEP_TRUE 302 (nil)))
    (nil))

(jump_insn:HI 303 223 386 33 (set (pc)
        (if_then_else (ne (reg:CC 203)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 302 (insn_list:REG_DEP_ANTI 297 (insn_list:REG_DEP_ANTI 293 (nil))))
    (expr_list:REG_DEAD (reg:CC 203)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 33, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 5 [%r5] 31 [%r31] 67 [ap] 121 124 128 130 135 136 137 197 198 212 215

(note:HI 386 303 306 NOTE_INSN_LOOP_END)

;; Start of basic block 34, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212
(note:HI 306 386 396 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:HI 396 306 456 34 (set (reg:CC 214)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 456 396 457 34 (set (pc)
        (label_ref 321)) 460 {jump} (insn_list:REG_DEP_TRUE 396 (nil))
    (nil))
;; End of basic block 34, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212 214

(barrier:HI 457 456 308)

;; Start of basic block 35, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 135 136 137 212 213
(code_label:HI 308 457 309 35 159 ("ohforgetit") [2 uses])

(note:HI 309 308 312 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 312 309 314 35 (set (pc)
        (if_then_else (ne (reg:CC 213)
                (const_int 0 [0x0]))
            (label_ref 318)
            (pc))) 452 {*rs6000.md:13839} (nil)
    (expr_list:REG_DEAD (reg:CC 213)
        (expr_list:REG_BR_PROB (const_int 8100 [0x1fa4])
            (nil))))
;; End of basic block 35, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 135 136 137 212

;; Start of basic block 36, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 135 136 212
(note:HI 314 312 397 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:HI 397 314 315 36 (set (reg:CC 214)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(insn:HI 315 397 458 36 (set (reg/v:SI 130 [ amatch ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 458 315 459 36 (set (pc)
        (label_ref 325)) 460 {jump} (insn_list:REG_DEP_TRUE 315 (insn_list:REG_DEP_TRUE 397 (nil)))
    (nil))
;; End of basic block 36, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 212 214

(barrier:HI 459 458 318)

;; Start of basic block 37, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 135 136 137 212
(code_label:HI 318 459 319 37 172 "" [1 uses])

(note:HI 319 318 398 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:HI 398 319 320 37 (set (reg:CC 214)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(insn:HI 320 398 460 37 (set (reg/v:SI 130 [ amatch ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 460 320 461 37 (set (pc)
        (label_ref 321)) 460 {jump} (insn_list:REG_DEP_TRUE 320 (insn_list:REG_DEP_TRUE 398 (nil)))
    (nil))
;; End of basic block 37, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212 214

(barrier:HI 461 460 405)

;; Start of basic block 38, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212
(code_label:HI 405 461 404 38 184 "" [1 uses])

(note:HI 404 405 395 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:HI 395 404 321 38 (set (reg:CC 214)
        (compare:CC (reg/v:SI 128 [ e ])
            (const_int -1 [0xffffffffffffffff]))) 368 {*cmpsi_internal1} (nil)
    (nil))
;; End of basic block 38, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212 214

;; Start of basic block 39, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 137 212 214
(code_label:HI 321 395 322 39 162 "" [4 uses])

(note:HI 322 321 323 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn:HI 323 322 324 39 (set (reg:SI 3 %r3 [ dir ])
        (reg/v/f:SI 137 [ dir ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 137 [ dir ])
        (nil)))

(call_insn:HI 324 323 325 39 (parallel [
            (call (mem:SI (symbol_ref:SI ("closedir") [flags 0x41] <function_decl 0x4025bd24 closedir>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 323 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ dir ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ dir ]))
        (nil)))
;; End of basic block 39, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 212 214

;; Start of basic block 40, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 212 214
(code_label:HI 325 324 326 40 174 "" [1 uses])

(note:HI 326 325 329 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 329 326 331 40 (set (pc)
        (if_then_else (eq (reg:CC 212)
                (const_int 0 [0x0]))
            (label_ref 334)
            (pc))) 452 {*rs6000.md:13839} (nil)
    (expr_list:REG_DEAD (reg:CC 212)
        (expr_list:REG_BR_PROB (const_int 1900 [0x76c])
            (nil))))
;; End of basic block 40, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 214

;; Start of basic block 41, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 136 214
(note:HI 331 329 332 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:HI 332 331 333 41 (set (reg:QI 206)
        (const_int 47 [0x2f])) 271 {*movqi_internal} (nil)
    (nil))

(insn:HI 333 332 334 41 (set (mem:QI (plus:SI (reg/v/f:SI 136 [ subwild ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 206)) 271 {*movqi_internal} (insn_list:REG_DEP_TRUE 332 (nil))
    (expr_list:REG_DEAD (reg:QI 206)
        (expr_list:REG_DEAD (reg/v/f:SI 136 [ subwild ])
            (expr_list:REG_EQUAL (const_int 47 [0x2f])
                (nil)))))
;; End of basic block 41, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 214

;; Start of basic block 42, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 214
(code_label:HI 334 333 335 42 175 "" [1 uses])

(note:HI 335 334 337 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:HI 337 335 338 42 (set (reg:CC 207)
        (compare:CC (reg/v/f:SI 135 [ newwhole ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (nil))

(jump_insn:HI 338 337 340 42 (set (pc)
        (if_then_else (eq (reg:CC 207)
                (const_int 0 [0x0]))
            (label_ref 343)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_TRUE 337 (nil))
    (expr_list:REG_DEAD (reg:CC 207)
        (expr_list:REG_BR_PROB (const_int 3537 [0xdd1])
            (nil))))
;; End of basic block 42, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 214

;; Start of basic block 43, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 135 214
(note:HI 340 338 341 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:HI 341 340 342 43 (set (reg:SI 3 %r3 [ newwhole ])
        (reg/v/f:SI 135 [ newwhole ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v/f:SI 135 [ newwhole ])
        (nil)))

(call_insn:HI 342 341 343 43 (parallel [
            (call (mem:SI (symbol_ref:SI ("free") [flags 0x41] <function_decl 0x4025fbc8 free>) [0 S4 A8])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 358 {*call_nonlocal_sysv} (insn_list:REG_DEP_TRUE 341 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3 [ newwhole ])
        (expr_list:REG_UNUSED (scratch:SI)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ newwhole ]))
        (nil)))
;; End of basic block 43, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130 214

;; Start of basic block 44, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128 130 214
(code_label:HI 343 342 344 44 177 "" [1 uses])

(note:HI 344 343 348 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(jump_insn:HI 348 344 350 44 (set (pc)
        (if_then_else (ne (reg:CC 214)
                (const_int 0 [0x0]))
            (label_ref 361)
            (pc))) 452 {*rs6000.md:13839} (nil)
    (expr_list:REG_DEAD (reg:CC 214)
        (expr_list:REG_BR_PROB (const_int 9833 [0x2669])
            (nil))))
;; End of basic block 44, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128 130

;; Start of basic block 45, registers live: 1 [%r1] 31 [%r31] 67 [ap] 130
(note:HI 350 348 351 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn:HI 351 350 355 45 (set (reg:CC 210)
        (compare:CC (reg/v:SI 130 [ amatch ])
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 130 [ amatch ])
        (nil)))

(insn:HI 355 351 352 45 (set (reg/v:SI 128 [ e ])
        (const_int 0 [0x0])) 268 {*movsi_internal1} (nil)
    (nil))

(jump_insn:HI 352 355 358 45 (set (pc)
        (if_then_else (ne (reg:CC 210)
                (const_int 0 [0x0]))
            (label_ref 361)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 355 (insn_list:REG_DEP_TRUE 351 (nil)))
    (expr_list:REG_DEAD (reg:CC 210)
        (expr_list:REG_BR_PROB (const_int 6700 [0x1a2c])
            (nil))))
;; End of basic block 45, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128

;; Start of basic block 46, registers live: 1 [%r1] 31 [%r31] 67 [ap]
(code_label:HI 358 352 359 46 139 "" [1 uses])

(note:HI 359 358 360 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:HI 360 359 361 46 (set (reg/v:SI 128 [ e ])
        (const_int -1 [0xffffffffffffffff])) 268 {*movsi_internal1} (nil)
    (nil))
;; End of basic block 46, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 128

;; Start of basic block 47, registers live: 1 [%r1] 31 [%r31] 67 [ap] 128
(code_label:HI 361 360 362 47 179 "" [2 uses])

(note:HI 362 361 366 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note:HI 366 362 369 47 NOTE_INSN_FUNCTION_END)

(insn:HI 369 366 375 47 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg/v:SI 128 [ e ])) 268 {*movsi_internal1} (nil)
    (expr_list:REG_DEAD (reg/v:SI 128 [ e ])
        (nil)))

(insn:HI 375 369 467 47 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 369 (nil))
    (nil))
;; End of basic block 47, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 467 375 0 47 NOTE_INSN_DELETED)


;; Function wild

;;   ======================================================
;;   -- basic block 0 from 3 to 17 -- before reload
;;   ======================================================

;;	  0--> 9    r124=high(`*.LC0')                 :iu1_6xx|iu2_6xx
;;	  1--> 12   %r4=r124+low(`*.LC0')              :iu1_6xx|iu2_6xx
;;	  2--> 3    r122=%r3                           :iu1_6xx|iu2_6xx
;;	  3--> 13   %r3=call [`strcmp']                :bpu_6xx
;;	  4--> 32   %r4=0x3a                           :iu1_6xx|iu2_6xx
;;	  5--> 16   r127=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  6--> 31   %r3=r122                           :iu1_6xx|iu2_6xx
;;	  7--> 23   %r5=0x0                            :iu1_6xx|iu2_6xx
;;	  8--> 41   r119=r122                          :iu1_6xx|iu2_6xx
;;	 10--> 17   pc={(r127!=0x0)?L28:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 10
;;   new head = 4
;;   new tail = 17

;;   ======================================================
;;   -- basic block 1 from 21 to 86 -- before reload
;;   ======================================================

;;	  0--> 21   %r3=r122                           :iu1_6xx|iu2_6xx
;;	  1--> 22   %r4=0x0                            :iu1_6xx|iu2_6xx
;;	  2--> 24   %r3=call [`newname']               :bpu_6xx
;;	  3--> 25   r120=%r3                           :iu1_6xx|iu2_6xx
;;	  4--> 86   pc=L68                             :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 4
;;   new head = 21
;;   new tail = 86

;;   ======================================================
;;   -- basic block 2 from 33 to 38 -- before reload
;;   ======================================================

;;	  0--> 33   %r3=call [`strchr']                :bpu_6xx
;;	  1--> 49   %r4=0x3a                           :iu1_6xx|iu2_6xx
;;	  2--> 37   {r130=cmp(%r3,0x0);r128=%r3;}      :iu1_6xx|iu2_6xx
;;	  7--> 38   pc={(r130==0x0)?L60:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 7
;;   new head = 34
;;   new tail = 38

;;   ======================================================
;;   -- basic block 3 from 47 to 54 -- before reload
;;   ======================================================

;;	  0--> 47   r119=r128+0x1                      :iu1_6xx|iu2_6xx
;;	  1--> 48   %r3=r119                           :iu1_6xx|iu2_6xx
;;	  2--> 50   %r3=call [`strchr']                :bpu_6xx
;;	  3--> 53   r133=cmp(%r3,0x0)                  :iu1_6xx|iu2_6xx
;;	  4--> 57   r120=0x10                          :iu1_6xx|iu2_6xx
;;	  8--> 54   pc={(r133!=0x0)?L68:pc}            :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 8
;;   new head = 51
;;   new tail = 54

;;   ======================================================
;;   -- basic block 5 from 76 to 82 -- before reload
;;   ======================================================

;;	  0--> 76   %r3=r120                           :iu1_6xx|iu2_6xx
;;	  1--> 82   use %r3                            :nothing
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 1
;;   new head = 76
;;   new tail = 82

;;   ======================================================
;;   -- basic block 4 from 63 to 65 -- before reload
;;   ======================================================

;;	  0--> 63   %r3=r122                           :iu1_6xx|iu2_6xx
;;	  1--> 64   %r4=r119                           :iu1_6xx|iu2_6xx
;;	  2--> 65   %r3=call [`wild_recurse']          :bpu_6xx
=== Finishing schedule.
;;	Ready list (final):  
;;   total time = 2
;;   new head = 63
;;   new tail = 65


;; Procedure interblock/speculative motions == 5/5 


(note:HI 2 0 6 NOTE_INSN_DELETED)

;; Start of basic block 0, registers live: 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap] 134
(note:HI 6 2 4 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(note:HI 4 6 10 0 NOTE_INSN_FUNCTION_BEG)

(note:HI 10 4 14 0 NOTE_INSN_DELETED)

(note:HI 14 10 9 0 NOTE_INSN_DELETED)

(insn:HI 9 14 12 0 (set (reg/f:SI 124)
        (high:SI (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>))) 263 {elf_high} (nil)
    (nil))

(insn:HI 12 9 3 0 (set (reg:SI 4 %r4)
        (lo_sum:SI (reg/f:SI 124)
            (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>))) 266 {elf_low} (insn_list:REG_DEP_TRUE 9 (nil))
    (expr_list:REG_DEAD (reg/f:SI 124)
        (expr_list:REG_EQUAL (symbol_ref/f:SI ("*.LC0") [flags 0x2] <string_cst 0x40415460>)
            (insn_list:REG_LIBCALL 13 (nil)))))

(insn:HI 3 12 13 0 (set (reg/v/f:SI 122 [ p ])
        (reg:SI 3 %r3 [ p ])) 268 {*movsi_internal1} (nil)
    (nil))

(call_insn/u:HI 13 3 32 0 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x401f04fc strcmp>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_TRUE 12 (nil)))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 12 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
                (nil)))))

(insn:HI 32 13 16 0 (set (reg:SI 4 %r4)
        (const_int 58 [0x3a])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_OUTPUT 12 (nil)))
    (nil))

(insn:HI 16 32 31 0 (set (reg:CC 127)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 13 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 31 16 23 0 (set (reg:SI 3 %r3 [ p ])
        (reg/v/f:SI 122 [ p ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 16 (insn_list:REG_DEP_OUTPUT 13 (insn_list:REG_DEP_TRUE 3 (nil))))
    (insn_list:REG_LIBCALL 33 (nil)))

(insn:HI 23 31 41 0 (set (reg:SI 5 %r5)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_OUTPUT 13 (nil))
    (nil))

(insn:HI 41 23 17 0 (set (reg/v/f:SI 119 [ use ])
        (reg/v/f:SI 122 [ p ])) 268 {*movsi_internal1} (insn_list:REG_DEP_TRUE 3 (nil))
    (nil))

(jump_insn:HI 17 41 19 0 (set (pc)
        (if_then_else (ne (reg:CC 127)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 3 (insn_list:REG_DEP_ANTI 9 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_ANTI 13 (nil))))))
    (expr_list:REG_DEAD (reg:CC 127)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 0, registers live:
 1 [%r1] 3 [%r3] 4 [%r4] 5 [%r5] 31 [%r31] 67 [ap] 119 122 134

;; Start of basic block 1, registers live: 1 [%r1] 5 [%r5] 31 [%r31] 67 [ap] 122
(note:HI 19 17 21 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(insn:HI 21 19 22 1 (set (reg:SI 3 %r3 [ p ])
        (reg/v/f:SI 122 [ p ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 16 (insn_list:REG_DEP_OUTPUT 13 (insn_list:REG_DEP_TRUE 3 (nil))))
    (expr_list:REG_DEAD (reg/v/f:SI 122 [ p ])
        (nil)))

(insn:HI 22 21 24 1 (set (reg:SI 4 %r4)
        (const_int 0 [0x0])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_OUTPUT 12 (nil)))
    (nil))

(call_insn:HI 24 22 25 1 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("newname") [flags 0x41] <function_decl 0x40285a6c newname>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 22 (insn_list:REG_DEP_TRUE 21 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_ANTI 17 (nil))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_DEAD (reg:SI 5 %r5)
            (expr_list:REG_UNUSED (scratch:SI)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 %r5))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
                (nil)))))

(insn:HI 25 24 86 1 (set (reg:SI 120 [ D.5156 ])
        (reg:SI 3 %r3)) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 24 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 86 25 87 1 (set (pc)
        (label_ref 68)) 460 {jump} (insn_list:REG_DEP_TRUE 16 (insn_list:REG_DEP_ANTI 17 (insn_list:REG_DEP_TRUE 9 (insn_list:REG_DEP_ANTI 12 (insn_list:REG_DEP_TRUE 3 (insn_list:REG_DEP_ANTI 21 (insn_list:REG_DEP_TRUE 23 (insn_list:REG_DEP_TRUE 22 (insn_list:REG_DEP_TRUE 25 (insn_list:REG_DEP_TRUE 13 (insn_list:REG_DEP_TRUE 24 (nil))))))))))))
    (nil))
;; End of basic block 1, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 120

(barrier:HI 87 86 28)

;; Start of basic block 2, registers live: 1 [%r1] 3 [%r3] 4 [%r4] 31 [%r31] 67 [ap] 119 122 134
(code_label:HI 28 87 29 2 202 "" [1 uses])

(note:HI 29 28 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note:HI 34 29 33 2 NOTE_INSN_DELETED)

(call_insn/u:HI 33 34 49 2 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x401f02b8 strchr>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 32 (insn_list:REG_DEP_TRUE 31 (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_ANTI 17 (nil)))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 31 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
                (nil)))))

(insn:HI 49 33 37 2 (set (reg:SI 4 %r4)
        (const_int 58 [0x3a])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_OUTPUT 32 (nil)))
    (nil))

(insn:HI 37 49 38 2 (parallel [
            (set (reg:CC 130)
                (compare:CC (reg:SI 3 %r3)
                    (const_int 0 [0x0])))
            (set (reg/f:SI 128)
                (reg:SI 3 %r3))
        ]) 269 {*movsi_internal2} (insn_list:REG_DEP_TRUE 33 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(jump_insn:HI 38 37 45 2 (set (pc)
        (if_then_else (eq (reg:CC 130)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 31 (insn_list:REG_DEP_ANTI 32 (insn_list:REG_DEP_ANTI 41 (insn_list:REG_DEP_TRUE 37 (insn_list:REG_DEP_ANTI 33 (nil))))))
    (expr_list:REG_DEAD (reg:CC 130)
        (expr_list:REG_BR_PROB (const_int 97 [0x61])
            (nil))))
;; End of basic block 2, registers live:
 1 [%r1] 4 [%r4] 31 [%r31] 67 [ap] 119 122 128 134

;; Start of basic block 3, registers live: 1 [%r1] 4 [%r4] 31 [%r31] 67 [ap] 122 128 134
(note:HI 45 38 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note:HI 51 45 47 3 NOTE_INSN_DELETED)

(insn:HI 47 51 48 3 (set (reg/v/f:SI 119 [ use ])
        (plus:SI (reg/f:SI 128)
            (const_int 1 [0x1]))) 36 {*addsi3_internal1} (insn_list:REG_DEP_OUTPUT 41 (insn_list:REG_DEP_TRUE 37 (nil)))
    (expr_list:REG_DEAD (reg/f:SI 128)
        (nil)))

(insn:HI 48 47 50 3 (set (reg:SI 3 %r3 [ use ])
        (reg/v/f:SI 119 [ use ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 37 (insn_list:REG_DEP_OUTPUT 33 (insn_list:REG_DEP_TRUE 47 (nil))))
    (insn_list:REG_LIBCALL 50 (nil)))

(call_insn/u:HI 50 48 53 3 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x401f02b8 strchr>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (scratch:SI))
        ]) 360 {*call_value_nonlocal_sysv} (insn_list:REG_DEP_TRUE 49 (insn_list:REG_DEP_TRUE 48 (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_ANTI 38 (insn_list:REG_DEP_ANTI 47 (nil))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4)
        (expr_list:REG_UNUSED (scratch:SI)
            (insn_list:REG_RETVAL 48 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (mem:BLK (scratch) [0 A8]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4))
            (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ use ]))
                (nil)))))

(insn:HI 53 50 57 3 (set (reg:CC 133)
        (compare:CC (reg:SI 3 %r3)
            (const_int 0 [0x0]))) 368 {*cmpsi_internal1} (insn_list:REG_DEP_TRUE 50 (nil))
    (expr_list:REG_DEAD (reg:SI 3 %r3)
        (nil)))

(insn:HI 57 53 54 3 (set (reg:SI 120 [ D.5156 ])
        (const_int 16 [0x10])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 50 (nil))
    (nil))

(jump_insn:HI 54 57 60 3 (set (pc)
        (if_then_else (ne (reg:CC 133)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 452 {*rs6000.md:13839} (insn_list:REG_DEP_ANTI 47 (insn_list:REG_DEP_ANTI 48 (insn_list:REG_DEP_ANTI 49 (insn_list:REG_DEP_ANTI 57 (insn_list:REG_DEP_TRUE 53 (insn_list:REG_DEP_ANTI 50 (nil)))))))
    (expr_list:REG_DEAD (reg:CC 133)
        (expr_list:REG_BR_PROB (const_int 6774 [0x1a76])
            (nil))))
;; End of basic block 3, registers live:
 1 [%r1] 31 [%r31] 67 [ap] 119 120 122 134

;; Start of basic block 4, registers live: 1 [%r1] 31 [%r31] 67 [ap] 119 122 134
(code_label:HI 60 54 61 4 207 "" [1 uses])

(note:HI 61 60 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:HI 63 61 64 4 (set (reg:SI 3 %r3 [ p ])
        (reg/v/f:SI 122 [ p ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 37 (insn_list:REG_DEP_ANTI 53 (insn_list:REG_DEP_OUTPUT 33 (insn_list:REG_DEP_OUTPUT 50 (insn_list:REG_DEP_TRUE 3 (nil))))))
    (expr_list:REG_DEAD (reg/v/f:SI 122 [ p ])
        (nil)))

(insn:HI 64 63 65 4 (set (reg:SI 4 %r4 [ use ])
        (reg/v/f:SI 119 [ use ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_ANTI 50 (insn_list:REG_DEP_OUTPUT 32 (insn_list:REG_DEP_OUTPUT 49 (insn_list:REG_DEP_TRUE 41 (insn_list:REG_DEP_TRUE 47 (nil)))))))
    (expr_list:REG_DEAD (reg/v/f:SI 119 [ use ])
        (nil)))

(call_insn/j:HI 65 64 66 4 (parallel [
            (set (reg:SI 3 %r3)
                (call (mem:SI (symbol_ref:SI ("wild_recurse") [flags 0x3] <function_decl 0x403b6d98 wild_recurse>) [0 S4 A8])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (use (reg:SI 134))
            (return)
        ]) 363 {*sibcall_value_local32} (insn_list:REG_DEP_ANTI 13 (insn_list:REG_DEP_TRUE 64 (insn_list:REG_DEP_TRUE 63 (insn_list:REG_DEP_ANTI 33 (insn_list:REG_DEP_ANTI 50 (insn_list:REG_DEP_ANTI 38 (insn_list:REG_DEP_ANTI 54 (nil))))))))
    (expr_list:REG_DEAD (reg:SI 4 %r4 [ use ])
        (expr_list:REG_DEAD (reg:SI 134)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 4 %r4 [ use ]))
        (expr_list:REG_DEP_TRUE (use (reg:SI 3 %r3 [ p ]))
            (nil))))
;; End of basic block 4, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(barrier:HI 66 65 68)

;; Start of basic block 5, registers live: 1 [%r1] 31 [%r31] 67 [ap] 120
(code_label:HI 68 66 69 5 204 "" [2 uses])

(note:HI 69 68 73 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note:HI 73 69 76 5 NOTE_INSN_FUNCTION_END)

(insn:HI 76 73 82 5 (set (reg/i:SI 3 %r3 [ <result> ])
        (reg:SI 120 [ D.5156 ])) 268 {*movsi_internal1} (insn_list:REG_DEP_ANTI 53 (insn_list:REG_DEP_OUTPUT 50 (insn_list:REG_DEP_TRUE 86 (insn_list:REG_DEP_TRUE 57 (nil)))))
    (expr_list:REG_DEAD (reg:SI 120 [ D.5156 ])
        (nil)))

(insn:HI 82 76 93 5 (use (reg/i:SI 3 %r3 [ <result> ])) -1 (insn_list:REG_DEP_TRUE 76 (nil))
    (nil))
;; End of basic block 5, registers live:
 1 [%r1] 3 [%r3] 31 [%r31] 67 [ap]

(note 93 82 0 5 NOTE_INSN_DELETED)

